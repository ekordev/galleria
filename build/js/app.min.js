var closedmondays=function(e){function t(i){if(a[i])return a[i].exports;var o=a[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var a={};return t.m=e,t.c=a,t.d=function(e,a,i){t.o(e,a)||Object.defineProperty(e,a,{configurable:!1,enumerable:!0,get:i})},t.n=function(e){var a=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(a,"a",a),a},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=4)}([function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.normalise=t.reverseVector=t.crossProduct=t.scaleVector=t.subtractVector=t.addVector=t.dotProduct=t.distanceBetween2D=t.distanceBetween=t.twoPi=t.pitchBetween=t.isVectorEqual=t.copyVector=t.getMagnitude2D=t.getMagnitude=t.getDistanceVec3=t.getDistanceVec2=t.getMagnitudeVec3=t.getYaw=t.getPitch=t.getNormalisedVec3=t.minAngleDifference=t.v3=void 0;var i=a(21),o=a(22);t.v3=i.v3,t.minAngleDifference=i.minAngleDifference,t.getNormalisedVec3=i.getNormalisedVec3,t.getPitch=i.getPitch,t.getYaw=i.getYaw,t.getMagnitudeVec3=i.getMagnitudeVec3,t.getDistanceVec2=i.getDistanceVec2,t.getDistanceVec3=i.getDistanceVec3,t.getMagnitude=o.getMagnitude,t.getMagnitude2D=o.getMagnitude2D,t.copyVector=o.copyVector,t.isVectorEqual=o.isVectorEqual,t.pitchBetween=o.pitchBetween,t.twoPi=o.twoPi,t.distanceBetween=o.distanceBetween,t.distanceBetween2D=o.distanceBetween2D,t.dotProduct=o.dotProduct,t.addVector=o.addVector,t.subtractVector=o.subtractVector,t.scaleVector=o.scaleVector,t.crossProduct=o.crossProduct,t.reverseVector=o.reverseVector,t.normalise=o.normalise},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Materials=t.Globals=void 0;var i=a(23),o=function(e){return e&&e.__esModule?e:{default:e}}(i),n=a(24);t.Globals=o.default,t.Materials=n.Materials},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TYPE_FOCAL=t.Focal=void 0;var i=a(0),o=a(1),n=function(e,t,a,i,o){this.id=e,this.type="TYPE_FOCAL",this.position=t,this.dimensions=a,this.eye=i,this.source=o,this.active=!1,this.init()};n.prototype={init:function(){this.pitch=(0,i.getPitch)(this.eye,new THREE.Vector3(this.position.x,this.position.y-o.Globals.player.height,this.position.z)),this.yaw=(0,i.getYaw)(this.eye,this.position),this.direction=Math.abs(Math.sin(this.yaw))<.5?"z":"x",this.object=new THREE.Mesh(new THREE.BoxBufferGeometry(this.dimensions.x,this.dimensions.y,this.dimensions.z),o.Materials.dev2),this.object.position.set(this.position.x,this.position.y,this.position.z),this.box=new THREE.Box3,this.setBox()},activate:function(){this.active=!0},deactivate:function(){this.active=!1},setBox:function(){var e=(0,i.subtractVector)(this.object.position,(0,i.scaleVector)(this.dimensions,.5)),t=(0,i.addVector)(this.object.position,(0,i.scaleVector)(this.dimensions,.5));this.box.set(e,t)},collision:function(e){return this.box.containsPoint(e)},scale:function(e,t,a){var i=o.Globals.artwork.clickBoxScale,n="z"==this.direction?.25:1,r="x"==this.direction?.25:1;this.dimensions.x*=e*i*r,this.dimensions.y*=t*i,this.dimensions.z*=a*i*n,this.object.scale.x=e*i*r,this.object.scale.y=t*i,this.object.scale.z=a*i*n,this.object.position.set(this.position.x-Math.sin(this.yaw)*(e*r*.5),this.position.y,this.position.z-Math.cos(this.yaw)*(a*n*.5)),this.setBox()}},t.Focal=n,t.TYPE_FOCAL="TYPE_FOCAL"},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=(a(1),function(e){this.basePath=e,this.init()});i.prototype={init:function(){this.materialLoader=new THREE.MTLLoader,this.objectLoader=new THREE.OBJLoader,this.materialLoader.setPath(this.basePath),this.objectLoader.setPath(this.basePath)},process:function(e,t){for(var a=0;a<e.children.length;a+=1){var i=e.children[a];t.materialsInfo[i.material.name];i.material=new THREE.MeshPhongMaterial({color:8947848})}},loadOBJ:function(e){var t=this;return new Promise(function(a,i){try{t.materialLoader.load(e+".mtl",function(i){i.preload(),t.objectLoader.load(e+".obj",function(e){t.process(e,i),a(e)})})}catch(e){i(e)}})}},t.default=i},function(e,t,a){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var o=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}(),n=a(5),r=a(7),s=function(){function e(){i(this,e),this.mode="8080"===window.location.port?"dev":"production",this.timer=new n.Timer,this.scene=new r.Scene,this.events(),this.resize(),$(".pre-loading").fadeOut(1e3),this.loading()}return o(e,[{key:"events",value:function(){var e=this;$(".nav-menu").on("click",function(e){var t=$($(e.currentTarget).data("menu"));t.hasClass("hidden")?($(".menu").removeClass("active").addClass("hidden"),t.addClass("active").removeClass("hidden")):$(".menu").removeClass("active").addClass("hidden")}),$(".menu-close").on("click",function(){$(".menu").removeClass("active").addClass("hidden")}),$(window).on("resize",function(){e.resize()}),$(window).on("focus",function(){e.paused=!1,e.loop()}),$(window).on("blur",function(){e.paused=!0})}},{key:"resize",value:function(){var e=Math.floor(window.innerWidth/2);this.scene.resize(e,520),$(".nav").css({top:window.innerHeight/2+260+"px"})}},{key:"loading",value:function(){var e=this;this.timer.update(),this.scene.isLoaded()||"dev"==this.mode?($("#nav-default").removeClass("hidden"),$(".loading").fadeOut(1e3),this.loop()):requestAnimationFrame(function(){e.loading()})}},{key:"loop",value:function(){var e=this;if(!this.paused){requestAnimationFrame(function(){e.loop()});var t=this.timer.getDelta();this.timer.update(),this.scene.update(t),this.scene.render(t)}}}]),e}();window.onload=function(){new s}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Timer=void 0;var i=a(6),o=function(e){return e&&e.__esModule?e:{default:e}}(i);t.Timer=o.default},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(){this.maxDelta=1/30,this.reset()};i.prototype={update:function(){this.then=this.now,this.now=(new Date).getTime(),this.delta=(this.now-this.then)/1e3},getDelta:function(){return this.delta>this.maxDelta?this.maxDelta:this.delta},reset:function(){this.now=(new Date).getTime(),this.then=this.now}},t.default=i},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Scene=void 0;var i=a(8),o=function(e){return e&&e.__esModule?e:{default:e}}(i);t.Scene=o.default},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),a(9);var i=a(20),o=function(e){return e&&e.__esModule?e:{default:e}}(i),n=(a(1),a(26)),r=(a(0),a(28)),s=function(){this.init()};s.prototype={init:function(){var e=(1==(new Date).getDay()||"#monday"==window.location.hash)&&"#tuesday"!=window.location.hash;this.renderer=new THREE.WebGLRenderer({antialias:!1}),this.renderer.setClearColor(16377250,1),this.renderer.setPixelRatio(window.devicePixelRatio),$(".wrapper .content").append(this.renderer.domElement),this.player=new o.default(this.renderer.domElement),this.camera=this.player.camera,this.scene=new THREE.Scene,this.scene.fog=new THREE.FogExp2(13422591,.008),this.collider=new Collider.System,this.roomLoader=new r.RoomLoader(this.scene,this.collider,e),this.resize(),this.lightHandler=new r.LightHandler(this.scene,this.player),this.lightHandler.load(e),this.artworks=new n.Artworks,this.postprocessing()},isLoaded:function(){return this.roomLoader.isLoaded()&&0===this.artworks.toLoad},resize:function(e,t){this.camera.aspect=e/t,this.camera.updateProjectionMatrix(),this.renderer.setSize(e,t),this.width=e,this.height=t},postprocessing:function(){this.renderPass=new THREE.RenderPass(this.scene,this.camera),this.mechanicsPass=new THREE.MechanicsPass(this.size),this.bloomPass=new THREE.UnrealBloomPass(this.size,.75,1.2,.9),this.bloomPass.renderToScreen=!0,this.composer=new THREE.EffectComposer(this.renderer),this.composer.setSize(this.width,this.height),this.composer.addPass(this.renderPass),this.composer.addPass(this.mechanicsPass),this.composer.addPass(this.bloomPass)},update:function(e){this.player.update(e,this.collider,this.artworks)},render:function(e){this.composer.render(e)}},t.default=s},function(e,t,a){"use strict";a(10),a(11),a(12),a(13),a(14),a(15),a(16),a(17),a(18),a(19)},function(e,t,a){"use strict";THREE.CopyShader={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","gl_FragColor = opacity * texel;","}"].join("\n")}},function(e,t,a){"use strict";THREE.EffectComposer=function(e,t){if(this.renderer=e,void 0===t){var a={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,stencilBuffer:!1},i=e.getDrawingBufferSize();t=new THREE.WebGLRenderTarget(i.width,i.height,a),t.texture.name="EffectComposer.rt1"}this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.passes=[],void 0===THREE.CopyShader&&console.error("THREE.EffectComposer relies on THREE.CopyShader"),void 0===THREE.ShaderPass&&console.error("THREE.EffectComposer relies on THREE.ShaderPass"),this.copyPass=new THREE.ShaderPass(THREE.CopyShader)},Object.assign(THREE.EffectComposer.prototype,{swapBuffers:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e},addPass:function(e){this.passes.push(e);var t=this.renderer.getDrawingBufferSize();e.setSize(t.width,t.height)},insertPass:function(e,t){this.passes.splice(t,0,e)},render:function(e){var t,a,i=!1,o=this.passes.length;for(a=0;a<o;a++)if(t=this.passes[a],!1!==t.enabled){if(t.render(this.renderer,this.writeBuffer,this.readBuffer,e,i),t.needsSwap){if(i){var n=this.renderer.context;n.stencilFunc(n.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),n.stencilFunc(n.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==THREE.MaskPass&&(t instanceof THREE.MaskPass?i=!0:t instanceof THREE.ClearMaskPass&&(i=!1))}},reset:function(e){if(void 0===e){var t=this.renderer.getDrawingBufferSize();e=this.renderTarget1.clone(),e.setSize(t.width,t.height)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2},setSize:function(e,t){this.renderTarget1.setSize(e,t),this.renderTarget2.setSize(e,t);for(var a=0;a<this.passes.length;a++)this.passes[a].setSize(e,t)}}),THREE.Pass=function(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1},Object.assign(THREE.Pass.prototype,{setSize:function(e,t){},render:function(e,t,a,i,o){console.error("THREE.Pass: .render() must be implemented in derived pass.")}})},function(e,t,a){"use strict";THREE.FXAAShader={uniforms:{tDiffuse:{value:null},resolution:{value:new THREE.Vector2(1/1024,1/512)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["precision highp float;","","uniform sampler2D tDiffuse;","","uniform vec2 resolution;","","varying vec2 vUv;","","// FXAA 3.11 implementation by NVIDIA, ported to WebGL by Agost Biro (biro@archilogic.com)","","//----------------------------------------------------------------------------------","// File:        es3-keplerFXAAassetsshaders/FXAA_DefaultES.frag","// SDK Version: v3.00","// Email:       gameworks@nvidia.com","// Site:        http://developer.nvidia.com/","//","// Copyright (c) 2014-2015, NVIDIA CORPORATION. All rights reserved.","//","// Redistribution and use in source and binary forms, with or without","// modification, are permitted provided that the following conditions","// are met:","//  * Redistributions of source code must retain the above copyright","//    notice, this list of conditions and the following disclaimer.","//  * Redistributions in binary form must reproduce the above copyright","//    notice, this list of conditions and the following disclaimer in the","//    documentation and/or other materials provided with the distribution.","//  * Neither the name of NVIDIA CORPORATION nor the names of its","//    contributors may be used to endorse or promote products derived","//    from this software without specific prior written permission.","//","// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY","// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE","// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR","// PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR","// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,","// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,","// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR","// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY","// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT","// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE","// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","//","//----------------------------------------------------------------------------------","","#define FXAA_PC 1","#define FXAA_GLSL_100 1","#define FXAA_QUALITY_PRESET 12","","#define FXAA_GREEN_AS_LUMA 1","","/*--------------------------------------------------------------------------*/","#ifndef FXAA_PC_CONSOLE","    //","    // The console algorithm for PC is included","    // for developers targeting really low spec machines.","    // Likely better to just run FXAA_PC, and use a really low preset.","    //","    #define FXAA_PC_CONSOLE 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_GLSL_120","    #define FXAA_GLSL_120 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_GLSL_130","    #define FXAA_GLSL_130 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_HLSL_3","    #define FXAA_HLSL_3 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_HLSL_4","    #define FXAA_HLSL_4 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_HLSL_5","    #define FXAA_HLSL_5 0","#endif","/*==========================================================================*/","#ifndef FXAA_GREEN_AS_LUMA","    //","    // For those using non-linear color,","    // and either not able to get luma in alpha, or not wanting to,","    // this enables FXAA to run using green as a proxy for luma.","    // So with this enabled, no need to pack luma in alpha.","    //","    // This will turn off AA on anything which lacks some amount of green.","    // Pure red and blue or combination of only R and B, will get no AA.","    //","    // Might want to lower the settings for both,","    //    fxaaConsoleEdgeThresholdMin","    //    fxaaQualityEdgeThresholdMin","    // In order to insure AA does not get turned off on colors","    // which contain a minor amount of green.","    //","    // 1 = On.","    // 0 = Off.","    //","    #define FXAA_GREEN_AS_LUMA 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_EARLY_EXIT","    //","    // Controls algorithm's early exit path.","    // On PS3 turning this ON adds 2 cycles to the shader.","    // On 360 turning this OFF adds 10ths of a millisecond to the shader.","    // Turning this off on console will result in a more blurry image.","    // So this defaults to on.","    //","    // 1 = On.","    // 0 = Off.","    //","    #define FXAA_EARLY_EXIT 1","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_DISCARD","    //","    // Only valid for PC OpenGL currently.","    // Probably will not work when FXAA_GREEN_AS_LUMA = 1.","    //","    // 1 = Use discard on pixels which don't need AA.","    //     For APIs which enable concurrent TEX+ROP from same surface.","    // 0 = Return unchanged color on pixels which don't need AA.","    //","    #define FXAA_DISCARD 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_FAST_PIXEL_OFFSET","    //","    // Used for GLSL 120 only.","    //","    // 1 = GL API supports fast pixel offsets","    // 0 = do not use fast pixel offsets","    //","    #ifdef GL_EXT_gpu_shader4","        #define FXAA_FAST_PIXEL_OFFSET 1","    #endif","    #ifdef GL_NV_gpu_shader5","        #define FXAA_FAST_PIXEL_OFFSET 1","    #endif","    #ifdef GL_ARB_gpu_shader5","        #define FXAA_FAST_PIXEL_OFFSET 1","    #endif","    #ifndef FXAA_FAST_PIXEL_OFFSET","        #define FXAA_FAST_PIXEL_OFFSET 0","    #endif","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_GATHER4_ALPHA","    //","    // 1 = API supports gather4 on alpha channel.","    // 0 = API does not support gather4 on alpha channel.","    //","    #if (FXAA_HLSL_5 == 1)","        #define FXAA_GATHER4_ALPHA 1","    #endif","    #ifdef GL_ARB_gpu_shader5","        #define FXAA_GATHER4_ALPHA 1","    #endif","    #ifdef GL_NV_gpu_shader5","        #define FXAA_GATHER4_ALPHA 1","    #endif","    #ifndef FXAA_GATHER4_ALPHA","        #define FXAA_GATHER4_ALPHA 0","    #endif","#endif","","","/*============================================================================","                        FXAA QUALITY - TUNING KNOBS","------------------------------------------------------------------------------","NOTE the other tuning knobs are now in the shader function inputs!","============================================================================*/","#ifndef FXAA_QUALITY_PRESET","    //","    // Choose the quality preset.","    // This needs to be compiled into the shader as it effects code.","    // Best option to include multiple presets is to","    // in each shader define the preset, then include this file.","    //","    // OPTIONS","    // -----------------------------------------------------------------------","    // 10 to 15 - default medium dither (10=fastest, 15=highest quality)","    // 20 to 29 - less dither, more expensive (20=fastest, 29=highest quality)","    // 39       - no dither, very expensive","    //","    // NOTES","    // -----------------------------------------------------------------------","    // 12 = slightly faster then FXAA 3.9 and higher edge quality (default)","    // 13 = about same speed as FXAA 3.9 and better than 12","    // 23 = closest to FXAA 3.9 visually and performance wise","    //  _ = the lowest digit is directly related to performance","    // _  = the highest digit is directly related to style","    //","    #define FXAA_QUALITY_PRESET 12","#endif","","","/*============================================================================","","                           FXAA QUALITY - PRESETS","","============================================================================*/","","/*============================================================================","                     FXAA QUALITY - MEDIUM DITHER PRESETS","============================================================================*/","#if (FXAA_QUALITY_PRESET == 10)","    #define FXAA_QUALITY_PS 3","    #define FXAA_QUALITY_P0 1.5","    #define FXAA_QUALITY_P1 3.0","    #define FXAA_QUALITY_P2 12.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 11)","    #define FXAA_QUALITY_PS 4","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 3.0","    #define FXAA_QUALITY_P3 12.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 12)","    #define FXAA_QUALITY_PS 5","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 4.0","    #define FXAA_QUALITY_P4 12.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 13)","    #define FXAA_QUALITY_PS 6","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 4.0","    #define FXAA_QUALITY_P5 12.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 14)","    #define FXAA_QUALITY_PS 7","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 4.0","    #define FXAA_QUALITY_P6 12.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 15)","    #define FXAA_QUALITY_PS 8","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 4.0","    #define FXAA_QUALITY_P7 12.0","#endif","","/*============================================================================","                     FXAA QUALITY - LOW DITHER PRESETS","============================================================================*/","#if (FXAA_QUALITY_PRESET == 20)","    #define FXAA_QUALITY_PS 3","    #define FXAA_QUALITY_P0 1.5","    #define FXAA_QUALITY_P1 2.0","    #define FXAA_QUALITY_P2 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 21)","    #define FXAA_QUALITY_PS 4","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 22)","    #define FXAA_QUALITY_PS 5","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 23)","    #define FXAA_QUALITY_PS 6","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 24)","    #define FXAA_QUALITY_PS 7","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 3.0","    #define FXAA_QUALITY_P6 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 25)","    #define FXAA_QUALITY_PS 8","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 4.0","    #define FXAA_QUALITY_P7 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 26)","    #define FXAA_QUALITY_PS 9","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 2.0","    #define FXAA_QUALITY_P7 4.0","    #define FXAA_QUALITY_P8 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 27)","    #define FXAA_QUALITY_PS 10","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 2.0","    #define FXAA_QUALITY_P7 2.0","    #define FXAA_QUALITY_P8 4.0","    #define FXAA_QUALITY_P9 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 28)","    #define FXAA_QUALITY_PS 11","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 2.0","    #define FXAA_QUALITY_P7 2.0","    #define FXAA_QUALITY_P8 2.0","    #define FXAA_QUALITY_P9 4.0","    #define FXAA_QUALITY_P10 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 29)","    #define FXAA_QUALITY_PS 12","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 2.0","    #define FXAA_QUALITY_P7 2.0","    #define FXAA_QUALITY_P8 2.0","    #define FXAA_QUALITY_P9 2.0","    #define FXAA_QUALITY_P10 4.0","    #define FXAA_QUALITY_P11 8.0","#endif","","/*============================================================================","                     FXAA QUALITY - EXTREME QUALITY","============================================================================*/","#if (FXAA_QUALITY_PRESET == 39)","    #define FXAA_QUALITY_PS 12","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.0","    #define FXAA_QUALITY_P2 1.0","    #define FXAA_QUALITY_P3 1.0","    #define FXAA_QUALITY_P4 1.0","    #define FXAA_QUALITY_P5 1.5","    #define FXAA_QUALITY_P6 2.0","    #define FXAA_QUALITY_P7 2.0","    #define FXAA_QUALITY_P8 2.0","    #define FXAA_QUALITY_P9 2.0","    #define FXAA_QUALITY_P10 4.0","    #define FXAA_QUALITY_P11 8.0","#endif","","","","/*============================================================================","","                                API PORTING","","============================================================================*/","#if (FXAA_GLSL_100 == 1) || (FXAA_GLSL_120 == 1) || (FXAA_GLSL_130 == 1)","    #define FxaaBool bool","    #define FxaaDiscard discard","    #define FxaaFloat float","    #define FxaaFloat2 vec2","    #define FxaaFloat3 vec3","    #define FxaaFloat4 vec4","    #define FxaaHalf float","    #define FxaaHalf2 vec2","    #define FxaaHalf3 vec3","    #define FxaaHalf4 vec4","    #define FxaaInt2 ivec2","    #define FxaaSat(x) clamp(x, 0.0, 1.0)","    #define FxaaTex sampler2D","#else","    #define FxaaBool bool","    #define FxaaDiscard clip(-1)","    #define FxaaFloat float","    #define FxaaFloat2 float2","    #define FxaaFloat3 float3","    #define FxaaFloat4 float4","    #define FxaaHalf half","    #define FxaaHalf2 half2","    #define FxaaHalf3 half3","    #define FxaaHalf4 half4","    #define FxaaSat(x) saturate(x)","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_GLSL_100 == 1)","  #define FxaaTexTop(t, p) texture2D(t, p, 0.0)","  #define FxaaTexOff(t, p, o, r) texture2D(t, p + (o * r), 0.0)","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_GLSL_120 == 1)","    // Requires,","    //  #version 120","    // And at least,","    //  #extension GL_EXT_gpu_shader4 : enable","    //  (or set FXAA_FAST_PIXEL_OFFSET 1 to work like DX9)","    #define FxaaTexTop(t, p) texture2DLod(t, p, 0.0)","    #if (FXAA_FAST_PIXEL_OFFSET == 1)","        #define FxaaTexOff(t, p, o, r) texture2DLodOffset(t, p, 0.0, o)","    #else","        #define FxaaTexOff(t, p, o, r) texture2DLod(t, p + (o * r), 0.0)","    #endif","    #if (FXAA_GATHER4_ALPHA == 1)","        // use #extension GL_ARB_gpu_shader5 : enable","        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)","        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)","        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)","        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)","    #endif","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_GLSL_130 == 1)",'    // Requires "#version 130" or better',"    #define FxaaTexTop(t, p) textureLod(t, p, 0.0)","    #define FxaaTexOff(t, p, o, r) textureLodOffset(t, p, 0.0, o)","    #if (FXAA_GATHER4_ALPHA == 1)","        // use #extension GL_ARB_gpu_shader5 : enable","        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)","        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)","        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)","        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)","    #endif","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_HLSL_3 == 1)","    #define FxaaInt2 float2","    #define FxaaTex sampler2D","    #define FxaaTexTop(t, p) tex2Dlod(t, float4(p, 0.0, 0.0))","    #define FxaaTexOff(t, p, o, r) tex2Dlod(t, float4(p + (o * r), 0, 0))","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_HLSL_4 == 1)","    #define FxaaInt2 int2","    struct FxaaTex { SamplerState smpl; Texture2D tex; };","    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)","    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_HLSL_5 == 1)","    #define FxaaInt2 int2","    struct FxaaTex { SamplerState smpl; Texture2D tex; };","    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)","    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)","    #define FxaaTexAlpha4(t, p) t.tex.GatherAlpha(t.smpl, p)","    #define FxaaTexOffAlpha4(t, p, o) t.tex.GatherAlpha(t.smpl, p, o)","    #define FxaaTexGreen4(t, p) t.tex.GatherGreen(t.smpl, p)","    #define FxaaTexOffGreen4(t, p, o) t.tex.GatherGreen(t.smpl, p, o)","#endif","","","/*============================================================================","                   GREEN AS LUMA OPTION SUPPORT FUNCTION","============================================================================*/","#if (FXAA_GREEN_AS_LUMA == 0)","    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.w; }","#else","    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.y; }","#endif","","","","","/*============================================================================","","                             FXAA3 QUALITY - PC","","============================================================================*/","#if (FXAA_PC == 1)","/*--------------------------------------------------------------------------*/","FxaaFloat4 FxaaPixelShader(","    //","    // Use noperspective interpolation here (turn off perspective interpolation).","    // {xy} = center of pixel","    FxaaFloat2 pos,","    //","    // Used only for FXAA Console, and not used on the 360 version.","    // Use noperspective interpolation here (turn off perspective interpolation).","    // {xy_} = upper left of pixel","    // {_zw} = lower right of pixel","    FxaaFloat4 fxaaConsolePosPos,","    //","    // Input color texture.","    // {rgb_} = color in linear or perceptual color space","    // if (FXAA_GREEN_AS_LUMA == 0)","    //     {__a} = luma in perceptual color space (not linear)","    FxaaTex tex,","    //","    // Only used on the optimized 360 version of FXAA Console.",'    // For everything but 360, just use the same input here as for "tex".',"    // For 360, same texture, just alias with a 2nd sampler.","    // This sampler needs to have an exponent bias of -1.","    FxaaTex fxaaConsole360TexExpBiasNegOne,","    //","    // Only used on the optimized 360 version of FXAA Console.",'    // For everything but 360, just use the same input here as for "tex".',"    // For 360, same texture, just alias with a 3nd sampler.","    // This sampler needs to have an exponent bias of -2.","    FxaaTex fxaaConsole360TexExpBiasNegTwo,","    //","    // Only used on FXAA Quality.","    // This must be from a constant/uniform.","    // {x_} = 1.0/screenWidthInPixels","    // {_y} = 1.0/screenHeightInPixels","    FxaaFloat2 fxaaQualityRcpFrame,","    //","    // Only used on FXAA Console.","    // This must be from a constant/uniform.","    // This effects sub-pixel AA quality and inversely sharpness.","    //   Where N ranges between,","    //     N = 0.50 (default)","    //     N = 0.33 (sharper)","    // {x__} = -N/screenWidthInPixels","    // {_y_} = -N/screenHeightInPixels","    // {_z_} =  N/screenWidthInPixels","    // {__w} =  N/screenHeightInPixels","    FxaaFloat4 fxaaConsoleRcpFrameOpt,","    //","    // Only used on FXAA Console.","    // Not used on 360, but used on PS3 and PC.","    // This must be from a constant/uniform.","    // {x__} = -2.0/screenWidthInPixels","    // {_y_} = -2.0/screenHeightInPixels","    // {_z_} =  2.0/screenWidthInPixels","    // {__w} =  2.0/screenHeightInPixels","    FxaaFloat4 fxaaConsoleRcpFrameOpt2,","    //","    // Only used on FXAA Console.","    // Only used on 360 in place of fxaaConsoleRcpFrameOpt2.","    // This must be from a constant/uniform.","    // {x__} =  8.0/screenWidthInPixels","    // {_y_} =  8.0/screenHeightInPixels","    // {_z_} = -4.0/screenWidthInPixels","    // {__w} = -4.0/screenHeightInPixels","    FxaaFloat4 fxaaConsole360RcpFrameOpt2,","    //","    // Only used on FXAA Quality.","    // This used to be the FXAA_QUALITY_SUBPIX define.","    // It is here now to allow easier tuning.","    // Choose the amount of sub-pixel aliasing removal.","    // This can effect sharpness.","    //   1.00 - upper limit (softer)","    //   0.75 - default amount of filtering","    //   0.50 - lower limit (sharper, less sub-pixel aliasing removal)","    //   0.25 - almost off","    //   0.00 - completely off","    FxaaFloat fxaaQualitySubpix,","    //","    // Only used on FXAA Quality.","    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD define.","    // It is here now to allow easier tuning.","    // The minimum amount of local contrast required to apply algorithm.","    //   0.333 - too little (faster)","    //   0.250 - low quality","    //   0.166 - default","    //   0.125 - high quality","    //   0.063 - overkill (slower)","    FxaaFloat fxaaQualityEdgeThreshold,","    //","    // Only used on FXAA Quality.","    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD_MIN define.","    // It is here now to allow easier tuning.","    // Trims the algorithm from processing darks.","    //   0.0833 - upper limit (default, the start of visible unfiltered edges)","    //   0.0625 - high quality (faster)","    //   0.0312 - visible limit (slower)","    // Special notes when using FXAA_GREEN_AS_LUMA,","    //   Likely want to set this to zero.","    //   As colors that are mostly not-green","    //   will appear very dark in the green channel!","    //   Tune by looking at mostly non-green content,","    //   then start at zero and increase until aliasing is a problem.","    FxaaFloat fxaaQualityEdgeThresholdMin,","    //","    // Only used on FXAA Console.","    // This used to be the FXAA_CONSOLE_EDGE_SHARPNESS define.","    // It is here now to allow easier tuning.","    // This does not effect PS3, as this needs to be compiled in.","    //   Use FXAA_CONSOLE_PS3_EDGE_SHARPNESS for PS3.","    //   Due to the PS3 being ALU bound,","    //   there are only three safe values here: 2 and 4 and 8.","    //   These options use the shaders ability to a free *|/ by 2|4|8.","    // For all other platforms can be a non-power of two.","    //   8.0 is sharper (default!!!)","    //   4.0 is softer","    //   2.0 is really soft (good only for vector graphics inputs)","    FxaaFloat fxaaConsoleEdgeSharpness,","    //","    // Only used on FXAA Console.","    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD define.","    // It is here now to allow easier tuning.","    // This does not effect PS3, as this needs to be compiled in.","    //   Use FXAA_CONSOLE_PS3_EDGE_THRESHOLD for PS3.","    //   Due to the PS3 being ALU bound,","    //   there are only two safe values here: 1/4 and 1/8.","    //   These options use the shaders ability to a free *|/ by 2|4|8.","    // The console setting has a different mapping than the quality setting.","    // Other platforms can use other values.","    //   0.125 leaves less aliasing, but is softer (default!!!)","    //   0.25 leaves more aliasing, and is sharper","    FxaaFloat fxaaConsoleEdgeThreshold,","    //","    // Only used on FXAA Console.","    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD_MIN define.","    // It is here now to allow easier tuning.","    // Trims the algorithm from processing darks.","    // The console setting has a different mapping than the quality setting.","    // This only applies when FXAA_EARLY_EXIT is 1.","    // This does not apply to PS3,","    // PS3 was simplified to avoid more shader instructions.","    //   0.06 - faster but more aliasing in darks","    //   0.05 - default","    //   0.04 - slower and less aliasing in darks","    // Special notes when using FXAA_GREEN_AS_LUMA,","    //   Likely want to set this to zero.","    //   As colors that are mostly not-green","    //   will appear very dark in the green channel!","    //   Tune by looking at mostly non-green content,","    //   then start at zero and increase until aliasing is a problem.","    FxaaFloat fxaaConsoleEdgeThresholdMin,","    //","    // Extra constants for 360 FXAA Console only.","    // Use zeros or anything else for other platforms.","    // These must be in physical constant registers and NOT immedates.","    // Immedates will result in compiler un-optimizing.","    // {xyzw} = float4(1.0, -1.0, 0.25, -0.25)","    FxaaFloat4 fxaaConsole360ConstDir",") {","/*--------------------------------------------------------------------------*/","    FxaaFloat2 posM;","    posM.x = pos.x;","    posM.y = pos.y;","    #if (FXAA_GATHER4_ALPHA == 1)","        #if (FXAA_DISCARD == 0)","            FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);","            #if (FXAA_GREEN_AS_LUMA == 0)","                #define lumaM rgbyM.w","            #else","                #define lumaM rgbyM.y","            #endif","        #endif","        #if (FXAA_GREEN_AS_LUMA == 0)","            FxaaFloat4 luma4A = FxaaTexAlpha4(tex, posM);","            FxaaFloat4 luma4B = FxaaTexOffAlpha4(tex, posM, FxaaInt2(-1, -1));","        #else","            FxaaFloat4 luma4A = FxaaTexGreen4(tex, posM);","            FxaaFloat4 luma4B = FxaaTexOffGreen4(tex, posM, FxaaInt2(-1, -1));","        #endif","        #if (FXAA_DISCARD == 1)","            #define lumaM luma4A.w","        #endif","        #define lumaE luma4A.z","        #define lumaS luma4A.x","        #define lumaSE luma4A.y","        #define lumaNW luma4B.w","        #define lumaN luma4B.z","        #define lumaW luma4B.x","    #else","        FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);","        #if (FXAA_GREEN_AS_LUMA == 0)","            #define lumaM rgbyM.w","        #else","            #define lumaM rgbyM.y","        #endif","        #if (FXAA_GLSL_100 == 1)","          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0, 1.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 0.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0,-1.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 0.0), fxaaQualityRcpFrame.xy));","        #else","          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0, 1), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0,-1), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 0), fxaaQualityRcpFrame.xy));","        #endif","    #endif","/*--------------------------------------------------------------------------*/","    FxaaFloat maxSM = max(lumaS, lumaM);","    FxaaFloat minSM = min(lumaS, lumaM);","    FxaaFloat maxESM = max(lumaE, maxSM);","    FxaaFloat minESM = min(lumaE, minSM);","    FxaaFloat maxWN = max(lumaN, lumaW);","    FxaaFloat minWN = min(lumaN, lumaW);","    FxaaFloat rangeMax = max(maxWN, maxESM);","    FxaaFloat rangeMin = min(minWN, minESM);","    FxaaFloat rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;","    FxaaFloat range = rangeMax - rangeMin;","    FxaaFloat rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);","    FxaaBool earlyExit = range < rangeMaxClamped;","/*--------------------------------------------------------------------------*/","    if(earlyExit)","        #if (FXAA_DISCARD == 1)","            FxaaDiscard;","        #else","            return rgbyM;","        #endif","/*--------------------------------------------------------------------------*/","    #if (FXAA_GATHER4_ALPHA == 0)","        #if (FXAA_GLSL_100 == 1)","          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0,-1.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 1.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0,-1.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 1.0), fxaaQualityRcpFrame.xy));","        #else","          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1,-1), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 1), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1,-1), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));","        #endif","    #else","        FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(1, -1), fxaaQualityRcpFrame.xy));","        FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));","    #endif","/*--------------------------------------------------------------------------*/","    FxaaFloat lumaNS = lumaN + lumaS;","    FxaaFloat lumaWE = lumaW + lumaE;","    FxaaFloat subpixRcpRange = 1.0/range;","    FxaaFloat subpixNSWE = lumaNS + lumaWE;","    FxaaFloat edgeHorz1 = (-2.0 * lumaM) + lumaNS;","    FxaaFloat edgeVert1 = (-2.0 * lumaM) + lumaWE;","/*--------------------------------------------------------------------------*/","    FxaaFloat lumaNESE = lumaNE + lumaSE;","    FxaaFloat lumaNWNE = lumaNW + lumaNE;","    FxaaFloat edgeHorz2 = (-2.0 * lumaE) + lumaNESE;","    FxaaFloat edgeVert2 = (-2.0 * lumaN) + lumaNWNE;","/*--------------------------------------------------------------------------*/","    FxaaFloat lumaNWSW = lumaNW + lumaSW;","    FxaaFloat lumaSWSE = lumaSW + lumaSE;","    FxaaFloat edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);","    FxaaFloat edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);","    FxaaFloat edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;","    FxaaFloat edgeVert3 = (-2.0 * lumaS) + lumaSWSE;","    FxaaFloat edgeHorz = abs(edgeHorz3) + edgeHorz4;","    FxaaFloat edgeVert = abs(edgeVert3) + edgeVert4;","/*--------------------------------------------------------------------------*/","    FxaaFloat subpixNWSWNESE = lumaNWSW + lumaNESE;","    FxaaFloat lengthSign = fxaaQualityRcpFrame.x;","    FxaaBool horzSpan = edgeHorz >= edgeVert;","    FxaaFloat subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;","/*--------------------------------------------------------------------------*/","    if(!horzSpan) lumaN = lumaW;","    if(!horzSpan) lumaS = lumaE;","    if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;","    FxaaFloat subpixB = (subpixA * (1.0/12.0)) - lumaM;","/*--------------------------------------------------------------------------*/","    FxaaFloat gradientN = lumaN - lumaM;","    FxaaFloat gradientS = lumaS - lumaM;","    FxaaFloat lumaNN = lumaN + lumaM;","    FxaaFloat lumaSS = lumaS + lumaM;","    FxaaBool pairN = abs(gradientN) >= abs(gradientS);","    FxaaFloat gradient = max(abs(gradientN), abs(gradientS));","    if(pairN) lengthSign = -lengthSign;","    FxaaFloat subpixC = FxaaSat(abs(subpixB) * subpixRcpRange);","/*--------------------------------------------------------------------------*/","    FxaaFloat2 posB;","    posB.x = posM.x;","    posB.y = posM.y;","    FxaaFloat2 offNP;","    offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;","    offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;","    if(!horzSpan) posB.x += lengthSign * 0.5;","    if( horzSpan) posB.y += lengthSign * 0.5;","/*--------------------------------------------------------------------------*/","    FxaaFloat2 posN;","    posN.x = posB.x - offNP.x * FXAA_QUALITY_P0;","    posN.y = posB.y - offNP.y * FXAA_QUALITY_P0;","    FxaaFloat2 posP;","    posP.x = posB.x + offNP.x * FXAA_QUALITY_P0;","    posP.y = posB.y + offNP.y * FXAA_QUALITY_P0;","    FxaaFloat subpixD = ((-2.0)*subpixC) + 3.0;","    FxaaFloat lumaEndN = FxaaLuma(FxaaTexTop(tex, posN));","    FxaaFloat subpixE = subpixC * subpixC;","    FxaaFloat lumaEndP = FxaaLuma(FxaaTexTop(tex, posP));","/*--------------------------------------------------------------------------*/","    if(!pairN) lumaNN = lumaSS;","    FxaaFloat gradientScaled = gradient * 1.0/4.0;","    FxaaFloat lumaMM = lumaM - lumaNN * 0.5;","    FxaaFloat subpixF = subpixD * subpixE;","    FxaaBool lumaMLTZero = lumaMM < 0.0;","/*--------------------------------------------------------------------------*/","    lumaEndN -= lumaNN * 0.5;","    lumaEndP -= lumaNN * 0.5;","    FxaaBool doneN = abs(lumaEndN) >= gradientScaled;","    FxaaBool doneP = abs(lumaEndP) >= gradientScaled;","    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P1;","    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P1;","    FxaaBool doneNP = (!doneN) || (!doneP);","    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P1;","    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P1;","/*--------------------------------------------------------------------------*/","    if(doneNP) {","        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","        doneN = abs(lumaEndN) >= gradientScaled;","        doneP = abs(lumaEndP) >= gradientScaled;","        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P2;","        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P2;","        doneNP = (!doneN) || (!doneP);","        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P2;","        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P2;","/*--------------------------------------------------------------------------*/","        #if (FXAA_QUALITY_PS > 3)","        if(doneNP) {","            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","            doneN = abs(lumaEndN) >= gradientScaled;","            doneP = abs(lumaEndP) >= gradientScaled;","            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P3;","            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P3;","            doneNP = (!doneN) || (!doneP);","            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P3;","            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P3;","/*--------------------------------------------------------------------------*/","            #if (FXAA_QUALITY_PS > 4)","            if(doneNP) {","                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                doneN = abs(lumaEndN) >= gradientScaled;","                doneP = abs(lumaEndP) >= gradientScaled;","                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P4;","                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P4;","                doneNP = (!doneN) || (!doneP);","                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P4;","                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P4;","/*--------------------------------------------------------------------------*/","                #if (FXAA_QUALITY_PS > 5)","                if(doneNP) {","                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                    doneN = abs(lumaEndN) >= gradientScaled;","                    doneP = abs(lumaEndP) >= gradientScaled;","                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P5;","                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P5;","                    doneNP = (!doneN) || (!doneP);","                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P5;","                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P5;","/*--------------------------------------------------------------------------*/","                    #if (FXAA_QUALITY_PS > 6)","                    if(doneNP) {","                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                        doneN = abs(lumaEndN) >= gradientScaled;","                        doneP = abs(lumaEndP) >= gradientScaled;","                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P6;","                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P6;","                        doneNP = (!doneN) || (!doneP);","                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P6;","                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P6;","/*--------------------------------------------------------------------------*/","                        #if (FXAA_QUALITY_PS > 7)","                        if(doneNP) {","                            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                            doneN = abs(lumaEndN) >= gradientScaled;","                            doneP = abs(lumaEndP) >= gradientScaled;","                            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P7;","                            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P7;","                            doneNP = (!doneN) || (!doneP);","                            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P7;","                            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P7;","/*--------------------------------------------------------------------------*/","    #if (FXAA_QUALITY_PS > 8)","    if(doneNP) {","        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","        doneN = abs(lumaEndN) >= gradientScaled;","        doneP = abs(lumaEndP) >= gradientScaled;","        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P8;","        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P8;","        doneNP = (!doneN) || (!doneP);","        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P8;","        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P8;","/*--------------------------------------------------------------------------*/","        #if (FXAA_QUALITY_PS > 9)","        if(doneNP) {","            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","            doneN = abs(lumaEndN) >= gradientScaled;","            doneP = abs(lumaEndP) >= gradientScaled;","            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P9;","            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P9;","            doneNP = (!doneN) || (!doneP);","            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P9;","            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P9;","/*--------------------------------------------------------------------------*/","            #if (FXAA_QUALITY_PS > 10)","            if(doneNP) {","                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                doneN = abs(lumaEndN) >= gradientScaled;","                doneP = abs(lumaEndP) >= gradientScaled;","                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P10;","                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P10;","                doneNP = (!doneN) || (!doneP);","                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P10;","                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P10;","/*--------------------------------------------------------------------------*/","                #if (FXAA_QUALITY_PS > 11)","                if(doneNP) {","                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                    doneN = abs(lumaEndN) >= gradientScaled;","                    doneP = abs(lumaEndP) >= gradientScaled;","                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P11;","                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P11;","                    doneNP = (!doneN) || (!doneP);","                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P11;","                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P11;","/*--------------------------------------------------------------------------*/","                    #if (FXAA_QUALITY_PS > 12)","                    if(doneNP) {","                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                        doneN = abs(lumaEndN) >= gradientScaled;","                        doneP = abs(lumaEndP) >= gradientScaled;","                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P12;","                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P12;","                        doneNP = (!doneN) || (!doneP);","                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P12;","                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P12;","/*--------------------------------------------------------------------------*/","                    }","                    #endif","/*--------------------------------------------------------------------------*/","                }","                #endif","/*--------------------------------------------------------------------------*/","            }","            #endif","/*--------------------------------------------------------------------------*/","        }","        #endif","/*--------------------------------------------------------------------------*/","    }","    #endif","/*--------------------------------------------------------------------------*/","                        }","                        #endif","/*--------------------------------------------------------------------------*/","                    }","                    #endif","/*--------------------------------------------------------------------------*/","                }","                #endif","/*--------------------------------------------------------------------------*/","            }","            #endif","/*--------------------------------------------------------------------------*/","        }","        #endif","/*--------------------------------------------------------------------------*/","    }","/*--------------------------------------------------------------------------*/","    FxaaFloat dstN = posM.x - posN.x;","    FxaaFloat dstP = posP.x - posM.x;","    if(!horzSpan) dstN = posM.y - posN.y;","    if(!horzSpan) dstP = posP.y - posM.y;","/*--------------------------------------------------------------------------*/","    FxaaBool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;","    FxaaFloat spanLength = (dstP + dstN);","    FxaaBool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;","    FxaaFloat spanLengthRcp = 1.0/spanLength;","/*--------------------------------------------------------------------------*/","    FxaaBool directionN = dstN < dstP;","    FxaaFloat dst = min(dstN, dstP);","    FxaaBool goodSpan = directionN ? goodSpanN : goodSpanP;","    FxaaFloat subpixG = subpixF * subpixF;","    FxaaFloat pixelOffset = (dst * (-spanLengthRcp)) + 0.5;","    FxaaFloat subpixH = subpixG * fxaaQualitySubpix;","/*--------------------------------------------------------------------------*/","    FxaaFloat pixelOffsetGood = goodSpan ? pixelOffset : 0.0;","    FxaaFloat pixelOffsetSubpix = max(pixelOffsetGood, subpixH);","    if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;","    if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;","    #if (FXAA_DISCARD == 1)","        return FxaaTexTop(tex, posM);","    #else","        return FxaaFloat4(FxaaTexTop(tex, posM).xyz, lumaM);","    #endif","}","/*==========================================================================*/","#endif","","void main() {","  gl_FragColor = FxaaPixelShader(","    vUv,","    vec4(0.0),","    tDiffuse,","    tDiffuse,","    tDiffuse,","    resolution,","    vec4(0.0),","    vec4(0.0),","    vec4(0.0),","    0.75,","    0.166,","    0.0833,","    0.0,","    0.0,","    0.0,","    vec4(0.0)","  );","","  // TODO avoid querying texture twice for same texel","  gl_FragColor.a = texture2D(tDiffuse, vUv).a;","}"].join("\n")}},function(e,t,a){"use strict";THREE.LuminosityHighPassShader={shaderID:"luminosityHighPass",uniforms:{tDiffuse:{type:"t",value:null},luminosityThreshold:{type:"f",value:1},smoothWidth:{type:"f",value:1},defaultColor:{type:"c",value:new THREE.Color(0)},defaultOpacity:{type:"f",value:0}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform vec3 defaultColor;","uniform float defaultOpacity;","uniform float luminosityThreshold;","uniform float smoothWidth;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","vec3 luma = vec3( 0.299, 0.587, 0.114 );","float v = dot( texel.xyz, luma );","vec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );","float alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );","gl_FragColor = mix( outputColor, texel, alpha );","}"].join("\n")}},function(e,t,a){"use strict";window.mobilecheck=function(){var e=!1;return function(t){(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4)))&&(e=!0)}(navigator.userAgent||navigator.vendor||window.opera),e}},function(e,t,a){"use strict";THREE.RenderPass=function(e,t,a,i,o){THREE.Pass.call(this),this.scene=e,this.camera=t,this.overrideMaterial=a,this.clearColor=i,this.clearAlpha=void 0!==o?o:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1},THREE.RenderPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.RenderPass,render:function(e,t,a,i,o){var n=e.autoClear;e.autoClear=!1,this.scene.overrideMaterial=this.overrideMaterial;var r,s;this.clearColor&&(r=e.getClearColor().getHex(),s=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.render(this.scene,this.camera,this.renderToScreen?null:a,this.clear),this.clearColor&&e.setClearColor(r,s),this.scene.overrideMaterial=null,e.autoClear=n}})},function(e,t,a){"use strict";THREE.ShaderPass=function(e,t){THREE.Pass.call(this),this.textureID=void 0!==t?t:"tDiffuse",e instanceof THREE.ShaderMaterial?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=THREE.UniformsUtils.clone(e.uniforms),this.material=new THREE.ShaderMaterial({defines:e.defines||{},uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null),this.quad.frustumCulled=!1,this.scene.add(this.quad)},THREE.ShaderPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.ShaderPass,render:function(e,t,a,i,o){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=a.texture),this.quad.material=this.material,this.renderToScreen?e.render(this.scene,this.camera):e.render(this.scene,this.camera,t,this.clear)}})},function(e,t,a){"use strict";THREE.UnrealBloomPass=function(e,t,a,i){THREE.Pass.call(this),this.strength=void 0!==t?t:1,this.radius=a,this.threshold=i,this.resolution=void 0!==e?new THREE.Vector2(e.x,e.y):new THREE.Vector2(256,256);var o={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat};this.renderTargetsHorizontal=[],this.renderTargetsVertical=[],this.nMips=5;var n=Math.round(this.resolution.x/2),r=Math.round(this.resolution.y/2);this.renderTargetBright=new THREE.WebGLRenderTarget(n,r,o),this.renderTargetBright.texture.name="UnrealBloomPass.bright",this.renderTargetBright.texture.generateMipmaps=!1;for(var s=0;s<this.nMips;s++){var l=new THREE.WebGLRenderTarget(n,r,o);l.texture.name="UnrealBloomPass.h"+s,l.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(l);var l=new THREE.WebGLRenderTarget(n,r,o);l.texture.name="UnrealBloomPass.v"+s,l.texture.generateMipmaps=!1,this.renderTargetsVertical.push(l),n=Math.round(n/2),r=Math.round(r/2)}void 0===THREE.LuminosityHighPassShader&&console.error("THREE.UnrealBloomPass relies on THREE.LuminosityHighPassShader");var u=THREE.LuminosityHighPassShader;this.highPassUniforms=THREE.UniformsUtils.clone(u.uniforms),this.highPassUniforms.luminosityThreshold.value=i,this.highPassUniforms.smoothWidth.value=.01,this.materialHighPassFilter=new THREE.ShaderMaterial({uniforms:this.highPassUniforms,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader,defines:{}}),this.separableBlurMaterials=[];for(var d=[3,5,7,9,11],n=Math.round(this.resolution.x/2),r=Math.round(this.resolution.y/2),s=0;s<this.nMips;s++)this.separableBlurMaterials.push(this.getSeperableBlurMaterial(d[s])),this.separableBlurMaterials[s].uniforms.texSize.value=new THREE.Vector2(n,r),n=Math.round(n/2),r=Math.round(r/2);this.compositeMaterial=this.getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.blurTexture4.value=this.renderTargetsVertical[3].texture,this.compositeMaterial.uniforms.blurTexture5.value=this.renderTargetsVertical[4].texture,this.compositeMaterial.uniforms.bloomStrength.value=t,this.compositeMaterial.uniforms.bloomRadius.value=.1,this.compositeMaterial.needsUpdate=!0;var f=[1,.8,.6,.4,.2];this.compositeMaterial.uniforms.bloomFactors.value=f,this.bloomTintColors=[new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1)],this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,void 0===THREE.CopyShader&&console.error("THREE.BloomPass relies on THREE.CopyShader");var c=THREE.CopyShader;this.copyUniforms=THREE.UniformsUtils.clone(c.uniforms),this.copyUniforms.opacity.value=1,this.materialCopy=new THREE.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,blending:THREE.AdditiveBlending,depthTest:!1,depthWrite:!1,transparent:!0}),this.enabled=!0,this.needsSwap=!1,this.oldClearColor=new THREE.Color,this.oldClearAlpha=1,this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.basic=new THREE.MeshBasicMaterial,this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null),this.quad.frustumCulled=!1,this.scene.add(this.quad)},THREE.UnrealBloomPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.UnrealBloomPass,dispose:function(){for(var e=0;e<this.renderTargetsHorizontal.length;e++)this.renderTargetsHorizontal[e].dispose();for(var e=0;e<this.renderTargetsVertical.length;e++)this.renderTargetsVertical[e].dispose();this.renderTargetBright.dispose()},setSize:function(e,t){var a=Math.round(e/2),i=Math.round(t/2);this.renderTargetBright.setSize(a,i);for(var o=0;o<this.nMips;o++)this.renderTargetsHorizontal[o].setSize(a,i),this.renderTargetsVertical[o].setSize(a,i),this.separableBlurMaterials[o].uniforms.texSize.value=new THREE.Vector2(a,i),a=Math.round(a/2),i=Math.round(i/2)},render:function(e,t,a,i,o){this.oldClearColor.copy(e.getClearColor()),this.oldClearAlpha=e.getClearAlpha();var n=e.autoClear;e.autoClear=!1,e.setClearColor(new THREE.Color(0,0,0),0),o&&e.context.disable(e.context.STENCIL_TEST),this.renderToScreen&&(this.quad.material=this.basic,this.basic.map=a.texture,e.render(this.scene,this.camera,void 0,!0)),this.highPassUniforms.tDiffuse.value=a.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this.quad.material=this.materialHighPassFilter,e.render(this.scene,this.camera,this.renderTargetBright,!0);for(var r=this.renderTargetBright,s=0;s<this.nMips;s++)this.quad.material=this.separableBlurMaterials[s],this.separableBlurMaterials[s].uniforms.colorTexture.value=r.texture,this.separableBlurMaterials[s].uniforms.direction.value=THREE.UnrealBloomPass.BlurDirectionX,e.render(this.scene,this.camera,this.renderTargetsHorizontal[s],!0),this.separableBlurMaterials[s].uniforms.colorTexture.value=this.renderTargetsHorizontal[s].texture,this.separableBlurMaterials[s].uniforms.direction.value=THREE.UnrealBloomPass.BlurDirectionY,e.render(this.scene,this.camera,this.renderTargetsVertical[s],!0),r=this.renderTargetsVertical[s];this.quad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,e.render(this.scene,this.camera,this.renderTargetsHorizontal[0],!0),this.quad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,o&&e.context.enable(e.context.STENCIL_TEST),this.renderToScreen?e.render(this.scene,this.camera,void 0,!1):e.render(this.scene,this.camera,a,!1),e.setClearColor(this.oldClearColor,this.oldClearAlpha),e.autoClear=n},getSeperableBlurMaterial:function(e){return new THREE.ShaderMaterial({defines:{KERNEL_RADIUS:e,SIGMA:e},uniforms:{colorTexture:{value:null},texSize:{value:new THREE.Vector2(.5,.5)},direction:{value:new THREE.Vector2(.5,.5)}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 texSize;\t\t\t\tuniform vec2 direction;\t\t\t\t\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\t\t\t\t}\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\t\t\t\t\tfloat fSigma = float(SIGMA);\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\t\t\t\t\t\tfloat x = float(i);\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\t\t\t\t\t\tweightSum += 2.0 * w;\t\t\t\t\t}\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n\t\t\t\t}"})},getCompositeMaterial:function(e){return new THREE.ShaderMaterial({defines:{NUM_MIPS:e},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},dirtTexture:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\t\t\t\tuniform sampler2D blurTexture1;\t\t\t\tuniform sampler2D blurTexture2;\t\t\t\tuniform sampler2D blurTexture3;\t\t\t\tuniform sampler2D blurTexture4;\t\t\t\tuniform sampler2D blurTexture5;\t\t\t\tuniform sampler2D dirtTexture;\t\t\t\tuniform float bloomStrength;\t\t\t\tuniform float bloomRadius;\t\t\t\tuniform float bloomFactors[NUM_MIPS];\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\t\t\t\t\t\t\t\tfloat lerpBloomFactor(const in float factor) { \t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\t\t\t\t}\t\t\t\t\t\t\t\tvoid main() {\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\t\t\t\t}"})}}),THREE.UnrealBloomPass.BlurDirectionX=new THREE.Vector2(1,0),THREE.UnrealBloomPass.BlurDirectionY=new THREE.Vector2(0,1)},function(e,t,a){"use strict";THREE.MechanicsShader={uniforms:{time:{value:0},width:{value:100},height:{value:100},tDiffuse:{value:null}},vertexShader:"\n    varying vec2 vUv;\n\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n  ",fragmentShader:"\n    #define PI 3.14159\n    #define UV_SCALE 0.02\n    #define MAX_HEIGHT 6.0\n\n    varying vec2 vUv;\n    uniform sampler2D tDiffuse;\n    uniform float time;\n\n    float rand(vec2 seed) {\n      return fract(sin(dot(seed.xy, vec2(12.9898,78.233))) * 43758.5453);\n    }\n\n    vec2 randVec2() {\n      return vec2(rand(vUv + time), rand(vUv + time + 1.));\n    }\n\n    vec3 getPosition(vec2 coords) {\n      vec4 sample = texture2D(tDiffuse, coords);\n      vec3 res = vec3(coords.x / UV_SCALE, sample.y * MAX_HEIGHT, coords.y / UV_SCALE);\n      return res;\n    }\n\n    float computeAO(vec2 uvOff, vec3 P, vec3 N) {\n      vec3 Vpos = getPosition(vUv + uvOff * UV_SCALE) - P;\n      vec3 Vnorm = normalize(Vpos);\n      float dist = length(Vpos);\n      return max(dot(N, Vnorm) * (1.0 / (1.0 + dist)), 0.0);\n    }\n\n    float sampleAO(vec3 P) {\n      vec3 N = vec3(0., 1., 0.);\n      vec2 randOffset = randVec2();\n      const int iterations = 4;\n      float totalAO = 0.0;\n\n      for (int i=0; i<iterations; i++) {\n        vec2 coord1 = reflect(vec2(\n          (i < 2) ? ((i == 0) ? 1.0 : -1.0) : 0.0,\n          (i > 1) ? ((i == 2) ? 1.0 : -1.0) : 0.0\n        ), randOffset);\n        vec2 coord2 = vec2(\n          coord1.x * 0.707 - coord1.y * 0.707,\n          coord1.x * 0.707 + coord1.y * 0.707\n        );\n        totalAO += computeAO(coord1 * 0.25, P, N);\n        totalAO += computeAO(coord2 * 0.5, P, N);\n        totalAO += computeAO(coord1 * 0.75, P, N);\n        totalAO += computeAO(coord2, P, N);\n      }\n\n      return (totalAO / (float(iterations) * 4.));\n    }\n\n    void main() {\n      vec4 tex = texture2D(tDiffuse, vUv);\n      vec3 P = getPosition(vUv);\n      float ao = sampleAO(P);\n      vec4 frag = tex - ao * 0.25;\n\n      gl_FragColor = frag;\n    }\n  "},THREE.MechanicsPass=function(e){THREE.Pass.call(this),this.shader=THREE.MechanicsShader,this.material=new THREE.ShaderMaterial(this.shader),this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),this.material),this.quad.frustumCulled=!1,this.scene.add(this.quad),this.time=0},THREE.MechanicsPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.MechanicsPass,render:function(e,t,a,i,o){this.shader.uniforms.tDiffuse.value=a.texture,this.time=(this.time+i)%10,this.shader.uniforms.time.value=this.time,this.renderToScreen?e.render(this.scene,this.camera):e.render(this.scene,this.camera,t,this.clear)}})},function(e,t,a){"use strict";THREE.Sky=function(){var e=THREE.Sky.SkyShader,t=THREE.UniformsUtils.clone(e.uniforms),a=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:t,side:THREE.BackSide}),i=new THREE.SphereBufferGeometry(45e4,32,15),o=new THREE.Mesh(i,a);o.position.y=24,this.mesh=o,this.uniforms=t,this.inclination=.4,this.azimuth=.38,this.updateSun=function(){var e=Math.PI*(this.inclination-.5),t=2*Math.PI*(this.azimuth-.5),a=new THREE.Vector3;a.x=4e4*Math.cos(t),a.y=4e4*Math.sin(t)*Math.sin(e)+24,a.z=4e4*Math.sin(t)*Math.cos(e),this.uniforms.sunPosition.value.copy(a)},this.updateSun()},THREE.Sky.SkyShader={uniforms:{luminance:{value:1},turbidity:{value:12.5},rayleigh:{value:.6},mieCoefficient:{value:.05},mieDirectionalG:{value:.431},sunPosition:{value:new THREE.Vector3}},vertexShader:["uniform vec3 sunPosition;","uniform float rayleigh;","uniform float turbidity;","uniform float mieCoefficient;","varying vec3 vWorldPosition;","varying vec3 vSunDirection;","varying float vSunfade;","varying vec3 vBetaR;","varying vec3 vBetaM;","varying float vSunE;","const vec3 up = vec3( 0.0, 1.0, 0.0 );","const float e = 2.71828182845904523536028747135266249775724709369995957;","const float pi = 3.141592653589793238462643383279502884197169;","const vec3 lambda = vec3( 680E-9, 550E-9, 450E-9 );","const vec3 totalRayleigh = vec3( 5.804542996261093E-6, 1.3562911419845635E-5, 3.0265902468824876E-5 );","const float v = 4.0;","const vec3 K = vec3( 0.686, 0.678, 0.666 );","const vec3 MieConst = vec3( 1.8399918514433978E14, 2.7798023919660528E14, 4.0790479543861094E14 );","const float cutoffAngle = 1.6110731556870734;","const float steepness = 1.5;","const float EE = 1000.0;","float sunIntensity( float zenithAngleCos ) {","\tzenithAngleCos = clamp( zenithAngleCos, -1.0, 1.0 );","\treturn EE * max( 0.0, 1.0 - pow( e, -( ( cutoffAngle - acos( zenithAngleCos ) ) / steepness ) ) );","}","vec3 totalMie( float T ) {","\tfloat c = ( 0.2 * T ) * 10E-18;","\treturn 0.434 * c * MieConst;","}","void main() {","\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );","\tvWorldPosition = worldPosition.xyz;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","\tvSunDirection = normalize( sunPosition );","\tvSunE = sunIntensity( dot( vSunDirection, up ) );","\tvSunfade = 1.0 - clamp( 1.0 - exp( ( sunPosition.y / 450000.0 ) ), 0.0, 1.0 );","\tfloat rayleighCoefficient = rayleigh - ( 1.0 * ( 1.0 - vSunfade ) );","\tvBetaR = totalRayleigh * rayleighCoefficient;","\tvBetaM = totalMie( turbidity ) * mieCoefficient;","}"].join("\n"),fragmentShader:["varying vec3 vWorldPosition;","varying vec3 vSunDirection;","varying float vSunfade;","varying vec3 vBetaR;","varying vec3 vBetaM;","varying float vSunE;","uniform float luminance;","uniform float mieDirectionalG;","const vec3 cameraPos = vec3( 0.0, 0.0, 0.0 );","const float pi = 3.141592653589793238462643383279502884197169;","const float n = 1.0003;","const float N = 2.545E25;","const float rayleighZenithLength = 8.4E3;","const float mieZenithLength = 1.25E3;","const vec3 up = vec3( 0.0, 1.0, 0.0 );","const float sunAngularDiameterCos = 0.999956676946448443553574619906976478926848692873900859324;","const float THREE_OVER_SIXTEENPI = 0.05968310365946075;","const float ONE_OVER_FOURPI = 0.07957747154594767;","float rayleighPhase( float cosTheta ) {","\treturn THREE_OVER_SIXTEENPI * ( 1.0 + pow( cosTheta, 2.0 ) );","}","float hgPhase( float cosTheta, float g ) {","\tfloat g2 = pow( g, 2.0 );","\tfloat inverse = 1.0 / pow( 1.0 - 2.0 * g * cosTheta + g2, 1.5 );","\treturn ONE_OVER_FOURPI * ( ( 1.0 - g2 ) * inverse );","}","const float A = 0.15;","const float B = 0.50;","const float C = 0.10;","const float D = 0.20;","const float E = 0.02;","const float F = 0.30;","const float whiteScale = 1.0748724675633854;","vec3 Uncharted2Tonemap( vec3 x ) {","\treturn ( ( x * ( A * x + C * B ) + D * E ) / ( x * ( A * x + B ) + D * F ) ) - E / F;","}","void main() {","\tfloat zenithAngle = acos( max( 0.0, dot( up, normalize( vWorldPosition - cameraPos ) ) ) );","\tfloat inverse = 1.0 / ( cos( zenithAngle ) + 0.15 * pow( 93.885 - ( ( zenithAngle * 180.0 ) / pi ), -1.253 ) );","\tfloat sR = rayleighZenithLength * inverse;","\tfloat sM = mieZenithLength * inverse;","\tvec3 Fex = exp( -( vBetaR * sR + vBetaM * sM ) );","\tfloat cosTheta = dot( normalize( vWorldPosition - cameraPos ), vSunDirection );","\tfloat rPhase = rayleighPhase( cosTheta * 0.5 + 0.5 );","\tvec3 betaRTheta = vBetaR * rPhase;","\tfloat mPhase = hgPhase( cosTheta, mieDirectionalG );","\tvec3 betaMTheta = vBetaM * mPhase;","\tvec3 Lin = pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * ( 1.0 - Fex ), vec3( 1.5 ) );","\tLin *= mix( vec3( 1.0 ), pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * Fex, vec3( 1.0 / 2.0 ) ), clamp( pow( 1.0 - dot( up, vSunDirection ), 5.0 ), 0.0, 1.0 ) );","\tvec3 direction = normalize( vWorldPosition - cameraPos );","\tfloat theta = acos( direction.y ); // elevation --\x3e y-axis, [-pi/2, pi/2]","\tfloat phi = atan( direction.z, direction.x ); // azimuth --\x3e x-axis [-pi/2, pi/2]","\tvec2 uv = vec2( phi, theta ) / vec2( 2.0 * pi, pi ) + vec2( 0.5, 0.0 );","\tvec3 L0 = vec3( 0.1 ) * Fex;","\tfloat sundisk = smoothstep( sunAngularDiameterCos, sunAngularDiameterCos + 0.00002, cosTheta );","\tL0 += ( vSunE * 19000.0 * Fex ) * sundisk;","\tvec3 texColor = ( Lin + L0 ) * 0.04 + vec3( 0.0, 0.0003, 0.00075 );","\tvec3 curr = Uncharted2Tonemap( ( log2( 2.0 / pow( luminance, 4.0 ) ) ) * texColor );","\tvec3 color = curr * whiteScale;","\tvec3 retColor = pow( color, vec3( 1.0 / ( 1.2 + ( 1.2 * vSunfade ) ) ) );","\tgl_FragColor = vec4( retColor, 1.0 );","}"].join("\n")}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=a(0),o=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a]);return t.default=e,t}(i),n=a(1),r=a(25),s=function(e){return e&&e.__esModule?e:{default:e}}(r),l=function(e){this.domElement=e,this.object=new THREE.Object3D,this.position=new THREE.Vector3(n.Globals.player.position.x,n.Globals.player.position.y,n.Globals.player.position.z),this.movement=new THREE.Vector3(0,0,0),this.rotation=new THREE.Vector3(1.1*n.Globals.player.rotation.x,n.Globals.player.rotation.y,n.Globals.player.rotation.z),this.offset={rotation:new THREE.Vector3(0,0,0)},this.target={position:new THREE.Vector3(this.position.x,this.position.y,this.position.z),movement:new THREE.Vector3(0,0,0),rotation:new THREE.Vector3(n.Globals.player.rotation.x,n.Globals.player.rotation.y,n.Globals.player.rotation.z),offset:{rotation:new THREE.Vector3(0,0,0)}},this.autoMove={active:!1,position:new THREE.Vector3,rotation:new THREE.Vector3,threshold:1,trackingArtwork:!1},this.attributes={speed:n.Globals.player.speed,speedWhileJumping:n.Globals.player.speed/2,height:n.Globals.player.height,rotation:n.Globals.player.rotationSpeed,camera:{fov:n.Globals.camera.fov,near:n.Globals.camera.near,far:n.Globals.camera.far},cameraThreshold:.4,maxRotationOffset:.35*Math.PI,maxRotationOffsetLower:.35*Math.PI,falling:!1,adjust:{slow:.025,medium:.04,normal:.05,fast:.09,veryFast:.15},climb:{up:1,down:.5,minYNormal:.5},gravity:{accel:10,maxVelocity:50,jumpVelocity:5}},this.camera=new THREE.PerspectiveCamera(this.attributes.camera.fov,1,this.attributes.camera.near,this.attributes.camera.far),this.camera.up=new THREE.Vector3(0,1,0),this.raytracer=new s.default,this.init()};l.prototype={init:function(){this.object=new THREE.Mesh(new THREE.SphereBufferGeometry(.05),new THREE.MeshPhongMaterial),this.bindControls(),this.resizeCamera(),this.light=new THREE.PointLight(16777215,.8,10,2),this.light.position.set(0,2,0),this.object.add(this.light)},resizeCamera:function(){var e=this.domElement.width,t=this.domElement.height;this.camera.aspect=e/t,this.camera.updateProjectionMatrix()},bindControls:function(){var e=this;e.keys={up:!1,down:!1,left:!1,right:!1,jump:!1,click:!1},e.mouse={x:0,y:0,time:0,clickTimeThreshold:.2,clickMagnitudeThreshold:.1,active:!1,locked:!1,lockTime:100,start:{x:0,y:0},delta:{x:0,y:0},rotation:{x:0,y:0}},e.domElement.addEventListener("mousemove",function(t){e.handleMouseMove(t)}),e.domElement.addEventListener("click",function(t){e.handleMouseClick(t)}),e.domElement.addEventListener("mousedown",function(t){e.handleMouseDown(t)}),document.addEventListener("mouseup",function(t){e.handleMouseUp(t)}),document.addEventListener("mouseleave",function(t){e.handleMouseOut(t)}),e.domElement.addEventListener("touchstart",function(t){e.handleMouseDown(t.touches[0])}),e.domElement.addEventListener("touchmove",function(t){e.handleMouseMove(t.touches[0])}),e.domElement.addEventListener("touchend",function(t){e.handleMouseClick(t.touches[0]),e.handleMouseUp(t.touches[0])}),document.addEventListener("keydown",function(t){e.handleKeyDown(t)}),document.addEventListener("keyup",function(t){e.handleKeyUp(t)})},update:function(e,t,a){var i=this.raytracer.getRayVector(this.camera,this.mouse.x,this.mouse.y);this.raytracer.trace(this.camera.position,i,n.Globals.raytracer.length,a);this.handleInput(e,a);var r=o.addVector(o.scaleVector(this.movement,e),this.target.position);this.movement.y=Math.max(this.movement.y-this.attributes.gravity.accel*e,-this.attributes.gravity.maxVelocity),this.processCollisions(r,t),this.target.position.x=r.x,this.target.position.y=r.y,this.target.position.z=r.z,this.setPosition()},processCollisions:function(e,t){var a=t.collisions(e);if(a.length>0){for(var i=0;i<a.length;i+=1){var n=a[i].ceilingPlane(e);null!=n.y&&n.plane.normal.y>=this.attributes.climb.minYNormal&&n.y-this.target.position.y<=this.attributes.climb.up&&(this.movement.y=0,n.y>=e.y&&(e.y=n.y))}a=t.collisions(e);for(var r=[],s=0;s<a.length;s+=1){var l=a[s].ceilingPlane(e);null!=l.y&&(l.plane.normal.y<this.attributes.climb.minYNormal||l.y-this.target.position.y>this.attributes.climb.up)&&r.push(a[s])}if(r.length>0){for(var u=o.copyVector(e),d=0;d<r.length;d+=1){u=r[d].nearest2DIntersect(this.target.position,e)}e.x=u.x,e.z=u.z,this.object.position.set(e.x,e.y,e.z);var f=0;a=t.collisions(e);for(var c=0;c<a.length;c+=1){var h=a[c].ceilingPlane(e);null!=h.y&&(h.plane.normal.y<this.attributes.climb.minYNormal||h.y-this.target.position.y>this.attributes.climb.up)&&(f+=1)}f>1&&(e.x=this.target.position.x,e.z=this.target.position.z)}}else{var p=o.copyVector(e);if(p.y-=this.attributes.climb.down,!this.falling&&t.collision(p)){var m=t.ceilingPlane(p);m.plane.normal.y>=this.attributes.climb.minYNormal&&(e.y=m.y,this.movement.y=0)}}e.y<0&&(e.y=0,this.movement.y=0)},handleInput:function(e,t){if(this.keys.click)if(this.keys.click=!1,this.autoMove.active=!0,this.raytracer.lastCollision.type===n.Globals.type.TYPE_NONE){var a=this.rotation.y;t.deactivate(),this.autoMove.trackingArtwork=!1,this.autoMove.position.x=this.position.x+Math.sin(a)*n.Globals.player.autowalkDistance,this.autoMove.position.z=this.position.z+Math.cos(a)*n.Globals.player.autowalkDistance,this.autoMove.rotation.x=0,this.autoMove.rotation.y=a,this.target.rotation.y=this.autoMove.rotation.y}else{var i=this.raytracer.lastCollision.artwork;t.deactivate(),t.activate(i),this.autoMove.position.x=i.eye.x,this.autoMove.position.z=i.eye.z,this.autoMove.rotation.x=i.pitch,this.autoMove.rotation.y=i.yaw,this.target.rotation.x=this.autoMove.rotation.x,this.target.offset.rotation.x=0,this.target.rotation.y=this.autoMove.rotation.y}if(this.keys.left||this.keys.right){this.autoMove.active=!1;var r=(this.keys.left?1:0)+(this.keys.right?-1:0);this.target.rotation.y+=this.attributes.rotation*e*r,this.target.rotation.x=0,t.deactivate()}if(this.keys.up||this.keys.down){this.autoMove.active=!1;var s=(this.keys.up?1:0)+(this.keys.down?-1:0),l=this.rotation.y+this.offset.rotation.y,u=Math.sin(l)*this.attributes.speed*s,d=Math.cos(l)*this.attributes.speed*s;this.target.movement.x=u,this.target.movement.z=d,this.target.rotation.x=0,t.deactivate()}else this.target.movement.x=0,this.target.movement.z=0;if(this.autoMove.active){var f=o.distanceBetween2D(this.target.position,this.autoMove.position);if(f<this.autoMove.threshold)this.target.movement.x=0,this.target.movement.z=0;else{var c=o.scaleVector(o.normalise(o.subtractVector(this.autoMove.position,this.position)),this.attributes.speed),h=o.getMagnitude2D(c);h>f&&(c=o.scaleVector(c,f/h)),this.target.movement.x=c.x,this.target.movement.z=c.z}}this.keys.jump&&(this.keys.jump=!1,0==this.movement.y&&(this.movement.y=this.attributes.gravity.jumpVelocity)),this.falling=0!=this.movement.y,this.autoMove.active?(this.movement.x+=(this.target.movement.x-this.movement.x)*this.attributes.adjust.medium,this.movement.z+=(this.target.movement.z-this.movement.z)*this.attributes.adjust.medium):this.falling?(this.movement.x+=(this.target.movement.x-this.movement.x)*this.attributes.adjust.slow,this.movement.z+=(this.target.movement.z-this.movement.z)*this.attributes.adjust.slow):(this.movement.x=this.target.movement.x,this.movement.z=this.target.movement.z)},setPosition:function(){this.position.x+=(this.target.position.x-this.position.x)*this.attributes.adjust.veryFast,this.position.y+=(this.target.position.y-this.position.y)*this.attributes.adjust.veryFast,this.position.z+=(this.target.position.z-this.position.z)*this.attributes.adjust.veryFast;var e=this.autoMove.active&&!this.mouse.active?this.attributes.adjust.slow:this.attributes.adjust.veryFast;this.rotation.y+=o.minAngleDifference(this.rotation.y,this.target.rotation.y)*e,this.rotation.x+=o.minAngleDifference(this.rotation.x,this.target.rotation.x)*this.attributes.adjust.normal,this.offset.rotation.y+=(this.target.offset.rotation.y-this.offset.rotation.y)*this.attributes.adjust.normal,this.offset.rotation.x+=(this.target.offset.rotation.x-this.offset.rotation.x)*this.attributes.adjust.fast,this.rotation.y+=this.rotation.y<0?o.twoPi:this.rotation.y>o.twoPi?-o.twoPi:0;var t=this.rotation.y+this.offset.rotation.y,a=this.rotation.x+this.offset.rotation.x,i=this.position.y+this.attributes.height,n=this.position.y+.5*this.attributes.height;this.object.position.set(this.position.x,n,this.position.z),this.camera.position.set(this.position.x,i,this.position.z),this.camera.lookAt(new THREE.Vector3(this.position.x+Math.sin(t),i+Math.sin(a),this.position.z+Math.cos(t)))},handleKeyDown:function(e){switch(e.keyCode){case 38:case 87:this.keys.up=!0;break;case 37:case 65:this.keys.left=!0;break;case 40:case 83:this.keys.down=!0;break;case 39:case 68:this.keys.right=!0;break;case 32:this.keys.jump=!0}},handleKeyUp:function(e){switch(e.keyCode){case 38:case 87:this.keys.up=!1;break;case 37:case 65:this.keys.left=!1;break;case 40:case 83:this.keys.down=!1;break;case 39:case 68:this.keys.right=!1}},handleMouseClick:function(e){var t=((new Date).getTime()-this.mouse.time)/1e3,a=Math.sqrt(Math.pow(this.mouse.x-this.mouse.start.x,2)+Math.pow(this.mouse.y-this.mouse.start.y,2));t<this.mouse.clickTimeThreshold&&(n.Globals.isMobile||a<this.mouse.clickMagnitudeThreshold)&&(this.keys.click=!0)},handleMouseDown:function(e){if(!this.mouse.locked){var t=this,a=this.domElement.getBoundingClientRect();this.mouse.active=!0,this.mouse.rotation.x=this.offset.rotation.x,this.mouse.rotation.y=this.rotation.y,this.mouse.time=(new Date).getTime(),this.mouse.start.x=e.clientX/this.domElement.width*2-1,this.mouse.start.y=(e.clientY-a.y)/this.domElement.height*2-1,this.mouse.locked=!0,setTimeout(function(){t.mouse.locked=!1},t.mouse.lockTime)}},handleMouseMove:function(e){var t=this.domElement.getBoundingClientRect();if(this.mouse.x=e.clientX/this.domElement.width*2-1,this.mouse.y=(e.clientY-t.y)/this.domElement.height*2-1,this.mouse.active&&(this.mouse.delta.x=this.mouse.x-this.mouse.start.x,this.mouse.delta.y=this.mouse.y-this.mouse.start.y,this.target.rotation.y=this.mouse.rotation.y+1*this.mouse.delta.x,!n.Globals.isMobile)){var a=this.mouse.rotation.x+.75*this.mouse.delta.y;a>this.attributes.maxRotationOffset?(a=this.attributes.maxRotationOffset,this.mouse.start.y=this.mouse.y,this.mouse.rotation.x=a):a<-this.attributes.maxRotationOffsetLower&&(a=-this.attributes.maxRotationOffsetLower,this.mouse.start.y=this.mouse.y,this.mouse.rotation.x=a),this.target.offset.rotation.x=a}},handleMouseOut:function(e){this.mouse.active=!1},handleMouseUp:function(e){this.mouse.active=!1}},t.default=l},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){var t=l(e);return 0!=t&&(e.x/=t,e.y/=t,e.z/=t),e},o=function(e,t,a){return new THREE.Vector3(e,t,a)},n=function(e,t){var a=d(e,t);return Math.atan2(t.y-e.y,a)},r=function(e,t){return Math.atan2(Math.sin(t-e),Math.cos(t-e))},s=function(e,t){return Math.atan2(t.x-e.x,t.z-e.z)},l=function(e){return Math.sqrt(e.x*e.x+e.y*e.y+e.z*e.z)},u=function(e,t){return Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2)+Math.pow(t.z-e.z,2))},d=function(e,t){return Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.z-e.z,2))};t.v3=o,t.minAngleDifference=r,t.getNormalisedVec3=i,t.getPitch=n,t.getYaw=s,t.getMagnitudeVec3=l,t.getDistanceVec2=d,t.getDistanceVec3=u},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=2*Math.PI,o=function(e){return new THREE.Vector3(e.x,e.y,e.z)},n=function(e){return Math.sqrt(e.x*e.x+e.y*e.y+e.z*e.z)},r=function(e){return Math.sqrt(e.x*e.x+e.z*e.z)},s=function(e,t){return new THREE.Vector3(e.x+t.x,e.y+t.y,e.z+t.z)},l=function(e,t){return new THREE.Vector3(e.x-t.x,e.y-t.y,e.z-t.z)},u=function(e){var t=Math.sqrt(e.x*e.x+e.y*e.y+e.z*e.z);return 0==t?e:new THREE.Vector3(e.x/t,e.y/t,e.z/t)},d=function(e){return e.x*=-1,e.y*=-1,e.z*=-1,e},f=function(e,t){return Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2)+Math.pow(t.z-e.z,2))},c=function(e,t){return Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.z-e.z,2))},h=function(e,t){var a=c(e,t),i=t.y-e.y;return Math.atan2(i,a)},p=function(e,t){return new THREE.Vector3(e.x*t,e.y*t,e.z*t)},m=function(e,t){return e.x===t.x&&e.y===t.y&e.z===t.z},v=function(e,t){return new THREE.Vector3(e.y*t.z-e.z*t.y,e.z*t.x-e.x*t.z,e.x*t.y-e.y*t.x)},A=function(e,t){return Math.atan2(Math.sin(t-e),Math.cos(t-e))},g=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z};t.getMagnitude=n,t.getMagnitude2D=r,t.copyVector=o,t.isVectorEqual=m,t.pitchBetween=h,t.twoPi=i,t.distanceBetween=f,t.distanceBetween2D=c,t.minAngleDifference=A,t.dotProduct=g,t.addVector=s,t.subtractVector=l,t.scaleVector=p,t.crossProduct=v,t.reverseVector=d,t.normalise=u},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=a(0),o=Math.PI/2;window.mobileAndTabletcheck=function(){var e=!1;return function(t){(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4)))&&(e=!0)}(navigator.userAgent||navigator.vendor||window.opera),e};var n={isMobile:window.mobileAndTabletcheck(),type:{TYPE_ARTWORK:"TYPE_ARTWORK",TYPE_COLLISION:"TYPE_COLLISION",TYPE_NONE:"TYPE_NONE"},player:{position:{x:-15.75,y:0,z:-40},rotation:{x:.12*Math.PI,y:.3086,z:0},height:2.5,speed:8,rotationSpeed:.75*Math.PI,autowalkDistance:10},raytracer:{precision:.5,length:15},camera:{fov:58,near:.1,far:2e6},loader:{bumpScale:.02,lightMapIntensity:.6},artwork:{clickBoxScale:1.25},artworkPlacement:{0:{scale:5,pitch:0,yaw:o,position:(0,i.v3)(8.8,6,-10),eye:(0,i.v3)(0,0,-10)},1:{scale:4,pitch:0,yaw:o,position:(0,i.v3)(-9.1,4,-15),eye:(0,i.v3)(-2,0,-15)},2:{scale:2.5,pitch:0,yaw:o,position:(0,i.v3)(9.1,3.25,4.75),eye:(0,i.v3)(5.5,0,4.75)},3:{scale:2.75,pitch:0,yaw:o,position:(0,i.v3)(9.1,3.25,15),eye:(0,i.v3)(5.5,0,15)},4:{scale:2,pitch:0,yaw:o,position:(0,i.v3)(-9.1,3.5,4.75),eye:(0,i.v3)(-5.5,0,4.75)},5:{scale:2,pitch:0,yaw:o,position:(0,i.v3)(-9.1,3.5,15),eye:(0,i.v3)(-5.5,0,15)},6:{scale:2,pitch:0,yaw:0,position:(0,i.v3)(0,3,9.75),eye:(0,i.v3)(0,0,4.5)},7:{scale:2,pitch:0,yaw:0,position:(0,i.v3)(0,3,10.25),eye:(0,i.v3)(0,0,14.5)},8:{scale:2.5,pitch:0,yaw:o,position:(0,i.v3)(9.1,11,5),eye:(0,i.v3)(5.5,8,5)},9:{scale:2.5,pitch:0,yaw:o,position:(0,i.v3)(9.1,11,15),eye:(0,i.v3)(5.5,8,15)},10:{scale:2,pitch:0,yaw:o,position:(0,i.v3)(-9.1,11,5),eye:(0,i.v3)(-5.5,8,5)},11:{scale:2,pitch:0,yaw:o,position:(0,i.v3)(-9.1,11,15),eye:(0,i.v3)(-5.5,8,15)},12:{scale:3,pitch:0,yaw:0,position:(0,i.v3)(0,11,9.75),eye:(0,i.v3)(0,8,5.5)},13:{scale:2,pitch:0,yaw:0,position:(0,i.v3)(0,11,10.25),eye:(0,i.v3)(0,8,14.5)}}};t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i={concrete:new THREE.MeshPhysicalMaterial({clearCoat:0,clearCoatRoughness:1,reflectivity:0,color:16777215,emissive:8947848}),canvas:new THREE.MeshBasicMaterial({color:16777215,side:THREE.DoubleSide}),dev:new THREE.MeshLambertMaterial({color:16711680,opacity:.25,transparent:!0,side:THREE.DoubleSide}),dev2:new THREE.MeshLambertMaterial({color:16755336,opacity:.25,transparent:!0,side:THREE.DoubleSide}),wireframe:new THREE.MeshLambertMaterial({color:16711680,wireframe:!0})};t.Materials=i},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=a(1),o=a(0),n=function(){this.position=new THREE.Vector3(0,0,0),this.rotation=new THREE.Vector3(0,0,0),this.smoothing=.25,this.target={position:new THREE.Vector3(0,0,0),rotation:new THREE.Vector3(0,0,0)},this.lastCollision=null,this.precision=i.Globals.raytracer.precision,this.init()};n.prototype={init:function(){this.object=new THREE.Object3D,this.object.add(new THREE.Mesh(new THREE.SphereBufferGeometry(.25),new THREE.MeshPhongMaterial({})))},getRayVector:function(e,t,a){var i=e.getWorldDirection(),o=.5*e.fov*(Math.PI/180),n=e.fov*e.aspect*.5*(Math.PI/180),r=Math.atan2(i.x,i.z)-t*n,s=i.y-a*o;return i.x=Math.sin(r),i.y=Math.sin(s),i.z=Math.cos(r),i},trace:function(e,t,a,n){var r=0,s=!1;new THREE.Vector3;for(t=(0,o.scaleVector)((0,o.normalise)(t),this.precision);!1===s&&r<a;){r+=this.precision,(0,o.copyVector)(e),e=(0,o.addVector)(e,t);for(var l=0;l<n.focalPoints.length;l+=1)n.focalPoints[l].collision(e)&&(s=n.focalPoints[l])}this.target.position.x=e.x,this.target.position.y=e.y,this.target.position.z=e.z,this.position.x+=(this.target.position.x-this.position.x)*this.smoothing,this.position.y+=(this.target.position.y-this.position.y)*this.smoothing,this.position.z+=(this.target.position.z-this.position.z)*this.smoothing,this.object.position.set(this.position.x,this.position.y,this.position.z),this.lastCollision=s?{type:i.Globals.type.TYPE_ARTWORK,position:e,artwork:s,vector:t}:{type:i.Globals.type.TYPE_NONE,position:e,collision:!1,vector:t}}},t.default=n},function(e,t,a){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.Artworks=t.Focal=void 0;var o=a(2),n=i(o),r=a(27),s=i(r);t.Focal=n.default,t.Artworks=s.default},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=a(1),o=a(0),n=a(2),r=function(){this.sources=[],this.focalPoints=[],this.object=new THREE.Object3D,this.toLoad=0,this.active=!1};r.prototype={add:function(e,t,a,i){this.toLoad+=1,this.sources.push({title:e,description:t,url:a,image:i})},activate:function(e){if(!this.active&&(this.active=!0,!e.active)){for(var t=0;t<this.focalPoints.length;t+=1)this.focalPoints[t].id===e.id?this.focalPoints[t].activate():this.focalPoints[t].deactivate();$("#nav-default").hasClass("hidden")||$("#nav-default").addClass("hidden");var a=1;$("#nav-artwork").hasClass("hidden")||($("#nav-artwork").addClass("hidden"),a=500),setTimeout(function(){$("#nav-artwork .nav__title").text(e.source.title),$("#nav-artwork .nav__description").html(e.source.description),$("#nav-artwork .nav__links").html('<a target="_blank" href="'+e.source.url+'">Order print</a>'),$("#nav-artwork").removeClass("hidden")},a)}},deactivate:function(){if(this.active){this.active=!1;for(var e=0;e<this.focalPoints.length;e+=1)this.focalPoints[e].deactivate();$("#nav-artwork").hasClass("hidden")||$("#nav-artwork").addClass("hidden"),$("#nav-default").hasClass("hidden")&&$("#nav-default").removeClass("hidden")}},placeImages:function(){for(var e=this,t=this,a=new THREE.TextureLoader,r=0;r<this.sources.length;r+=1)!function(r){var s=r,l=i.Globals.artworkPlacement[s],u="UID"+r,d=new n.Focal(u,l.position,(0,o.v3)(1,1,1),l.eye,e.sources[r]);t.focalPoints.push(d);var f=new THREE.Mesh(new THREE.PlaneBufferGeometry(1,1,2,2),i.Materials.canvas.clone()),c=a.load(e.sources[r].image,function(){t.toLoad-=1,f.scale.x=c.image.naturalWidth/1e3*l.scale,f.scale.y=c.image.naturalHeight/1e3*l.scale,t.focalPoints[s].scale(f.scale.x,f.scale.y,f.scale.x)});f.material.map=c,f.rotation.set(l.pitch,l.yaw,0),f.position.set(l.position.x,l.position.y,l.position.z),t.object.add(f)}(r)}},t.default=r},function(e,t,a){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.LightHandler=t.RoomLoader=t.LoadOBJ=t.LoadFBX=void 0;var o=a(29),n=i(o),r=a(3),s=i(r),l=a(31),u=i(l),d=a(32),f=i(d);t.LoadFBX=n.default,t.LoadOBJ=s.default,t.RoomLoader=u.default,t.LightHandler=f.default},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),a(30);var i=new THREE.FBXLoader,o=function(e,t){return new Promise(function(a,o){try{i.load(e,function(e){for(var i=[],o=0;o<e.children.length;o++)if("Mesh"==e.children[o].type)i.push(e.children[o]);else if("Group"==e.children[o].type)for(var n=0;n<e.children[o].children.length;n++)"Mesh"==e.children[o].children[n].type&&i.push(e.children[o].children[n]);if(t)for(var r=0;r<i.length;r++)"MeshLambertMaterial"==i[r].material.type&&(i[r].material=t);else for(var s=0;s<i.length;s+=1)console.log(i[s].material),i[s].material.bumpScale=.01,i[s].material.normalScale=new THREE.Vector2(.1,.1);a(i)})}catch(e){o(e)}})};t.default=o},function(e,t,a){"use strict";var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};!function(){function e(e){var t=new Map;if("Connections"in e)for(var a=e.Connections.properties.connections,i=0,o=a.length;i<o;++i){var n=a[i];t.has(n[0])||t.set(n[0],{parents:[],children:[]});var r={ID:n[1],relationship:n[2]};t.get(n[0]).parents.push(r),t.has(n[1])||t.set(n[1],{parents:[],children:[]});var s={ID:n[0],relationship:n[2]};t.get(n[1]).children.push(s)}return t}function t(e){var t=new Map;if("Video"in e.Objects.subNodes){var i=e.Objects.subNodes.Video;for(var o in i){if("Content"in i[o].properties){var n=a(i[o]);t.set(parseInt(o),n)}}}return t}function a(e){var t,a=e.properties.Content,i=e.properties.RelativeFilename||e.properties.Filename,o=i.slice(i.lastIndexOf(".")+1).toLowerCase();switch(o){case"bmp":t="image/bmp";break;case"jpg":case"jpeg":t="image/jpeg";break;case"png":t="image/png";break;case"tif":t="image/tiff";break;default:return void console.warn('FBXLoader: Image type "'+o+'" is not supported.')}if("string"==typeof a)return"data:"+t+";base64,"+a;var n=new Uint8Array(a);return window.URL.createObjectURL(new Blob([n],{type:t}))}function o(e,t,a,i){var o=new Map,r=["jpg","jpeg","png","bmp"];if("Texture"in e.Objects.subNodes){var s=e.Objects.subNodes.Texture;for(var l in s){var u=s[l],d=u.properties.FileName.slice(u.properties.FileName.lastIndexOf(".")+1).toLowerCase();if(-1!=r.indexOf(d)){var f=n(u,t,a,i);o.set(parseInt(l),f)}}}return o}function n(e,t,a,i){var o,n=e.id,r=e.attrName,s=e.properties.FileName,l=e.properties.RelativeFilename,u=i.get(n).children;if(void 0!==u&&u.length>0&&a.has(u[0].ID))o=a.get(u[0].ID);else if(void 0!==l&&"/"!==l[0]&&null===l.match(/^[a-zA-Z]:/))o=l;else{var d=s.split(/[\\\/]/);o=d.length>0?d[d.length-1]:s}var f=t.path;0!==o.indexOf("blob:")&&0!==o.indexOf("data:")||t.setPath(void 0);var c=t.load(o);c.name=r,c.FBX_ID=n;var h=e.properties.WrapModeU,p=e.properties.WrapModeV,m=void 0!==h?h.value:0,v=void 0!==p?p.value:0;if(c.wrapS=0===m?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,c.wrapT=0===v?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,"Scaling"in e.properties){var A=e.properties.Scaling.value;c.repeat.x=A[0],c.repeat.y=A[1]}return t.setPath(f),c}function r(e,t,a){var i=new Map;if("Material"in e.Objects.subNodes){var o=e.Objects.subNodes.Material;for(var n in o){var r=s(o[n],t,a);null!==r&&i.set(parseInt(n),r)}}return i}function s(e,t,a){var o=e.id,n=e.attrName,r=e.properties.ShadingModel;if("object"===(void 0===r?"undefined":i(r))&&(r=r.value),!a.has(o))return null;var s,u=a.get(o).children,d=l(e.properties,t,u);switch(r.toLowerCase()){case"phong":s=new THREE.MeshPhongMaterial;break;case"lambert":s=new THREE.MeshLambertMaterial;break;case"unknown":s=new THREE.MeshStandardMaterial;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',r),s=new THREE.MeshPhongMaterial({color:3342591})}return s.setValues(d),s.name=n,s}function l(e,t,a){var i={};if(e.BumpFactor&&(i.bumpScale=e.BumpFactor.value),e.Diffuse&&(i.color=z(e.Diffuse)),e.DisplacementFactor&&(i.displacementScale=e.DisplacementFactor.value),e.ReflectionFactor&&(i.reflectivity=e.ReflectionFactor.value),e.Specular&&(i.specular=z(e.Specular)),e.Shininess&&(i.shininess=e.Shininess.value),e.Emissive&&(i.emissive=z(e.Emissive)),e.EmissiveFactor&&(i.emissiveIntensity=parseFloat(e.EmissiveFactor.value)),e.Opacity&&(i.opacity=parseFloat(e.Opacity.value)),i.opacity<1&&(i.transparent=!0),e["Maya|base_color"]){var o=e["Maya|base_color"].value;i.color=new THREE.Color(o[0],o[1],o[2])}if(e["Maya|emissive"]){var o=e["Maya|emissive"];i.emissive=new THREE.Color(o[0],o[1],o[2])}e["Maya|emissive_intensity"]&&(i.emissiveIntensity=e["Maya|emissive_intensity"].value),e["Maya|metallic"]&&(i.metalness=e["Maya|metallic"].value),e["Maya|roughness"]&&(i.roughness=e["Maya|roughness"].value);var n=1;if(e["Maya|uv_scale"])var n=e["Maya|uv_scale"].value;for(var r=0,s=a.length;r<s;++r){var l=a[r],u=l.relationship;switch(u){case"Maya|TEX_color_map":var d="Maya|use_color_map";e[d]&&1==e[d].value&&(i.map=t.get(l.ID),1!=n&&(i.map.wrapS=THREE.RepeatWrapping,i.map.wrapT=THREE.RepeatWrapping,i.map.repeat.set(n,n)));break;case"Maya|TEX_emissive_map":var d="Maya|use_emissive_map";e[d]&&1==e[d].value&&(i.emissiveMap=t.get(l.ID),1!=n&&(i.emissiveMap.wrapS=THREE.RepeatWrapping,i.emissiveMap.wrapT=THREE.RepeatWrapping,i.emissiveMap.repeat.set(n,n)));break;case"Maya|TEX_roughness_map":var d="Maya|use_roughness_map";e[d]&&1==e[d].value&&(i.roughnessMap=t.get(l.ID),1!=n&&(i.roughnessMap.wrapS=THREE.RepeatWrapping,i.roughnessMap.wrapT=THREE.RepeatWrapping,i.roughnessMap.repeat.set(n,n)));break;case"Maya|TEX_normal_map":var d="Maya|use_normal_map";e[d]&&1==e[d].value&&(i.normalMap=t.get(l.ID),1!=n&&(i.normalMap.wrapS=THREE.RepeatWrapping,i.normalMap.wrapT=THREE.RepeatWrapping,i.normalMap.repeat.set(n,n)));break;case"Maya|TEX_metallic_map":var d="Maya|use_metallic_map";e[d]&&1==e[d].value&&(i.metalnessMap=t.get(l.ID),1!=n&&(i.metalnessMap.wrapS=THREE.RepeatWrapping,i.metalnessMap.wrapT=THREE.RepeatWrapping,i.metalnessMap.repeat.set(n,n)));break;case"Maya|TEX_ao_map":var d="Maya|use_ao_map";e[d]&&1==e[d].value&&(i.aoMap=t.get(l.ID),1!=n&&(i.aoMap.wrapS=THREE.RepeatWrapping,i.aoMap.wrapT=THREE.RepeatWrapping,i.aoMap.repeat.set(n,n)));break;case"Maya|TEX_brdf_lut":case"Maya|TEX_global_specular_cube":case"Maya|TEX_global_diffuse_cube":break;case"Bump":i.bumpMap=t.get(l.ID);break;case"DiffuseColor":i.map=t.get(l.ID);break;case"DisplacementColor":i.displacementMap=t.get(l.ID);break;case"EmissiveColor":i.emissiveMap=t.get(l.ID);break;case"NormalMap":i.normalMap=t.get(l.ID);break;case"ReflectionColor":i.envMap=t.get(l.ID),i.envMap.mapping=THREE.EquirectangularReflectionMapping;break;case"SpecularColor":i.specularMap=t.get(l.ID);break;case"TransparentColor":i.alphaMap=t.get(l.ID),i.transparent=!0;break;case"AmbientColor":case"ShininessExponent":case"SpecularFactor":case"VectorDisplacementColor":default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",u)}}return i}function u(e,t){var a={};if("Deformer"in e.Objects.subNodes){var i=e.Objects.subNodes.Deformer;for(var o in i){if("Skin"===i[o].attrType){var n=t.get(parseInt(o)),r=d(n,i);r.FBX_ID=parseInt(o),a[o]=r}}}return a}function d(e,t){for(var a={},i=e.children,o=0,n=i.length;o<n;++o){var r=i[o],s=t[r.ID],l={FBX_ID:r.ID,index:o,indices:[],weights:[],transform:(new THREE.Matrix4).fromArray(s.subNodes.Transform.properties.a),transformLink:(new THREE.Matrix4).fromArray(s.subNodes.TransformLink.properties.a),linkMode:s.properties.Mode};"Indexes"in s.subNodes&&(l.indices=s.subNodes.Indexes.properties.a,l.weights=s.subNodes.Weights.properties.a),a[r.ID]=l}return{map:a,bones:[]}}function f(e,t,a){var i=new Map;if("Geometry"in e.Objects.subNodes){var o=e.Objects.subNodes.Geometry;for(var n in o){var r=t.get(parseInt(n)),s=c(o[n],r,a);i.set(parseInt(n),s)}}return i}function c(e,t,a){switch(e.attrType){case"Mesh":return h(e,t,a);case"NurbsCurve":return E(e)}}function h(e,t,a){for(var i=0;i<t.children.length;++i){var o=a[t.children[i].ID];if(void 0!==o)break}return p(e,o)}function p(e,t){var a=e.subNodes,i=a.Vertices.properties.a,o=a.PolygonVertexIndex.properties.a,n=[],r=[],s=[],l=[],u=[],d=[],f=[];if(a.LayerElementColor)var c=A(a.LayerElementColor[0]);if(a.LayerElementMaterial)var h=g(a.LayerElementMaterial[0]);if(a.LayerElementNormal)var p=m(a.LayerElementNormal[0]);if(a.LayerElementUV)for(var E=[],T=0;a.LayerElementUV[T];)E.push(v(a.LayerElementUV[T])),T++;var y={};if(t){var F=t.map;for(var P in F)for(var _=F[P],b=_.indices,w=0;w<b.length;w++){var L=b[w],N=_.weights[w];void 0===y[L]&&(y[L]=[]),y[L].push({id:_.index,weight:N})}}for(var S=0,R=0,I=!1,M=[],U=[],H=[],X=[],O=[],C=[],D=0;D<o.length;D++){var Y=o[D],Q=!1;Y<0&&(Y^=-1,o[D]=Y,Q=!0);var k=[],z=[];if(M.push(3*Y,3*Y+1,3*Y+2),c){var B=x(D,S,Y,c);H.push(B[0],B[1],B[2])}if(t){if(void 0!==y[Y])for(var V=y[Y],w=0,G=V.length;w<G;w++)z.push(V[w].weight),k.push(V[w].id);if(z.length>4){I||(console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),I=!0);var j=[0,0,0,0],W=[0,0,0,0];z.forEach(function(e,t){var a=e,i=k[t];W.forEach(function(e,t,o){if(a>e){o[t]=a,a=e;var n=j[t];j[t]=i,i=n}})}),k=j,z=W}for(var T=z.length;T<4;++T)z[T]=0,k[T]=0;for(var T=0;T<4;++T)O.push(z[T]),C.push(k[T])}if(p){var B=x(D,S,Y,p);U.push(B[0],B[1],B[2])}if(E)for(var T=0;T<E.length;T++){var B=x(D,S,Y,E[T]);void 0===X[T]&&(X[T]=[]),X[T].push(B[0],B[1])}if(R++,Q){for(var T=2;T<R;T++)n.push(i[M[0]]),n.push(i[M[1]]),n.push(i[M[2]]),n.push(i[M[3*(T-1)]]),n.push(i[M[3*(T-1)+1]]),n.push(i[M[3*(T-1)+2]]),n.push(i[M[3*T]]),n.push(i[M[3*T+1]]),n.push(i[M[3*T+2]]);if(t)for(var T=2;T<R;T++)d.push(O[0]),d.push(O[1]),d.push(O[2]),d.push(O[3]),d.push(O[4*(T-1)]),d.push(O[4*(T-1)+1]),d.push(O[4*(T-1)+2]),d.push(O[4*(T-1)+3]),d.push(O[4*T]),d.push(O[4*T+1]),d.push(O[4*T+2]),d.push(O[4*T+3]),f.push(C[0]),f.push(C[1]),f.push(C[2]),f.push(C[3]),f.push(C[4*(T-1)]),f.push(C[4*(T-1)+1]),f.push(C[4*(T-1)+2]),f.push(C[4*(T-1)+3]),f.push(C[4*T]),f.push(C[4*T+1]),f.push(C[4*T+2]),f.push(C[4*T+3]);if(p)for(var T=2;T<R;T++)r.push(U[0]),r.push(U[1]),r.push(U[2]),r.push(U[3*(T-1)]),r.push(U[3*(T-1)+1]),r.push(U[3*(T-1)+2]),r.push(U[3*T]),r.push(U[3*T+1]),r.push(U[3*T+2]);if(E)for(var w=0;w<E.length;w++){void 0===l[w]&&(l[w]=[]);for(var T=2;T<R;T++)l[w].push(X[w][0]),l[w].push(X[w][1]),l[w].push(X[w][2*(T-1)]),l[w].push(X[w][2*(T-1)+1]),l[w].push(X[w][2*T]),l[w].push(X[w][2*T+1])}if(c)for(var T=2;T<R;T++)s.push(H[0]),s.push(H[1]),s.push(H[2]),s.push(H[3*(T-1)]),s.push(H[3*(T-1)+1]),s.push(H[3*(T-1)+2]),s.push(H[3*T]),s.push(H[3*T+1]),s.push(H[3*T+2]);if(h&&"AllSame"!==h.mappingType)for(var q=x(D,S,Y,h)[0],T=2;T<R;T++)u.push(q),u.push(q),u.push(q);S++,Q=!1,R=0,M=[],U=[],H=[],X=[],O=[],C=[]}}var $=new THREE.BufferGeometry;if($.name=e.name,$.addAttribute("position",new THREE.Float32BufferAttribute(n,3)),s.length>0&&$.addAttribute("color",new THREE.Float32BufferAttribute(s,3)),t&&($.addAttribute("skinIndex",new THREE.Float32BufferAttribute(f,4)),$.addAttribute("skinWeight",new THREE.Float32BufferAttribute(d,4)),$.FBX_Deformer=t),r.length>0&&$.addAttribute("normal",new THREE.Float32BufferAttribute(r,3)),l.length>0)for(var T=0;T<l.length;T++){var Z="uv"+(T+1).toString();0==T&&(Z="uv"),$.addAttribute(Z,new THREE.Float32BufferAttribute(l[T],2))}if(h&&"AllSame"!==h.mappingType){for(var K=u[0],J=0,T=0;T<u.length;++T)u[T]!==K&&($.addGroup(J,T-J,K),K=u[T],J=T);if($.groups.length>0){var ee=$.groups[$.groups.length-1],te=ee.start+ee.count;te!==u.length&&$.addGroup(te,u.length-te,K)}0===$.groups.length&&$.addGroup(0,u.length,u[0])}return $}function m(e){var t=e.properties.MappingInformationType,a=e.properties.ReferenceInformationType,i=e.subNodes.Normals.properties.a,o=[];return"IndexToDirect"===a&&("NormalIndex"in e.subNodes?o=e.subNodes.NormalIndex.properties.a:"NormalsIndex"in e.subNodes&&(o=e.subNodes.NormalsIndex.properties.a)),{dataSize:3,buffer:i,indices:o,mappingType:t,referenceType:a}}function v(e){var t=e.properties.MappingInformationType,a=e.properties.ReferenceInformationType,i=e.subNodes.UV.properties.a,o=[];return"IndexToDirect"===a&&(o=e.subNodes.UVIndex.properties.a),{dataSize:2,buffer:i,indices:o,mappingType:t,referenceType:a}}function A(e){var t=e.properties.MappingInformationType,a=e.properties.ReferenceInformationType,i=e.subNodes.Colors.properties.a,o=[];return"IndexToDirect"===a&&(o=e.subNodes.ColorIndex.properties.a),{dataSize:4,buffer:i,indices:o,mappingType:t,referenceType:a}}function g(e){var t=e.properties.MappingInformationType,a=e.properties.ReferenceInformationType;if("NoMappingInformation"===t)return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:a};for(var i=e.subNodes.Materials.properties.a,o=[],n=0,r=i.length;n<r;++n)o.push(n);return{dataSize:1,buffer:i,indices:o,mappingType:t,referenceType:a}}function x(e,t,a,i){return q[i.mappingType][i.referenceType](e,t,a,i)}function E(e){if(void 0===THREE.NURBSCurve)return console.error("THREE.FBXLoader: The loader relies on THREE.NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry."),new THREE.BufferGeometry;var t=parseInt(e.properties.Order);if(isNaN(t))return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",e.properties.Order,e.id),new THREE.BufferGeometry;for(var a=t-1,i=e.subNodes.KnotVector.properties.a,o=[],n=e.subNodes.Points.properties.a,r=0,s=n.length;r<s;r+=4)o.push((new THREE.Vector4).fromArray(n,r));var l,u;if("Closed"===e.properties.Form)o.push(o[0]);else if("Periodic"===e.properties.Form){l=a,u=i.length-1-l;for(var r=0;r<a;++r)o.push(o[r])}for(var d=new THREE.NURBSCurve(a,i,o,l,u),f=d.getPoints(7*o.length),c=new Float32Array(3*f.length),r=0,s=f.length;r<s;++r)f[r].toArray(c,3*r);var h=new THREE.BufferGeometry;return h.addAttribute("position",new THREE.BufferAttribute(c,3)),h}function T(e,t,a,i,o){var n=new THREE.Group,r=e.Objects.subNodes.Model,s=[],l=new Map;for(var u in r){for(var d=parseInt(u),f=r[u],c=t.get(d),h=null,p=0;p<c.parents.length;++p)for(var m in a){var v=a[m],A=v.map,g=A[c.parents[p].ID];if(g){var x=h;h=new THREE.Bone,v.bones[g.index]=h,null!==x&&h.add(x)}}if(!h)switch(f.attrType){case"Camera":for(var E,T=0,F=c.children.length;T<F;++T){var P=c.children[T].ID,_=e.Objects.subNodes.NodeAttribute[P];void 0!==_&&void 0!==_.properties&&(E=_.properties)}if(void 0===E)h=new THREE.Object3D;else{var b=0;void 0!==E.CameraProjectionType&&1===E.CameraProjectionType.value&&(b=1);var w=1;void 0!==E.NearPlane&&(w=E.NearPlane.value/1e3);var N=1e3;void 0!==E.FarPlane&&(N=E.FarPlane.value/1e3);var S=window.innerWidth,R=window.innerHeight;void 0!==E.AspectWidth&&void 0!==E.AspectHeight&&(S=E.AspectWidth.value,R=E.AspectHeight.value);var I=S/R,M=45;switch(void 0!==E.FieldOfView&&(M=E.FieldOfView.value),b){case 0:h=new THREE.PerspectiveCamera(M,I,w,N);break;case 1:h=new THREE.OrthographicCamera(-S/2,S/2,R/2,-R/2,w,N);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+b+"."),h=new THREE.Object3D}}break;case"Light":for(var U,T=0,F=c.children.length;T<F;++T){var P=c.children[T].ID,_=e.Objects.subNodes.NodeAttribute[P];void 0!==_&&void 0!==_.properties&&(U=_.properties)}if(void 0===U)h=new THREE.Object3D;else{var b;b=void 0===U.LightType?0:U.LightType.value;var H=16777215;void 0!==U.Color&&(H=z(U.Color.value));var X=void 0===U.Intensity?1:U.Intensity.value/100;void 0!==U.CastLightOnObject&&0===U.CastLightOnObject.value&&(X=0);var O=0;void 0!==U.FarAttenuationEnd&&(O=void 0!==U.EnableFarAttenuation&&0===U.EnableFarAttenuation.value?0:U.FarAttenuationEnd.value/1e3);switch(b){case 0:h=new THREE.PointLight(H,X,O,1);break;case 1:h=new THREE.DirectionalLight(H,X);break;case 2:var C=Math.PI/3;void 0!==U.InnerAngle&&(C=THREE.Math.degToRad(U.InnerAngle.value));var D=0;void 0!==U.OuterAngle&&(D=THREE.Math.degToRad(U.OuterAngle.value),D=Math.max(D,1)),h=new THREE.SpotLight(H,X,O,C,D,1);break;default:console.warn("THREE.FBXLoader: Unknown light type "+U.LightType.value+", defaulting to a THREE.PointLight."),h=new THREE.PointLight(H,X)}void 0!==U.CastShadows&&1===U.CastShadows.value&&(h.castShadow=!0)}break;case"Mesh":for(var Y=null,Q=null,k=[],T=0,F=c.children.length;T<F;++T){var B=c.children[T];i.has(B.ID)&&(Y=i.get(B.ID)),o.has(B.ID)&&k.push(o.get(B.ID))}if(k.length>1?Q=k:k.length>0?Q=k[0]:(Q=new THREE.MeshPhongMaterial({color:13421772}),k.push(Q)),"color"in Y.attributes)for(var G=0,j=k.length;G<j;++G)k[G].vertexColors=THREE.VertexColors;if(Y.FBX_Deformer){for(var W=0,q=k.length;W<q;++W)k[W].skinning=!0;h=new THREE.SkinnedMesh(Y,Q)}else h=new THREE.Mesh(Y,Q);break;case"NurbsCurve":for(var Y=null,T=0,F=c.children.length;T<F;++T){var B=c.children[T];i.has(B.ID)&&(Y=i.get(B.ID))}Q=new THREE.LineBasicMaterial({color:3342591,linewidth:5}),h=new THREE.Line(Y,Q);break;default:h=new THREE.Group}h.name=THREE.PropertyBinding.sanitizeNodeName(f.attrName),h.FBX_ID=d,s.push(h),l.set(d,h)}for(var $=0,Z=s.length;$<Z;++$){var h=s[$],f=r[h.FBX_ID];if("Lcl_Translation"in f.properties&&h.position.fromArray(f.properties.Lcl_Translation.value),"Lcl_Rotation"in f.properties){var K=f.properties.Lcl_Rotation.value.map(THREE.Math.degToRad);K.push("ZYX"),h.rotation.fromArray(K)}if("Lcl_Scaling"in f.properties&&h.scale.fromArray(f.properties.Lcl_Scaling.value),"PreRotation"in f.properties){var J=f.properties.PreRotation.value.map(THREE.Math.degToRad);J[3]="ZYX";var ee=(new THREE.Euler).fromArray(J);ee=(new THREE.Quaternion).setFromEuler(ee);var te=(new THREE.Quaternion).setFromEuler(h.rotation);ee.multiply(te),h.rotation.setFromQuaternion(ee,"ZYX")}if("GeometricTranslation"in f.properties){var J=f.properties.GeometricTranslation.value;h.traverse(function(e){e.geometry&&e.geometry.translate(J[0],J[1],J[2])})}if("LookAtProperty"in f.properties)for(var c=t.get(h.FBX_ID),T=0,F=c.children.length;T<F;++T){var B=c.children[T];if("LookAtProperty"===B.relationship){var ae=e.Objects.subNodes.Model[B.ID];if("Lcl_Translation"in ae.properties){var ie=ae.properties.Lcl_Translation.value;void 0!==h.target?(h.target.position.set(ie[0],ie[1],ie[2]),n.add(h.target)):h.lookAt(new THREE.Vector3(ie[0],ie[1],ie[2]))}}}for(var c=t.get(h.FBX_ID),oe=0;oe<c.parents.length;oe++){var ne=V(s,function(e){return e.FBX_ID===c.parents[oe].ID});if(ne>-1){s[ne].add(h);break}}null===h.parent&&n.add(h)}n.updateMatrixWorld(!0);var re=new Map;if("Pose"in e.Objects.subNodes){var se=e.Objects.subNodes.Pose;for(var u in se)if("BindPose"===se[u].attrType){se=se[u];break}for(var le=se.subNodes.PoseNode,ue=0,de=le.length;ue<de;++ue){var f=le[ue],fe=(new THREE.Matrix4).fromArray(f.subNodes.Matrix.properties.a);re.set(parseInt(f.properties.Node),fe)}}for(var m in a){var v=a[m],A=v.map;for(var ce in A){var g=A[ce],he=g.index,pe=v.bones[he];if(!re.has(pe.FBX_ID))break;var me=re.get(pe.FBX_ID);pe.matrixWorld.copy(me)}v.skeleton=new THREE.Skeleton(v.bones);for(var c=t.get(v.FBX_ID),ve=c.parents,Ae=0,ge=ve.length;Ae<ge;++Ae){var xe=ve[Ae];if(i.has(xe.ID))for(var Ee=xe.ID,Te=t.get(Ee),p=0;p<Te.parents.length;++p)if(l.has(Te.parents[p].ID)){var h=l.get(Te.parents[p].ID);h.bind(v.skeleton,h.matrixWorld);break}}}if(n.updateMatrixWorld(!0),n.skeleton={bones:s},L(n,y(e,t,n)),"GlobalSettings"in e&&"AmbientColor"in e.GlobalSettings.properties){var ye=e.GlobalSettings.properties.AmbientColor.value,Fe=ye[0],Pe=ye[1],_e=ye[2];if(0!==Fe||0!==Pe||0!==_e){var H=new THREE.Color(Fe,Pe,_e);n.add(new THREE.AmbientLight(H,1))}}return n}function y(e,t,a){var i=e.Objects.subNodes.AnimationCurveNode,o=e.Objects.subNodes.AnimationCurve,n=e.Objects.subNodes.AnimationLayer,r=e.Objects.subNodes.AnimationStack,s=30;if("GlobalSettings"in e&&"TimeMode"in e.GlobalSettings.properties){var l=[30,120,100,60,50,48,30,30,29.97,29.97,25,24,1,23.976,30,96,72,59.94],u=e.GlobalSettings.properties.TimeMode.value;14===u?"CustomFrameRate"in e.GlobalSettings.properties&&(s=e.GlobalSettings.properties.CustomFrameRate.value,s=-1===s?30:s):u<=17&&(s=l[u])}var d={curves:new Map,layers:{},stacks:{},length:0,fps:s,frames:0},f=[];for(var c in i)if(c.match(/\d+/)){var h=F(e,i[c],t,a);f.push(h)}for(var p=new Map,m=0;m<f.length;++m)null!==f[m]&&p.set(f[m].id,f[m]);var v=[];for(c in o)if(c.match(/\d+/)){var A=P(o[c]);if(!t.has(A.id))continue;v.push(A);var g=t.get(A.id).parents[0],x=g.ID,E=g.relationship,T="";if(E.match(/X/))T="x";else if(E.match(/Y/))T="y";else{if(!E.match(/Z/))continue;T="z"}p.get(x).curves[T]=A}p.forEach(function(e){var t=e.containerBoneID;if(d.curves.has(t)||d.curves.set(t,{T:null,R:null,S:null}),d.curves.get(t)[e.attr]=e,"R"===e.attr){var a=e.curves;if(null===a.x&&(a.x={version:null,times:[0],values:[0]}),null===a.y&&(a.y={version:null,times:[0],values:[0]}),null===a.z&&(a.z={version:null,times:[0],values:[0]}),a.x.values=a.x.values.map(THREE.Math.degToRad),a.y.values=a.y.values.map(THREE.Math.degToRad),a.z.values=a.z.values.map(THREE.Math.degToRad),null!==e.preRotations){var i=(new THREE.Euler).setFromVector3(e.preRotations,"ZYX");i=(new THREE.Quaternion).setFromEuler(i);for(var o=new THREE.Euler,n=new THREE.Quaternion,r=0;r<a.x.times.length;++r)o.set(a.x.values[r],a.y.values[r],a.z.values[r],"ZYX"),n.setFromEuler(o).premultiply(i),o.setFromQuaternion(n,"ZYX"),a.x.values[r]=o.x,a.y.values[r]=o.y,a.z.values[r]=o.z}}});for(var c in n){for(var y=[],b=t.get(parseInt(c)).children,w=0;w<b.length;w++)if(p.has(b[w].ID)){var L=p.get(b[w].ID),N=L.containerBoneID;void 0===y[N]&&(y[N]={T:null,R:null,S:null}),y[N][L.attr]=L}d.layers[c]=y}for(var c in r){for(var S=[],b=t.get(parseInt(c)).children,R={max:0,min:Number.MAX_VALUE},w=0;w<b.length;++w){var I=d.layers[b[w].ID];if(void 0!==I){S.push(I);for(var M=0,U=I.length;M<U;++M){var y=I[M];y&&_(y,R)}}}R.max>R.min&&(d.stacks[c]={name:r[c].attrName,layers:S,length:R.max-R.min,frames:(R.max-R.min)*d.fps})}return d}function F(e,t,a,i){var o=e.Objects.subNodes.Model,n={id:t.id,attr:t.attrName,internalID:t.id,attrX:!1,attrY:!1,attrZ:!1,containerBoneID:-1,containerID:-1,curves:{x:null,y:null,z:null},preRotations:null};if(!n.attr.match(/S|R|T/))return null;for(var r in t.properties)r.match(/X/)&&(n.attrX=!0),r.match(/Y/)&&(n.attrY=!0),r.match(/Z/)&&(n.attrZ=!0);for(var s=a.get(n.id),l=s.parents,u=l.length-1;u>=0;--u){var d=V(i.skeleton.bones,function(e){return e.FBX_ID===l[u].ID});if(d>-1){n.containerBoneID=d,n.containerID=l[u].ID;var f=o[n.containerID.toString()];"PreRotation"in f.properties&&(n.preRotations=k(f.properties.PreRotation).multiplyScalar(Math.PI/180));break}}return n}function P(e){return{version:null,id:e.id,internalID:e.id,times:e.subNodes.KeyTime.properties.a.map(Y),values:e.subNodes.KeyValueFloat.properties.a,attrFlag:e.subNodes.KeyAttrFlags.properties.a,attrData:e.subNodes.KeyAttrDataFloat.properties.a}}function _(e,t){e.R&&b(e.R.curves,t),e.S&&b(e.S.curves,t),e.T&&b(e.T.curves,t)}function b(e,t){e.x&&w(e.x,t),e.y&&w(e.y,t),e.z&&w(e.z,t)}function w(e,t){t.max=e.times[e.times.length-1]>t.max?e.times[e.times.length-1]:t.max,t.min=e.times[0]<t.min?e.times[0]:t.min}function L(e,t){void 0===e.animations&&(e.animations=[]);var a=t.stacks;for(var i in a){for(var o=a[i],n={name:o.name,fps:t.fps,length:o.length,hierarchy:[]},r=e.skeleton.bones,s=0,l=r.length;s<l;++s){var u=r[s],d=u.name.replace(/.*:/,""),f=V(r,function(e){return u.parent===e});n.hierarchy.push({parent:f,name:d,keys:[]})}for(var c=0;c<=o.frames;c++)for(var s=0,l=r.length;s<l;++s)for(var u=r[s],h=s,p=o.layers[0][h],m=0,v=n.hierarchy.length;m<v;++m){var A=n.hierarchy[m];A.name===u.name&&A.keys.push(N(t,p,u,c))}e.animations.push(THREE.AnimationClip.parseAnimation(n,r))}}function N(e,t,a,i){var o={time:i/e.fps,pos:a.position.toArray(),rot:a.quaternion.toArray(),scl:a.scale.toArray()};if(void 0===t)return o;$.setFromQuaternion(a.quaternion,"ZYX",!1);try{S(t,"T")&&R(t.T,i)&&(t.T.curves.x.values[i]&&(o.pos[0]=t.T.curves.x.values[i]),t.T.curves.y.values[i]&&(o.pos[1]=t.T.curves.y.values[i]),t.T.curves.z.values[i]&&(o.pos[2]=t.T.curves.z.values[i])),S(t,"R")&&R(t.R,i)&&(t.R.curves.x.values[i]&&($.x=t.R.curves.x.values[i]),t.R.curves.y.values[i]&&($.y=t.R.curves.y.values[i]),t.R.curves.z.values[i]&&($.z=t.R.curves.z.values[i]),Z.setFromEuler($),o.rot=Z.toArray()),S(t,"S")&&R(t.S,i)&&(t.T.curves.x.values[i]&&(o.scl[0]=t.S.curves.x.values[i]),t.T.curves.y.values[i]&&(o.scl[1]=t.S.curves.y.values[i]),t.T.curves.z.values[i]&&(o.scl[2]=t.S.curves.z.values[i]))}catch(e){console.log("THREE.FBXLoader: ",a),console.log("THREE.FBXLoader: ",e)}return o}function S(e,t){if(void 0===e)return!1;var a=e[t];return!!a&&K.every(function(e){return null!==a.curves[e]})}function R(e,t){return K.every(function(a){return I(e.curves[a],t)})}function I(e,t){return void 0!==e.values[t]}function M(){}function U(){}function H(e,t){this.dv=new DataView(e),this.offset=0,this.littleEndian=void 0===t||t}function X(){}function O(e){var t="Kaydara FBX Binary  \0";return e.byteLength>=t.length&&t===B(e,0,t.length)}function C(e){for(var t=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"],a=0,i=0;i<t.length;++i){if(function(t){var i=e[t-1];return e=e.slice(a+t),a++,i}(1)===t[i])return!1}return!0}function D(e){var t=/FBXVersion: (\d+)/,a=e.match(t);if(a){return parseInt(a[1])}throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function Y(e){return e/46186158e3}function Q(e){for(var t=e.split(","),a=0,i=t.length;a<i;a++)t[a]=parseFloat(t[a]);return t}function k(e){return(new THREE.Vector3).fromArray(e.value)}function z(e){return(new THREE.Color).fromArray(e.value)}function B(e,t,a){void 0===t&&(t=0),void 0===a&&(a=e.byteLength);var i=new Uint8Array(e,t,a);if(void 0!==window.TextDecoder)return(new TextDecoder).decode(i);for(var o="",n=0,r=i.length;n<r;n++)o+=String.fromCharCode(i[n]);return o}function V(e,t){for(var a=0,i=e.length;a<i;a++)if(t(e[a]))return a;return-1}function G(e,t){for(var a=0,i=e.length,o=t.length;a<o;a++,i++)e[i]=t[a]}function j(e,t,a,i){for(var o=a,n=0;o<i;o++,n++)e[n]=t[o];return e}THREE.FBXLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},Object.assign(THREE.FBXLoader.prototype,{load:function(e,t,a,i){var o=this,n=THREE.LoaderUtils.extractUrlBase(e),r=new THREE.FileLoader(this.manager);r.setResponseType("arraybuffer"),r.load(e,function(a){try{var r=o.parse(a,n);t(r)}catch(t){window.setTimeout(function(){i&&i(t),o.manager.itemError(e)},0)}},a,i)},parse:function(a,i){var n;if(O(a))n=(new U).parse(a);else{var s=B(a);if(!C(s))throw new Error("THREE.FBXLoader: Unknown format.");if(D(s)<7e3)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+D(s));n=(new M).parse(s)}var l=e(n),d=t(n),c=o(n,new THREE.TextureLoader(this.manager).setPath(i),d,l),h=r(n,c,l),p=u(n,l);return T(n,l,p,f(n,l,p),h)}});var W=[],q={ByPolygonVertex:{Direct:function(e,t,a,i){var o=e*i.dataSize,n=e*i.dataSize+i.dataSize;return j(W,i.buffer,o,n)},IndexToDirect:function(e,t,a,i){var o=i.indices[e],n=o*i.dataSize,r=o*i.dataSize+i.dataSize;return j(W,i.buffer,n,r)}},ByPolygon:{Direct:function(e,t,a,i){var o=t*i.dataSize,n=t*i.dataSize+i.dataSize;return j(W,i.buffer,o,n)},IndexToDirect:function(e,t,a,i){var o=i.indices[t],n=o*i.dataSize,r=o*i.dataSize+i.dataSize;return j(W,i.buffer,n,r)}},ByVertice:{Direct:function(e,t,a,i){var o=a*i.dataSize,n=a*i.dataSize+i.dataSize;return j(W,i.buffer,o,n)}},AllSame:{IndexToDirect:function(e,t,a,i){var o=i.indices[0]*i.dataSize,n=i.indices[0]*i.dataSize+i.dataSize;return j(W,i.buffer,o,n)}}},$=new THREE.Euler,Z=new THREE.Quaternion,K=["x","y","z"];Object.assign(M.prototype,{getPrevNode:function(){return this.nodeStack[this.currentIndent-2]},getCurrentNode:function(){return this.nodeStack[this.currentIndent-1]},getCurrentProp:function(){return this.currentProp},pushStack:function(e){this.nodeStack.push(e),this.currentIndent+=1},popStack:function(){this.nodeStack.pop(),this.currentIndent-=1},setCurrentProp:function(e,t){this.currentProp=e,this.currentPropName=t},parse:function(e){this.currentIndent=0,this.allNodes=new X,this.nodeStack=[],this.currentProp=[],this.currentPropName="";for(var t=e.split("\n"),a=0,i=t.length;a<i;a++){var o=t[a];if(!o.match(/^[\s\t]*;/)&&!o.match(/^[\s\t]*$/)){var n=new RegExp("^\\t{"+this.currentIndent+"}(\\w+):(.*){",""),r=o.match(n);if(r){for(var s=r[1].trim().replace(/^"/,"").replace(/"$/,""),l=r[2].split(","),u=0,o=l.length;u<o;u++)l[u]=l[u].trim().replace(/^"/,"").replace(/"$/,"");this.parseNodeBegin(o,s,l||null)}else{var d=new RegExp("^\\t{"+this.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)"),r=o.match(d);if(r){var f=r[1].replace(/^"/,"").replace(/"$/,"").trim(),c=r[2].replace(/^"/,"").replace(/"$/,"").trim();"Content"===f&&","===c&&(c=t[++a].replace(/"/g,"").replace(/,$/,"").trim()),this.parseNodeProperty(o,f,c)}else{var h=new RegExp("^\\t{"+(this.currentIndent-1)+"}}");o.match(h)?this.nodeEnd():o.match(/^[^\s\t}]/)&&this.parseNodePropertyContinued(o)}}}}return this.allNodes},parseNodeBegin:function(e,t,a){var i={name:t,properties:{},subNodes:{}},o=this.parseNodeAttr(a),n=this.getCurrentNode();if(0===this.currentIndent)this.allNodes.add(t,i);else if(t in n.subNodes){var r=n.subNodes[t];this.isFlattenNode(n.subNodes[t])&&(""===o.id?(n.subNodes[t]=[],n.subNodes[t].push(r)):(n.subNodes[t]={},n.subNodes[t][r.id]=r)),""===o.id?n.subNodes[t].push(i):n.subNodes[t][o.id]=i}else"number"==typeof o.id||o.id.match(/^\d+$/)?(n.subNodes[t]={},n.subNodes[t][o.id]=i):n.subNodes[t]=i;a&&(i.id=o.id,i.attrName=o.name,i.attrType=o.type),this.pushStack(i)},parseNodeAttr:function(e){var t=e[0];""!==e[0]&&(t=parseInt(e[0]),isNaN(t)&&(t=e[0]));var a="",i="";return e.length>1&&(a=e[1].replace(/^(\w+)::/,""),i=e[2]),{id:t,name:a,type:i}},parseNodeProperty:function(e,t,a){var i=this.getCurrentNode(),o=i.name;if(void 0!==o){if(o.match(/Properties(\d)+/))return void this.parseNodeSpecialProperty(e,t,a)}if("C"===t){var n=a.split(",").slice(1),r=parseInt(n[0]),s=parseInt(n[1]),l=a.split(",").slice(3);l=l.map(function(e){return e.trim().replace(/^"/,"")}),t="connections",a=[r,s],G(a,l),void 0===i.properties[t]&&(i.properties[t]=[])}if("Node"===t){var u=parseInt(a);i.properties.id=u,i.id=u}t in i.properties?Array.isArray(i.properties[t])?i.properties[t].push(a):i.properties[t]+=a:Array.isArray(i.properties[t])?i.properties[t].push(a):i.properties[t]=a,this.setCurrentProp(i.properties,t),"a"===t&&","!==a.slice(-1)&&(i.properties.a=Q(a))},parseNodePropertyContinued:function(e){if(this.currentProp[this.currentPropName]+=e,","!==e.slice(-1)){var t=this.getCurrentNode();t.properties.a=Q(t.properties.a)}},parseNodeSpecialProperty:function(e,t,a){for(var i=a.split('",'),o=0,n=i.length;o<n;o++)i[o]=i[o].trim().replace(/^\"/,"").replace(/\s/,"_");var r=i[0],s=i[1],l=i[2],u=i[3],d=i[4];switch(s){case"int":case"enum":case"bool":case"ULongLong":d=parseInt(d);break;case"double":case"Number":case"FieldOfView":d=parseFloat(d);break;case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":d=Q(d)}this.getPrevNode().properties[r]={type:s,type2:l,flag:u,value:d},this.setCurrentProp(this.getPrevNode().properties,r)},nodeEnd:function(){this.popStack()},isFlattenNode:function(e){return"subNodes"in e&&"properties"in e}}),Object.assign(U.prototype,{parse:function(e){var t=new H(e);t.skip(23);for(var a=t.getUint32(),i=new X;!this.endOfContent(t);)try{var o=this.parseNode(t,a);null!==o&&i.add(o.name,o)}catch(e){console.log(e)}return i},endOfContent:function(e){return e.size()%16==0?(e.getOffset()+160+16&-16)>=e.size():e.getOffset()+160+16>=e.size()},parseNode:function(e,t){var a=t>=7500?e.getUint64():e.getUint32(),i=t>=7500?e.getUint64():e.getUint32(),o=(t>=7500?e.getUint64():e.getUint32(),e.getUint8()),n=e.getString(o);if(0===a)return null;for(var r=[],s=0;s<i;s++)r.push(this.parseProperty(e));var l=r.length>0?r[0]:"",u=r.length>1?r[1]:"",d=r.length>2?r[2]:"",f={},c={},h=!1;for(1===i&&e.getOffset()===a&&(h=!0);a>e.getOffset();){var p=this.parseNode(e,t);if(null!==p)if(!0!==p.singleProperty)if("Connections"!==n||"C"!==p.name)if(p.name.match(/^Properties\d+$/))for(var m=Object.keys(p.properties),s=0,v=m.length;s<v;s++){var A=m[s];c[A]=p.properties[A]}else if(n.match(/^Properties\d+$/)&&"P"===p.name){var g,x=p.propertyList[0],E=p.propertyList[1],T=p.propertyList[2],y=p.propertyList[3];0===x.indexOf("Lcl ")&&(x=x.replace("Lcl ","Lcl_")),0===E.indexOf("Lcl ")&&(E=E.replace("Lcl ","Lcl_")),g="ColorRGB"===E||"Vector"===E||"Vector3D"===E||0===E.indexOf("Lcl_")?[p.propertyList[4],p.propertyList[5],p.propertyList[6]]:p.propertyList[4],c[x]={type:E,type2:T,flag:y,value:g}}else void 0===f[p.name]?"number"==typeof p.id?(f[p.name]={},f[p.name][p.id]=p):f[p.name]=p:""===p.id?(Array.isArray(f[p.name])||(f[p.name]=[f[p.name]]),f[p.name].push(p)):void 0===f[p.name][p.id]?f[p.name][p.id]=p:(Array.isArray(f[p.name][p.id])||(f[p.name][p.id]=[f[p.name][p.id]]),f[p.name][p.id].push(p));else{for(var F=[],s=1,v=p.propertyList.length;s<v;s++)F[s-1]=p.propertyList[s];void 0===c.connections&&(c.connections=[]),c.connections.push(F)}else{var P=p.propertyList[0];Array.isArray(P)?(f[p.name]=p,p.properties.a=P):c[p.name]=P}}return{singleProperty:h,id:l,attrName:u,attrType:d,name:n,properties:c,propertyList:r,subNodes:f}},parseProperty:function(e){var t=e.getChar();switch(t){case"C":return e.getBoolean();case"D":return e.getFloat64();case"F":return e.getFloat32();case"I":return e.getInt32();case"L":return e.getInt64();case"R":var a=e.getUint32();return e.getArrayBuffer(a);case"S":var a=e.getUint32();return e.getString(a);case"Y":return e.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":var i=e.getUint32(),o=e.getUint32(),n=e.getUint32();if(0===o)switch(t){case"b":case"c":return e.getBooleanArray(i);case"d":return e.getFloat64Array(i);case"f":return e.getFloat32Array(i);case"i":return e.getInt32Array(i);case"l":return e.getInt64Array(i)}if(void 0===window.Zlib)throw new Error("THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js");var r=new Zlib.Inflate(new Uint8Array(e.getArrayBuffer(n))),s=new H(r.decompress().buffer);switch(t){case"b":case"c":return s.getBooleanArray(i);case"d":return s.getFloat64Array(i);case"f":return s.getFloat32Array(i);case"i":return s.getInt32Array(i);case"l":return s.getInt64Array(i)}default:throw new Error("THREE.FBXLoader: Unknown property type "+t)}}}),Object.assign(H.prototype,{getOffset:function(){return this.offset},size:function(){return this.dv.buffer.byteLength},skip:function(e){this.offset+=e},getBoolean:function(){return 1==(1&this.getUint8())},getBooleanArray:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getBoolean());return t},getInt8:function(){var e=this.dv.getInt8(this.offset);return this.offset+=1,e},getInt8Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getInt8());return t},getUint8:function(){var e=this.dv.getUint8(this.offset);return this.offset+=1,e},getUint8Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getUint8());return t},getInt16:function(){var e=this.dv.getInt16(this.offset,this.littleEndian);return this.offset+=2,e},getInt16Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getInt16());return t},getUint16:function(){var e=this.dv.getUint16(this.offset,this.littleEndian);return this.offset+=2,e},getUint16Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getUint16());return t},getInt32:function(){var e=this.dv.getInt32(this.offset,this.littleEndian);return this.offset+=4,e},getInt32Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getInt32());return t},getUint32:function(){var e=this.dv.getUint32(this.offset,this.littleEndian);return this.offset+=4,e},getUint32Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getUint32());return t},getInt64:function(){var e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),2147483648&t?(t=4294967295&~t,e=4294967295&~e,4294967295===e&&(t=t+1&4294967295),e=e+1&4294967295,-(4294967296*t+e)):4294967296*t+e},getInt64Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getInt64());return t},getUint64:function(){var e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),4294967296*t+e},getUint64Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getUint64());return t},getFloat32:function(){var e=this.dv.getFloat32(this.offset,this.littleEndian);return this.offset+=4,e},getFloat32Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getFloat32());return t},getFloat64:function(){var e=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,e},getFloat64Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getFloat64());return t},getArrayBuffer:function(e){var t=this.dv.buffer.slice(this.offset,this.offset+e);return this.offset+=e,t},getChar:function(){return String.fromCharCode(this.getUint8())},getString:function(e){for(var t="";e>0;){var a=this.getUint8();if(e--,0===a)break;t+=String.fromCharCode(a)}return t=decodeURIComponent(escape(t)),this.skip(e),t}}),Object.assign(X.prototype,{add:function(e,t){this[e]=t}})}()},function(e,t,a){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}(),n=a(3),r=function(e){return e&&e.__esModule?e:{default:e}}(n),s=function(){function e(t,a,o){i(this,e),this.scene=t,this.collider=a,this.isMonday=o,this.toLoad=0,this.loader=new r.default(appRoot+"assets/3d/"),this._load()}return o(e,[{key:"isLoaded",value:function(){return 0==this.toLoad}},{key:"_load",value:function(){var e=(this.isMonday,this.isMonday,new THREE.Mesh(new THREE.BoxBufferGeometry(100,.5,100),new THREE.MeshPhongMaterial({color:4473924})));this.collider.add(new Collider.Mesh(e.geometry)),this.scene.add(e)}}]),e}();t.default=s},function(e,t,a){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}(),n=function(){function e(t,a){i(this,e),this.scene=t,this.player=a}return o(e,[{key:"load",value:function(e){if(e){var t=new THREE.AmbientLight(16777215,.08),a=new THREE.HemisphereLight(16755387,526368,.1);this.scene.add(t,a,this.player.object)}else{var i=new THREE.AmbientLight(16777215,.08),o=new THREE.HemisphereLight(16755387,526368,.1),n=new THREE.PointLight(16777215,.5,13,1);this.neonSign=new THREE.PointLight(16711680,.8,15,1),n.position.set(0,5,-10),this.neonSign.position.set(0,14,-32),this.scene.add(i,n,o,this.neonSign,this.player.object)}}}]),e}();t.default=n}]);