var CLM=function(e){var t={};function a(i){if(t[i]){return t[i].exports}var r=t[i]={i,l:false,exports:{}};e[i].call(r.exports,r,r.exports,a);r.l=true;return r.exports}a.m=e;a.c=t;a.d=function(e,t,i){if(!a.o(e,t)){Object.defineProperty(e,t,{enumerable:true,get:i})}};a.r=function(e){if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(e,"__esModule",{value:true})};a.t=function(e,t){if(t&1)e=a(e);if(t&8)return e;if(t&4&&typeof e==="object"&&e&&e.__esModule)return e;var i=Object.create(null);a.r(i);Object.defineProperty(i,"default",{enumerable:true,value:e});if(t&2&&typeof e!="string")for(var r in e)a.d(i,r,function(t){return e[t]}.bind(null,r));return i};a.n=function(e){var t=e&&e.__esModule?function t(){return e["default"]}:function t(){return e};a.d(t,"a",t);return t};a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)};a.p="";return a(a.s=12)}([function(e,t){THREE.Sky=function(){var e=THREE.Sky.SkyShader;var t=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:THREE.UniformsUtils.clone(e.uniforms),side:THREE.BackSide});THREE.Mesh.call(this,new THREE.BoxBufferGeometry(1,1,1),t)};THREE.Sky.prototype=Object.create(THREE.Mesh.prototype);THREE.Sky.SkyShader={uniforms:{luminance:{value:1},turbidity:{value:11.7},rayleigh:{value:2},mieCoefficient:{value:.005},mieDirectionalG:{value:.8},sunPosition:{value:new THREE.Vector3}},vertexShader:["uniform vec3 sunPosition;","uniform float rayleigh;","uniform float turbidity;","uniform float mieCoefficient;","varying vec3 vWorldPosition;","varying vec3 vSunDirection;","varying float vSunfade;","varying vec3 vBetaR;","varying vec3 vBetaM;","varying float vSunE;","const vec3 up = vec3( 0.0, 1.0, 0.0 );","const float e = 2.71828182845904523536028747135266249775724709369995957;","const float pi = 3.141592653589793238462643383279502884197169;","const vec3 lambda = vec3( 680E-9, 550E-9, 450E-9 );","const vec3 totalRayleigh = vec3( 5.804542996261093E-6, 1.3562911419845635E-5, 3.0265902468824876E-5 );","const float v = 4.0;","const vec3 K = vec3( 0.686, 0.678, 0.666 );","const vec3 MieConst = vec3( 1.8399918514433978E14, 2.7798023919660528E14, 4.0790479543861094E14 );","const float cutoffAngle = 1.6110731556870734;","const float steepness = 1.5;","const float EE = 1000.0;","float sunIntensity( float zenithAngleCos ) {","\tzenithAngleCos = clamp( zenithAngleCos, -1.0, 1.0 );","\treturn EE * max( 0.0, 1.0 - pow( e, -( ( cutoffAngle - acos( zenithAngleCos ) ) / steepness ) ) );","}","vec3 totalMie( float T ) {","\tfloat c = ( 0.2 * T ) * 10E-18;","\treturn 0.434 * c * MieConst;","}","void main() {","\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );","\tvWorldPosition = worldPosition.xyz;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","\tgl_Position.z = gl_Position.w;","\tvSunDirection = normalize( sunPosition );","\tvSunE = sunIntensity( dot( vSunDirection, up ) );","\tvSunfade = 1.0 - clamp( 1.0 - exp( ( sunPosition.y / 450000.0 ) ), 0.0, 1.0 );","\tfloat rayleighCoefficient = rayleigh - ( 1.0 * ( 1.0 - vSunfade ) );","\tvBetaR = totalRayleigh * rayleighCoefficient;","\tvBetaM = totalMie( turbidity ) * mieCoefficient;","}"].join("\n"),fragmentShader:["varying vec3 vWorldPosition;","varying vec3 vSunDirection;","varying float vSunfade;","varying vec3 vBetaR;","varying vec3 vBetaM;","varying float vSunE;","uniform float luminance;","uniform float mieDirectionalG;","const vec3 cameraPos = vec3( 0.0, 0.0, 0.0 );","const float pi = 3.141592653589793238462643383279502884197169;","const float n = 1.0003;","const float N = 2.545E25;","const float rayleighZenithLength = 8.4E3;","const float mieZenithLength = 1.25E3;","const vec3 up = vec3( 0.0, 1.0, 0.0 );","const float sunAngularDiameterCos = 0.999956676946448443553574619906976478926848692873900859324;","const float THREE_OVER_SIXTEENPI = 0.05968310365946075;","const float ONE_OVER_FOURPI = 0.07957747154594767;","float rayleighPhase( float cosTheta ) {","\treturn THREE_OVER_SIXTEENPI * ( 1.0 + pow( cosTheta, 2.0 ) );","}","float hgPhase( float cosTheta, float g ) {","\tfloat g2 = pow( g, 2.0 );","\tfloat inverse = 1.0 / pow( 1.0 - 2.0 * g * cosTheta + g2, 1.5 );","\treturn ONE_OVER_FOURPI * ( ( 1.0 - g2 ) * inverse );","}","const float A = 0.15;","const float B = 0.50;","const float C = 0.10;","const float D = 0.20;","const float E = 0.02;","const float F = 0.30;","const float whiteScale = 1.0748724675633854;","vec3 Uncharted2Tonemap( vec3 x ) {","\treturn ( ( x * ( A * x + C * B ) + D * E ) / ( x * ( A * x + B ) + D * F ) ) - E / F;","}","void main() {","\tfloat zenithAngle = acos( max( 0.0, dot( up, normalize( vWorldPosition - cameraPos ) ) ) );","\tfloat inverse = 1.0 / ( cos( zenithAngle ) + 0.15 * pow( 93.885 - ( ( zenithAngle * 180.0 ) / pi ), -1.253 ) );","\tfloat sR = rayleighZenithLength * inverse;","\tfloat sM = mieZenithLength * inverse;","\tvec3 Fex = exp( -( vBetaR * sR + vBetaM * sM ) );","\tfloat cosTheta = dot( normalize( vWorldPosition - cameraPos ), vSunDirection );","\tfloat rPhase = rayleighPhase( cosTheta * 0.5 + 0.5 );","\tvec3 betaRTheta = vBetaR * rPhase;","\tfloat mPhase = hgPhase( cosTheta, mieDirectionalG );","\tvec3 betaMTheta = vBetaM * mPhase;","\tvec3 Lin = pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * ( 1.0 - Fex ), vec3( 1.5 ) );","\tLin *= mix(vec3(1.0), pow(vSunE * ((betaRTheta + betaMTheta) / (vBetaR + vBetaM)) * Fex, vec3(1.0 / 2.0)), clamp(pow(1.0 - dot(up, vSunDirection), 5.0), 0.0, 1.0));","\tvec3 direction = normalize( vWorldPosition - cameraPos );","\tfloat theta = acos( direction.y ); // elevation --\x3e y-axis, [-pi/2, pi/2]","\tfloat phi = atan( direction.z, direction.x ); // azimuth --\x3e x-axis [-pi/2, pi/2]","\tvec2 uv = vec2( phi, theta ) / vec2( 2.0 * pi, pi ) + vec2( 0.5, 0.0 );","\tvec3 L0 = vec3( 0.1 ) * Fex;","\tvec3 texColor = ( Lin + L0 ) * 0.04 + vec3( 0.0, 0.0003, 0.00075 );","\tvec3 curr = Uncharted2Tonemap( ( log2( 2.0 / pow( luminance, 4.0 ) ) ) * texColor );","\tvec3 color = curr * whiteScale;","\tvec3 retColor = pow( color, vec3( 1.0 / ( 1.2 + ( 1.2 * vSunfade ) ) ) );","\tgl_FragColor = vec4( retColor, 1.0 );","}"].join("\n")}},function(e,t){THREE.CopyShader={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","gl_FragColor = opacity * texel;","}"].join("\n")}},function(e,t){THREE.EffectComposer=function(e,t){this.renderer=e;if(t===undefined){var a={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,stencilBuffer:false};var i=e.getDrawingBufferSize();t=new THREE.WebGLRenderTarget(i.width,i.height,a);t.texture.name="EffectComposer.rt1"}this.renderTarget1=t;this.renderTarget2=t.clone();this.renderTarget2.texture.name="EffectComposer.rt2";this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;this.passes=[];if(THREE.CopyShader===undefined){console.error("THREE.EffectComposer relies on THREE.CopyShader")}if(THREE.ShaderPass===undefined){console.error("THREE.EffectComposer relies on THREE.ShaderPass")}this.copyPass=new THREE.ShaderPass(THREE.CopyShader)};Object.assign(THREE.EffectComposer.prototype,{swapBuffers:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer;this.writeBuffer=e},addPass:function(e){this.passes.push(e);var t=this.renderer.getDrawingBufferSize();e.setSize(t.width,t.height)},insertPass:function(e,t){this.passes.splice(t,0,e)},render:function(e){var t=false;var a,i,r=this.passes.length;for(i=0;i<r;i++){a=this.passes[i];if(a.enabled===false)continue;a.render(this.renderer,this.writeBuffer,this.readBuffer,e,t);if(a.needsSwap){if(t){var s=this.renderer.context;s.stencilFunc(s.NOTEQUAL,1,4294967295);this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e);s.stencilFunc(s.EQUAL,1,4294967295)}this.swapBuffers()}if(THREE.MaskPass!==undefined){if(a instanceof THREE.MaskPass){t=true}else if(a instanceof THREE.ClearMaskPass){t=false}}}},reset:function(e){if(e===undefined){var t=this.renderer.getDrawingBufferSize();e=this.renderTarget1.clone();e.setSize(t.width,t.height)}this.renderTarget1.dispose();this.renderTarget2.dispose();this.renderTarget1=e;this.renderTarget2=e.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2},setSize:function(e,t){this.renderTarget1.setSize(e,t);this.renderTarget2.setSize(e,t);for(var a=0;a<this.passes.length;a++){this.passes[a].setSize(e,t)}}});THREE.Pass=function(){this.enabled=true;this.needsSwap=true;this.clear=false;this.renderToScreen=false};Object.assign(THREE.Pass.prototype,{setSize:function(e,t){},render:function(e,t,a,i,r){console.error("THREE.Pass: .render() must be implemented in derived pass.")}})},function(e,t){THREE.FXAAShader={uniforms:{tDiffuse:{value:null},resolution:{value:new THREE.Vector2(1/1024,1/512)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["precision highp float;","","uniform sampler2D tDiffuse;","","uniform vec2 resolution;","","varying vec2 vUv;","","// FXAA 3.11 implementation by NVIDIA, ported to WebGL by Agost Biro (biro@archilogic.com)","","//----------------------------------------------------------------------------------","// File:        es3-keplerFXAAassetsshaders/FXAA_DefaultES.frag","// SDK Version: v3.00","// Email:       gameworks@nvidia.com","// Site:        http://developer.nvidia.com/","//","// Copyright (c) 2014-2015, NVIDIA CORPORATION. All rights reserved.","//","// Redistribution and use in source and binary forms, with or without","// modification, are permitted provided that the following conditions","// are met:","//  * Redistributions of source code must retain the above copyright","//    notice, this list of conditions and the following disclaimer.","//  * Redistributions in binary form must reproduce the above copyright","//    notice, this list of conditions and the following disclaimer in the","//    documentation and/or other materials provided with the distribution.","//  * Neither the name of NVIDIA CORPORATION nor the names of its","//    contributors may be used to endorse or promote products derived","//    from this software without specific prior written permission.","//","// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY","// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE","// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR","// PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR","// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,","// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,","// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR","// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY","// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT","// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE","// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","//","//----------------------------------------------------------------------------------","","#define FXAA_PC 1","#define FXAA_GLSL_100 1","#define FXAA_QUALITY_PRESET 12","","#define FXAA_GREEN_AS_LUMA 1","","/*--------------------------------------------------------------------------*/","#ifndef FXAA_PC_CONSOLE","    //","    // The console algorithm for PC is included","    // for developers targeting really low spec machines.","    // Likely better to just run FXAA_PC, and use a really low preset.","    //","    #define FXAA_PC_CONSOLE 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_GLSL_120","    #define FXAA_GLSL_120 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_GLSL_130","    #define FXAA_GLSL_130 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_HLSL_3","    #define FXAA_HLSL_3 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_HLSL_4","    #define FXAA_HLSL_4 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_HLSL_5","    #define FXAA_HLSL_5 0","#endif","/*==========================================================================*/","#ifndef FXAA_GREEN_AS_LUMA","    //","    // For those using non-linear color,","    // and either not able to get luma in alpha, or not wanting to,","    // this enables FXAA to run using green as a proxy for luma.","    // So with this enabled, no need to pack luma in alpha.","    //","    // This will turn off AA on anything which lacks some amount of green.","    // Pure red and blue or combination of only R and B, will get no AA.","    //","    // Might want to lower the settings for both,","    //    fxaaConsoleEdgeThresholdMin","    //    fxaaQualityEdgeThresholdMin","    // In order to insure AA does not get turned off on colors","    // which contain a minor amount of green.","    //","    // 1 = On.","    // 0 = Off.","    //","    #define FXAA_GREEN_AS_LUMA 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_EARLY_EXIT","    //","    // Controls algorithm's early exit path.","    // On PS3 turning this ON adds 2 cycles to the shader.","    // On 360 turning this OFF adds 10ths of a millisecond to the shader.","    // Turning this off on console will result in a more blurry image.","    // So this defaults to on.","    //","    // 1 = On.","    // 0 = Off.","    //","    #define FXAA_EARLY_EXIT 1","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_DISCARD","    //","    // Only valid for PC OpenGL currently.","    // Probably will not work when FXAA_GREEN_AS_LUMA = 1.","    //","    // 1 = Use discard on pixels which don't need AA.","    //     For APIs which enable concurrent TEX+ROP from same surface.","    // 0 = Return unchanged color on pixels which don't need AA.","    //","    #define FXAA_DISCARD 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_FAST_PIXEL_OFFSET","    //","    // Used for GLSL 120 only.","    //","    // 1 = GL API supports fast pixel offsets","    // 0 = do not use fast pixel offsets","    //","    #ifdef GL_EXT_gpu_shader4","        #define FXAA_FAST_PIXEL_OFFSET 1","    #endif","    #ifdef GL_NV_gpu_shader5","        #define FXAA_FAST_PIXEL_OFFSET 1","    #endif","    #ifdef GL_ARB_gpu_shader5","        #define FXAA_FAST_PIXEL_OFFSET 1","    #endif","    #ifndef FXAA_FAST_PIXEL_OFFSET","        #define FXAA_FAST_PIXEL_OFFSET 0","    #endif","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_GATHER4_ALPHA","    //","    // 1 = API supports gather4 on alpha channel.","    // 0 = API does not support gather4 on alpha channel.","    //","    #if (FXAA_HLSL_5 == 1)","        #define FXAA_GATHER4_ALPHA 1","    #endif","    #ifdef GL_ARB_gpu_shader5","        #define FXAA_GATHER4_ALPHA 1","    #endif","    #ifdef GL_NV_gpu_shader5","        #define FXAA_GATHER4_ALPHA 1","    #endif","    #ifndef FXAA_GATHER4_ALPHA","        #define FXAA_GATHER4_ALPHA 0","    #endif","#endif","","","/*============================================================================","                        FXAA QUALITY - TUNING KNOBS","------------------------------------------------------------------------------","NOTE the other tuning knobs are now in the shader function inputs!","============================================================================*/","#ifndef FXAA_QUALITY_PRESET","    //","    // Choose the quality preset.","    // This needs to be compiled into the shader as it effects code.","    // Best option to include multiple presets is to","    // in each shader define the preset, then include this file.","    //","    // OPTIONS","    // -----------------------------------------------------------------------","    // 10 to 15 - default medium dither (10=fastest, 15=highest quality)","    // 20 to 29 - less dither, more expensive (20=fastest, 29=highest quality)","    // 39       - no dither, very expensive","    //","    // NOTES","    // -----------------------------------------------------------------------","    // 12 = slightly faster then FXAA 3.9 and higher edge quality (default)","    // 13 = about same speed as FXAA 3.9 and better than 12","    // 23 = closest to FXAA 3.9 visually and performance wise","    //  _ = the lowest digit is directly related to performance","    // _  = the highest digit is directly related to style","    //","    #define FXAA_QUALITY_PRESET 12","#endif","","","/*============================================================================","","                           FXAA QUALITY - PRESETS","","============================================================================*/","","/*============================================================================","                     FXAA QUALITY - MEDIUM DITHER PRESETS","============================================================================*/","#if (FXAA_QUALITY_PRESET == 10)","    #define FXAA_QUALITY_PS 3","    #define FXAA_QUALITY_P0 1.5","    #define FXAA_QUALITY_P1 3.0","    #define FXAA_QUALITY_P2 12.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 11)","    #define FXAA_QUALITY_PS 4","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 3.0","    #define FXAA_QUALITY_P3 12.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 12)","    #define FXAA_QUALITY_PS 5","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 4.0","    #define FXAA_QUALITY_P4 12.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 13)","    #define FXAA_QUALITY_PS 6","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 4.0","    #define FXAA_QUALITY_P5 12.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 14)","    #define FXAA_QUALITY_PS 7","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 4.0","    #define FXAA_QUALITY_P6 12.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 15)","    #define FXAA_QUALITY_PS 8","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 4.0","    #define FXAA_QUALITY_P7 12.0","#endif","","/*============================================================================","                     FXAA QUALITY - LOW DITHER PRESETS","============================================================================*/","#if (FXAA_QUALITY_PRESET == 20)","    #define FXAA_QUALITY_PS 3","    #define FXAA_QUALITY_P0 1.5","    #define FXAA_QUALITY_P1 2.0","    #define FXAA_QUALITY_P2 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 21)","    #define FXAA_QUALITY_PS 4","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 22)","    #define FXAA_QUALITY_PS 5","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 23)","    #define FXAA_QUALITY_PS 6","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 24)","    #define FXAA_QUALITY_PS 7","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 3.0","    #define FXAA_QUALITY_P6 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 25)","    #define FXAA_QUALITY_PS 8","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 4.0","    #define FXAA_QUALITY_P7 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 26)","    #define FXAA_QUALITY_PS 9","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 2.0","    #define FXAA_QUALITY_P7 4.0","    #define FXAA_QUALITY_P8 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 27)","    #define FXAA_QUALITY_PS 10","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 2.0","    #define FXAA_QUALITY_P7 2.0","    #define FXAA_QUALITY_P8 4.0","    #define FXAA_QUALITY_P9 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 28)","    #define FXAA_QUALITY_PS 11","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 2.0","    #define FXAA_QUALITY_P7 2.0","    #define FXAA_QUALITY_P8 2.0","    #define FXAA_QUALITY_P9 4.0","    #define FXAA_QUALITY_P10 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 29)","    #define FXAA_QUALITY_PS 12","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 2.0","    #define FXAA_QUALITY_P7 2.0","    #define FXAA_QUALITY_P8 2.0","    #define FXAA_QUALITY_P9 2.0","    #define FXAA_QUALITY_P10 4.0","    #define FXAA_QUALITY_P11 8.0","#endif","","/*============================================================================","                     FXAA QUALITY - EXTREME QUALITY","============================================================================*/","#if (FXAA_QUALITY_PRESET == 39)","    #define FXAA_QUALITY_PS 12","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.0","    #define FXAA_QUALITY_P2 1.0","    #define FXAA_QUALITY_P3 1.0","    #define FXAA_QUALITY_P4 1.0","    #define FXAA_QUALITY_P5 1.5","    #define FXAA_QUALITY_P6 2.0","    #define FXAA_QUALITY_P7 2.0","    #define FXAA_QUALITY_P8 2.0","    #define FXAA_QUALITY_P9 2.0","    #define FXAA_QUALITY_P10 4.0","    #define FXAA_QUALITY_P11 8.0","#endif","","","","/*============================================================================","","                                API PORTING","","============================================================================*/","#if (FXAA_GLSL_100 == 1) || (FXAA_GLSL_120 == 1) || (FXAA_GLSL_130 == 1)","    #define FxaaBool bool","    #define FxaaDiscard discard","    #define FxaaFloat float","    #define FxaaFloat2 vec2","    #define FxaaFloat3 vec3","    #define FxaaFloat4 vec4","    #define FxaaHalf float","    #define FxaaHalf2 vec2","    #define FxaaHalf3 vec3","    #define FxaaHalf4 vec4","    #define FxaaInt2 ivec2","    #define FxaaSat(x) clamp(x, 0.0, 1.0)","    #define FxaaTex sampler2D","#else","    #define FxaaBool bool","    #define FxaaDiscard clip(-1)","    #define FxaaFloat float","    #define FxaaFloat2 float2","    #define FxaaFloat3 float3","    #define FxaaFloat4 float4","    #define FxaaHalf half","    #define FxaaHalf2 half2","    #define FxaaHalf3 half3","    #define FxaaHalf4 half4","    #define FxaaSat(x) saturate(x)","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_GLSL_100 == 1)","  #define FxaaTexTop(t, p) texture2D(t, p, 0.0)","  #define FxaaTexOff(t, p, o, r) texture2D(t, p + (o * r), 0.0)","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_GLSL_120 == 1)","    // Requires,","    //  #version 120","    // And at least,","    //  #extension GL_EXT_gpu_shader4 : enable","    //  (or set FXAA_FAST_PIXEL_OFFSET 1 to work like DX9)","    #define FxaaTexTop(t, p) texture2DLod(t, p, 0.0)","    #if (FXAA_FAST_PIXEL_OFFSET == 1)","        #define FxaaTexOff(t, p, o, r) texture2DLodOffset(t, p, 0.0, o)","    #else","        #define FxaaTexOff(t, p, o, r) texture2DLod(t, p + (o * r), 0.0)","    #endif","    #if (FXAA_GATHER4_ALPHA == 1)","        // use #extension GL_ARB_gpu_shader5 : enable","        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)","        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)","        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)","        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)","    #endif","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_GLSL_130 == 1)",'    // Requires "#version 130" or better',"    #define FxaaTexTop(t, p) textureLod(t, p, 0.0)","    #define FxaaTexOff(t, p, o, r) textureLodOffset(t, p, 0.0, o)","    #if (FXAA_GATHER4_ALPHA == 1)","        // use #extension GL_ARB_gpu_shader5 : enable","        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)","        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)","        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)","        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)","    #endif","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_HLSL_3 == 1)","    #define FxaaInt2 float2","    #define FxaaTex sampler2D","    #define FxaaTexTop(t, p) tex2Dlod(t, float4(p, 0.0, 0.0))","    #define FxaaTexOff(t, p, o, r) tex2Dlod(t, float4(p + (o * r), 0, 0))","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_HLSL_4 == 1)","    #define FxaaInt2 int2","    struct FxaaTex { SamplerState smpl; Texture2D tex; };","    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)","    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_HLSL_5 == 1)","    #define FxaaInt2 int2","    struct FxaaTex { SamplerState smpl; Texture2D tex; };","    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)","    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)","    #define FxaaTexAlpha4(t, p) t.tex.GatherAlpha(t.smpl, p)","    #define FxaaTexOffAlpha4(t, p, o) t.tex.GatherAlpha(t.smpl, p, o)","    #define FxaaTexGreen4(t, p) t.tex.GatherGreen(t.smpl, p)","    #define FxaaTexOffGreen4(t, p, o) t.tex.GatherGreen(t.smpl, p, o)","#endif","","","/*============================================================================","                   GREEN AS LUMA OPTION SUPPORT FUNCTION","============================================================================*/","#if (FXAA_GREEN_AS_LUMA == 0)","    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.w; }","#else","    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.y; }","#endif","","","","","/*============================================================================","","                             FXAA3 QUALITY - PC","","============================================================================*/","#if (FXAA_PC == 1)","/*--------------------------------------------------------------------------*/","FxaaFloat4 FxaaPixelShader(","    //","    // Use noperspective interpolation here (turn off perspective interpolation).","    // {xy} = center of pixel","    FxaaFloat2 pos,","    //","    // Used only for FXAA Console, and not used on the 360 version.","    // Use noperspective interpolation here (turn off perspective interpolation).","    // {xy_} = upper left of pixel","    // {_zw} = lower right of pixel","    FxaaFloat4 fxaaConsolePosPos,","    //","    // Input color texture.","    // {rgb_} = color in linear or perceptual color space","    // if (FXAA_GREEN_AS_LUMA == 0)","    //     {__a} = luma in perceptual color space (not linear)","    FxaaTex tex,","    //","    // Only used on the optimized 360 version of FXAA Console.",'    // For everything but 360, just use the same input here as for "tex".',"    // For 360, same texture, just alias with a 2nd sampler.","    // This sampler needs to have an exponent bias of -1.","    FxaaTex fxaaConsole360TexExpBiasNegOne,","    //","    // Only used on the optimized 360 version of FXAA Console.",'    // For everything but 360, just use the same input here as for "tex".',"    // For 360, same texture, just alias with a 3nd sampler.","    // This sampler needs to have an exponent bias of -2.","    FxaaTex fxaaConsole360TexExpBiasNegTwo,","    //","    // Only used on FXAA Quality.","    // This must be from a constant/uniform.","    // {x_} = 1.0/screenWidthInPixels","    // {_y} = 1.0/screenHeightInPixels","    FxaaFloat2 fxaaQualityRcpFrame,","    //","    // Only used on FXAA Console.","    // This must be from a constant/uniform.","    // This effects sub-pixel AA quality and inversely sharpness.","    //   Where N ranges between,","    //     N = 0.50 (default)","    //     N = 0.33 (sharper)","    // {x__} = -N/screenWidthInPixels","    // {_y_} = -N/screenHeightInPixels","    // {_z_} =  N/screenWidthInPixels","    // {__w} =  N/screenHeightInPixels","    FxaaFloat4 fxaaConsoleRcpFrameOpt,","    //","    // Only used on FXAA Console.","    // Not used on 360, but used on PS3 and PC.","    // This must be from a constant/uniform.","    // {x__} = -2.0/screenWidthInPixels","    // {_y_} = -2.0/screenHeightInPixels","    // {_z_} =  2.0/screenWidthInPixels","    // {__w} =  2.0/screenHeightInPixels","    FxaaFloat4 fxaaConsoleRcpFrameOpt2,","    //","    // Only used on FXAA Console.","    // Only used on 360 in place of fxaaConsoleRcpFrameOpt2.","    // This must be from a constant/uniform.","    // {x__} =  8.0/screenWidthInPixels","    // {_y_} =  8.0/screenHeightInPixels","    // {_z_} = -4.0/screenWidthInPixels","    // {__w} = -4.0/screenHeightInPixels","    FxaaFloat4 fxaaConsole360RcpFrameOpt2,","    //","    // Only used on FXAA Quality.","    // This used to be the FXAA_QUALITY_SUBPIX define.","    // It is here now to allow easier tuning.","    // Choose the amount of sub-pixel aliasing removal.","    // This can effect sharpness.","    //   1.00 - upper limit (softer)","    //   0.75 - default amount of filtering","    //   0.50 - lower limit (sharper, less sub-pixel aliasing removal)","    //   0.25 - almost off","    //   0.00 - completely off","    FxaaFloat fxaaQualitySubpix,","    //","    // Only used on FXAA Quality.","    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD define.","    // It is here now to allow easier tuning.","    // The minimum amount of local contrast required to apply algorithm.","    //   0.333 - too little (faster)","    //   0.250 - low quality","    //   0.166 - default","    //   0.125 - high quality","    //   0.063 - overkill (slower)","    FxaaFloat fxaaQualityEdgeThreshold,","    //","    // Only used on FXAA Quality.","    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD_MIN define.","    // It is here now to allow easier tuning.","    // Trims the algorithm from processing darks.","    //   0.0833 - upper limit (default, the start of visible unfiltered edges)","    //   0.0625 - high quality (faster)","    //   0.0312 - visible limit (slower)","    // Special notes when using FXAA_GREEN_AS_LUMA,","    //   Likely want to set this to zero.","    //   As colors that are mostly not-green","    //   will appear very dark in the green channel!","    //   Tune by looking at mostly non-green content,","    //   then start at zero and increase until aliasing is a problem.","    FxaaFloat fxaaQualityEdgeThresholdMin,","    //","    // Only used on FXAA Console.","    // This used to be the FXAA_CONSOLE_EDGE_SHARPNESS define.","    // It is here now to allow easier tuning.","    // This does not effect PS3, as this needs to be compiled in.","    //   Use FXAA_CONSOLE_PS3_EDGE_SHARPNESS for PS3.","    //   Due to the PS3 being ALU bound,","    //   there are only three safe values here: 2 and 4 and 8.","    //   These options use the shaders ability to a free *|/ by 2|4|8.","    // For all other platforms can be a non-power of two.","    //   8.0 is sharper (default!!!)","    //   4.0 is softer","    //   2.0 is really soft (good only for vector graphics inputs)","    FxaaFloat fxaaConsoleEdgeSharpness,","    //","    // Only used on FXAA Console.","    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD define.","    // It is here now to allow easier tuning.","    // This does not effect PS3, as this needs to be compiled in.","    //   Use FXAA_CONSOLE_PS3_EDGE_THRESHOLD for PS3.","    //   Due to the PS3 being ALU bound,","    //   there are only two safe values here: 1/4 and 1/8.","    //   These options use the shaders ability to a free *|/ by 2|4|8.","    // The console setting has a different mapping than the quality setting.","    // Other platforms can use other values.","    //   0.125 leaves less aliasing, but is softer (default!!!)","    //   0.25 leaves more aliasing, and is sharper","    FxaaFloat fxaaConsoleEdgeThreshold,","    //","    // Only used on FXAA Console.","    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD_MIN define.","    // It is here now to allow easier tuning.","    // Trims the algorithm from processing darks.","    // The console setting has a different mapping than the quality setting.","    // This only applies when FXAA_EARLY_EXIT is 1.","    // This does not apply to PS3,","    // PS3 was simplified to avoid more shader instructions.","    //   0.06 - faster but more aliasing in darks","    //   0.05 - default","    //   0.04 - slower and less aliasing in darks","    // Special notes when using FXAA_GREEN_AS_LUMA,","    //   Likely want to set this to zero.","    //   As colors that are mostly not-green","    //   will appear very dark in the green channel!","    //   Tune by looking at mostly non-green content,","    //   then start at zero and increase until aliasing is a problem.","    FxaaFloat fxaaConsoleEdgeThresholdMin,","    //","    // Extra constants for 360 FXAA Console only.","    // Use zeros or anything else for other platforms.","    // These must be in physical constant registers and NOT immedates.","    // Immedates will result in compiler un-optimizing.","    // {xyzw} = float4(1.0, -1.0, 0.25, -0.25)","    FxaaFloat4 fxaaConsole360ConstDir",") {","/*--------------------------------------------------------------------------*/","    FxaaFloat2 posM;","    posM.x = pos.x;","    posM.y = pos.y;","    #if (FXAA_GATHER4_ALPHA == 1)","        #if (FXAA_DISCARD == 0)","            FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);","            #if (FXAA_GREEN_AS_LUMA == 0)","                #define lumaM rgbyM.w","            #else","                #define lumaM rgbyM.y","            #endif","        #endif","        #if (FXAA_GREEN_AS_LUMA == 0)","            FxaaFloat4 luma4A = FxaaTexAlpha4(tex, posM);","            FxaaFloat4 luma4B = FxaaTexOffAlpha4(tex, posM, FxaaInt2(-1, -1));","        #else","            FxaaFloat4 luma4A = FxaaTexGreen4(tex, posM);","            FxaaFloat4 luma4B = FxaaTexOffGreen4(tex, posM, FxaaInt2(-1, -1));","        #endif","        #if (FXAA_DISCARD == 1)","            #define lumaM luma4A.w","        #endif","        #define lumaE luma4A.z","        #define lumaS luma4A.x","        #define lumaSE luma4A.y","        #define lumaNW luma4B.w","        #define lumaN luma4B.z","        #define lumaW luma4B.x","    #else","        FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);","        #if (FXAA_GREEN_AS_LUMA == 0)","            #define lumaM rgbyM.w","        #else","            #define lumaM rgbyM.y","        #endif","        #if (FXAA_GLSL_100 == 1)","          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0, 1.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 0.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0,-1.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 0.0), fxaaQualityRcpFrame.xy));","        #else","          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0, 1), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0,-1), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 0), fxaaQualityRcpFrame.xy));","        #endif","    #endif","/*--------------------------------------------------------------------------*/","    FxaaFloat maxSM = max(lumaS, lumaM);","    FxaaFloat minSM = min(lumaS, lumaM);","    FxaaFloat maxESM = max(lumaE, maxSM);","    FxaaFloat minESM = min(lumaE, minSM);","    FxaaFloat maxWN = max(lumaN, lumaW);","    FxaaFloat minWN = min(lumaN, lumaW);","    FxaaFloat rangeMax = max(maxWN, maxESM);","    FxaaFloat rangeMin = min(minWN, minESM);","    FxaaFloat rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;","    FxaaFloat range = rangeMax - rangeMin;","    FxaaFloat rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);","    FxaaBool earlyExit = range < rangeMaxClamped;","/*--------------------------------------------------------------------------*/","    if(earlyExit)","        #if (FXAA_DISCARD == 1)","            FxaaDiscard;","        #else","            return rgbyM;","        #endif","/*--------------------------------------------------------------------------*/","    #if (FXAA_GATHER4_ALPHA == 0)","        #if (FXAA_GLSL_100 == 1)","          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0,-1.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 1.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0,-1.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 1.0), fxaaQualityRcpFrame.xy));","        #else","          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1,-1), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 1), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1,-1), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));","        #endif","    #else","        FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(1, -1), fxaaQualityRcpFrame.xy));","        FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));","    #endif","/*--------------------------------------------------------------------------*/","    FxaaFloat lumaNS = lumaN + lumaS;","    FxaaFloat lumaWE = lumaW + lumaE;","    FxaaFloat subpixRcpRange = 1.0/range;","    FxaaFloat subpixNSWE = lumaNS + lumaWE;","    FxaaFloat edgeHorz1 = (-2.0 * lumaM) + lumaNS;","    FxaaFloat edgeVert1 = (-2.0 * lumaM) + lumaWE;","/*--------------------------------------------------------------------------*/","    FxaaFloat lumaNESE = lumaNE + lumaSE;","    FxaaFloat lumaNWNE = lumaNW + lumaNE;","    FxaaFloat edgeHorz2 = (-2.0 * lumaE) + lumaNESE;","    FxaaFloat edgeVert2 = (-2.0 * lumaN) + lumaNWNE;","/*--------------------------------------------------------------------------*/","    FxaaFloat lumaNWSW = lumaNW + lumaSW;","    FxaaFloat lumaSWSE = lumaSW + lumaSE;","    FxaaFloat edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);","    FxaaFloat edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);","    FxaaFloat edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;","    FxaaFloat edgeVert3 = (-2.0 * lumaS) + lumaSWSE;","    FxaaFloat edgeHorz = abs(edgeHorz3) + edgeHorz4;","    FxaaFloat edgeVert = abs(edgeVert3) + edgeVert4;","/*--------------------------------------------------------------------------*/","    FxaaFloat subpixNWSWNESE = lumaNWSW + lumaNESE;","    FxaaFloat lengthSign = fxaaQualityRcpFrame.x;","    FxaaBool horzSpan = edgeHorz >= edgeVert;","    FxaaFloat subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;","/*--------------------------------------------------------------------------*/","    if(!horzSpan) lumaN = lumaW;","    if(!horzSpan) lumaS = lumaE;","    if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;","    FxaaFloat subpixB = (subpixA * (1.0/12.0)) - lumaM;","/*--------------------------------------------------------------------------*/","    FxaaFloat gradientN = lumaN - lumaM;","    FxaaFloat gradientS = lumaS - lumaM;","    FxaaFloat lumaNN = lumaN + lumaM;","    FxaaFloat lumaSS = lumaS + lumaM;","    FxaaBool pairN = abs(gradientN) >= abs(gradientS);","    FxaaFloat gradient = max(abs(gradientN), abs(gradientS));","    if(pairN) lengthSign = -lengthSign;","    FxaaFloat subpixC = FxaaSat(abs(subpixB) * subpixRcpRange);","/*--------------------------------------------------------------------------*/","    FxaaFloat2 posB;","    posB.x = posM.x;","    posB.y = posM.y;","    FxaaFloat2 offNP;","    offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;","    offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;","    if(!horzSpan) posB.x += lengthSign * 0.5;","    if( horzSpan) posB.y += lengthSign * 0.5;","/*--------------------------------------------------------------------------*/","    FxaaFloat2 posN;","    posN.x = posB.x - offNP.x * FXAA_QUALITY_P0;","    posN.y = posB.y - offNP.y * FXAA_QUALITY_P0;","    FxaaFloat2 posP;","    posP.x = posB.x + offNP.x * FXAA_QUALITY_P0;","    posP.y = posB.y + offNP.y * FXAA_QUALITY_P0;","    FxaaFloat subpixD = ((-2.0)*subpixC) + 3.0;","    FxaaFloat lumaEndN = FxaaLuma(FxaaTexTop(tex, posN));","    FxaaFloat subpixE = subpixC * subpixC;","    FxaaFloat lumaEndP = FxaaLuma(FxaaTexTop(tex, posP));","/*--------------------------------------------------------------------------*/","    if(!pairN) lumaNN = lumaSS;","    FxaaFloat gradientScaled = gradient * 1.0/4.0;","    FxaaFloat lumaMM = lumaM - lumaNN * 0.5;","    FxaaFloat subpixF = subpixD * subpixE;","    FxaaBool lumaMLTZero = lumaMM < 0.0;","/*--------------------------------------------------------------------------*/","    lumaEndN -= lumaNN * 0.5;","    lumaEndP -= lumaNN * 0.5;","    FxaaBool doneN = abs(lumaEndN) >= gradientScaled;","    FxaaBool doneP = abs(lumaEndP) >= gradientScaled;","    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P1;","    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P1;","    FxaaBool doneNP = (!doneN) || (!doneP);","    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P1;","    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P1;","/*--------------------------------------------------------------------------*/","    if(doneNP) {","        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","        doneN = abs(lumaEndN) >= gradientScaled;","        doneP = abs(lumaEndP) >= gradientScaled;","        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P2;","        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P2;","        doneNP = (!doneN) || (!doneP);","        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P2;","        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P2;","/*--------------------------------------------------------------------------*/","        #if (FXAA_QUALITY_PS > 3)","        if(doneNP) {","            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","            doneN = abs(lumaEndN) >= gradientScaled;","            doneP = abs(lumaEndP) >= gradientScaled;","            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P3;","            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P3;","            doneNP = (!doneN) || (!doneP);","            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P3;","            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P3;","/*--------------------------------------------------------------------------*/","            #if (FXAA_QUALITY_PS > 4)","            if(doneNP) {","                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                doneN = abs(lumaEndN) >= gradientScaled;","                doneP = abs(lumaEndP) >= gradientScaled;","                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P4;","                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P4;","                doneNP = (!doneN) || (!doneP);","                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P4;","                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P4;","/*--------------------------------------------------------------------------*/","                #if (FXAA_QUALITY_PS > 5)","                if(doneNP) {","                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                    doneN = abs(lumaEndN) >= gradientScaled;","                    doneP = abs(lumaEndP) >= gradientScaled;","                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P5;","                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P5;","                    doneNP = (!doneN) || (!doneP);","                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P5;","                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P5;","/*--------------------------------------------------------------------------*/","                    #if (FXAA_QUALITY_PS > 6)","                    if(doneNP) {","                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                        doneN = abs(lumaEndN) >= gradientScaled;","                        doneP = abs(lumaEndP) >= gradientScaled;","                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P6;","                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P6;","                        doneNP = (!doneN) || (!doneP);","                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P6;","                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P6;","/*--------------------------------------------------------------------------*/","                        #if (FXAA_QUALITY_PS > 7)","                        if(doneNP) {","                            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                            doneN = abs(lumaEndN) >= gradientScaled;","                            doneP = abs(lumaEndP) >= gradientScaled;","                            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P7;","                            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P7;","                            doneNP = (!doneN) || (!doneP);","                            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P7;","                            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P7;","/*--------------------------------------------------------------------------*/","    #if (FXAA_QUALITY_PS > 8)","    if(doneNP) {","        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","        doneN = abs(lumaEndN) >= gradientScaled;","        doneP = abs(lumaEndP) >= gradientScaled;","        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P8;","        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P8;","        doneNP = (!doneN) || (!doneP);","        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P8;","        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P8;","/*--------------------------------------------------------------------------*/","        #if (FXAA_QUALITY_PS > 9)","        if(doneNP) {","            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","            doneN = abs(lumaEndN) >= gradientScaled;","            doneP = abs(lumaEndP) >= gradientScaled;","            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P9;","            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P9;","            doneNP = (!doneN) || (!doneP);","            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P9;","            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P9;","/*--------------------------------------------------------------------------*/","            #if (FXAA_QUALITY_PS > 10)","            if(doneNP) {","                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                doneN = abs(lumaEndN) >= gradientScaled;","                doneP = abs(lumaEndP) >= gradientScaled;","                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P10;","                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P10;","                doneNP = (!doneN) || (!doneP);","                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P10;","                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P10;","/*--------------------------------------------------------------------------*/","                #if (FXAA_QUALITY_PS > 11)","                if(doneNP) {","                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                    doneN = abs(lumaEndN) >= gradientScaled;","                    doneP = abs(lumaEndP) >= gradientScaled;","                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P11;","                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P11;","                    doneNP = (!doneN) || (!doneP);","                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P11;","                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P11;","/*--------------------------------------------------------------------------*/","                    #if (FXAA_QUALITY_PS > 12)","                    if(doneNP) {","                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                        doneN = abs(lumaEndN) >= gradientScaled;","                        doneP = abs(lumaEndP) >= gradientScaled;","                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P12;","                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P12;","                        doneNP = (!doneN) || (!doneP);","                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P12;","                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P12;","/*--------------------------------------------------------------------------*/","                    }","                    #endif","/*--------------------------------------------------------------------------*/","                }","                #endif","/*--------------------------------------------------------------------------*/","            }","            #endif","/*--------------------------------------------------------------------------*/","        }","        #endif","/*--------------------------------------------------------------------------*/","    }","    #endif","/*--------------------------------------------------------------------------*/","                        }","                        #endif","/*--------------------------------------------------------------------------*/","                    }","                    #endif","/*--------------------------------------------------------------------------*/","                }","                #endif","/*--------------------------------------------------------------------------*/","            }","            #endif","/*--------------------------------------------------------------------------*/","        }","        #endif","/*--------------------------------------------------------------------------*/","    }","/*--------------------------------------------------------------------------*/","    FxaaFloat dstN = posM.x - posN.x;","    FxaaFloat dstP = posP.x - posM.x;","    if(!horzSpan) dstN = posM.y - posN.y;","    if(!horzSpan) dstP = posP.y - posM.y;","/*--------------------------------------------------------------------------*/","    FxaaBool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;","    FxaaFloat spanLength = (dstP + dstN);","    FxaaBool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;","    FxaaFloat spanLengthRcp = 1.0/spanLength;","/*--------------------------------------------------------------------------*/","    FxaaBool directionN = dstN < dstP;","    FxaaFloat dst = min(dstN, dstP);","    FxaaBool goodSpan = directionN ? goodSpanN : goodSpanP;","    FxaaFloat subpixG = subpixF * subpixF;","    FxaaFloat pixelOffset = (dst * (-spanLengthRcp)) + 0.5;","    FxaaFloat subpixH = subpixG * fxaaQualitySubpix;","/*--------------------------------------------------------------------------*/","    FxaaFloat pixelOffsetGood = goodSpan ? pixelOffset : 0.0;","    FxaaFloat pixelOffsetSubpix = max(pixelOffsetGood, subpixH);","    if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;","    if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;","    #if (FXAA_DISCARD == 1)","        return FxaaTexTop(tex, posM);","    #else","        return FxaaFloat4(FxaaTexTop(tex, posM).xyz, lumaM);","    #endif","}","/*==========================================================================*/","#endif","","void main() {","  gl_FragColor = FxaaPixelShader(","    vUv,","    vec4(0.0),","    tDiffuse,","    tDiffuse,","    tDiffuse,","    resolution,","    vec4(0.0),","    vec4(0.0),","    vec4(0.0),","    0.75,","    0.166,","    0.0833,","    0.0,","    0.0,","    0.0,","    vec4(0.0)","  );","","  // TODO avoid querying texture twice for same texel","  gl_FragColor.a = texture2D(tDiffuse, vUv).a;","}"].join("\n")}},function(e,t){THREE.LuminosityHighPassShader={shaderID:"luminosityHighPass",uniforms:{tDiffuse:{type:"t",value:null},luminosityThreshold:{type:"f",value:1},smoothWidth:{type:"f",value:1},defaultColor:{type:"c",value:new THREE.Color(0)},defaultOpacity:{type:"f",value:0}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform vec3 defaultColor;","uniform float defaultOpacity;","uniform float luminosityThreshold;","uniform float smoothWidth;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","vec3 luma = vec3( 0.299, 0.587, 0.114 );","float v = dot( texel.xyz, luma );","vec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );","float alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );","gl_FragColor = mix( outputColor, texel, alpha );","}"].join("\n")}},function(e,t){THREE.RenderPass=function(e,t,a,i,r){THREE.Pass.call(this);this.scene=e;this.camera=t;this.overrideMaterial=a;this.clearColor=i;this.clearAlpha=r!==undefined?r:0;this.clear=true;this.clearDepth=false;this.needsSwap=false};THREE.RenderPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.RenderPass,render:function(e,t,a,i,r){var s=e.autoClear;e.autoClear=false;this.scene.overrideMaterial=this.overrideMaterial;var o,n;if(this.clearColor){o=e.getClearColor().getHex();n=e.getClearAlpha();e.setClearColor(this.clearColor,this.clearAlpha)}if(this.clearDepth){e.clearDepth()}e.render(this.scene,this.camera,this.renderToScreen?null:a,this.clear);if(this.clearColor){e.setClearColor(o,n)}this.scene.overrideMaterial=null;e.autoClear=s}})},function(e,t){THREE.ShaderPass=function(e,t){THREE.Pass.call(this);this.textureID=t!==undefined?t:"tDiffuse";if(e instanceof THREE.ShaderMaterial){this.uniforms=e.uniforms;this.material=e}else if(e){this.uniforms=THREE.UniformsUtils.clone(e.uniforms);this.material=new THREE.ShaderMaterial({defines:e.defines||{},uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})}this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1);this.scene=new THREE.Scene;this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null);this.quad.frustumCulled=false;this.scene.add(this.quad)};THREE.ShaderPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.ShaderPass,render:function(e,t,a,i,r){if(this.uniforms[this.textureID]){this.uniforms[this.textureID].value=a.texture}this.quad.material=this.material;if(this.renderToScreen){e.render(this.scene,this.camera)}else{e.render(this.scene,this.camera,t,this.clear)}}})},function(e,t){THREE.UnrealBloomPass=function(e,t,a,i){THREE.Pass.call(this);this.strength=t!==undefined?t:1;this.radius=a;this.threshold=i;this.resolution=e!==undefined?new THREE.Vector2(e.x,e.y):new THREE.Vector2(256,256);var r={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat};this.renderTargetsHorizontal=[];this.renderTargetsVertical=[];this.nMips=5;var s=Math.round(this.resolution.x/2);var o=Math.round(this.resolution.y/2);this.renderTargetBright=new THREE.WebGLRenderTarget(s,o,r);this.renderTargetBright.texture.name="UnrealBloomPass.bright";this.renderTargetBright.texture.generateMipmaps=false;for(var n=0;n<this.nMips;n++){var l=new THREE.WebGLRenderTarget(s,o,r);l.texture.name="UnrealBloomPass.h"+n;l.texture.generateMipmaps=false;this.renderTargetsHorizontal.push(l);var l=new THREE.WebGLRenderTarget(s,o,r);l.texture.name="UnrealBloomPass.v"+n;l.texture.generateMipmaps=false;this.renderTargetsVertical.push(l);s=Math.round(s/2);o=Math.round(o/2)}if(THREE.LuminosityHighPassShader===undefined)console.error("THREE.UnrealBloomPass relies on THREE.LuminosityHighPassShader");var h=THREE.LuminosityHighPassShader;this.highPassUniforms=THREE.UniformsUtils.clone(h.uniforms);this.highPassUniforms["luminosityThreshold"].value=i;this.highPassUniforms["smoothWidth"].value=.01;this.materialHighPassFilter=new THREE.ShaderMaterial({uniforms:this.highPassUniforms,vertexShader:h.vertexShader,fragmentShader:h.fragmentShader,defines:{}});this.separableBlurMaterials=[];var u=[3,5,7,9,11];var s=Math.round(this.resolution.x/2);var o=Math.round(this.resolution.y/2);for(var n=0;n<this.nMips;n++){this.separableBlurMaterials.push(this.getSeperableBlurMaterial(u[n]));this.separableBlurMaterials[n].uniforms["texSize"].value=new THREE.Vector2(s,o);s=Math.round(s/2);o=Math.round(o/2)}this.compositeMaterial=this.getCompositeMaterial(this.nMips);this.compositeMaterial.uniforms["blurTexture1"].value=this.renderTargetsVertical[0].texture;this.compositeMaterial.uniforms["blurTexture2"].value=this.renderTargetsVertical[1].texture;this.compositeMaterial.uniforms["blurTexture3"].value=this.renderTargetsVertical[2].texture;this.compositeMaterial.uniforms["blurTexture4"].value=this.renderTargetsVertical[3].texture;this.compositeMaterial.uniforms["blurTexture5"].value=this.renderTargetsVertical[4].texture;this.compositeMaterial.uniforms["bloomStrength"].value=t;this.compositeMaterial.uniforms["bloomRadius"].value=.1;this.compositeMaterial.needsUpdate=true;var d=[1,.8,.6,.4,.2];this.compositeMaterial.uniforms["bloomFactors"].value=d;this.bloomTintColors=[new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1)];this.compositeMaterial.uniforms["bloomTintColors"].value=this.bloomTintColors;if(THREE.CopyShader===undefined){console.error("THREE.BloomPass relies on THREE.CopyShader")}var f=THREE.CopyShader;this.copyUniforms=THREE.UniformsUtils.clone(f.uniforms);this.copyUniforms["opacity"].value=1;this.materialCopy=new THREE.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:f.vertexShader,fragmentShader:f.fragmentShader,blending:THREE.AdditiveBlending,depthTest:false,depthWrite:false,transparent:true});this.enabled=true;this.needsSwap=false;this.oldClearColor=new THREE.Color;this.oldClearAlpha=1;this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1);this.scene=new THREE.Scene;this.basic=new THREE.MeshBasicMaterial;this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null);this.quad.frustumCulled=false;this.scene.add(this.quad)};THREE.UnrealBloomPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.UnrealBloomPass,dispose:function(){for(var e=0;e<this.renderTargetsHorizontal.length;e++){this.renderTargetsHorizontal[e].dispose()}for(var e=0;e<this.renderTargetsVertical.length;e++){this.renderTargetsVertical[e].dispose()}this.renderTargetBright.dispose()},setSize:function(e,t){var a=Math.round(e/2);var i=Math.round(t/2);this.renderTargetBright.setSize(a,i);for(var r=0;r<this.nMips;r++){this.renderTargetsHorizontal[r].setSize(a,i);this.renderTargetsVertical[r].setSize(a,i);this.separableBlurMaterials[r].uniforms["texSize"].value=new THREE.Vector2(a,i);a=Math.round(a/2);i=Math.round(i/2)}},render:function(e,t,a,i,r){this.oldClearColor.copy(e.getClearColor());this.oldClearAlpha=e.getClearAlpha();var s=e.autoClear;e.autoClear=false;e.setClearColor(new THREE.Color(0,0,0),0);if(r)e.context.disable(e.context.STENCIL_TEST);if(this.renderToScreen){this.quad.material=this.basic;this.basic.map=a.texture;e.render(this.scene,this.camera,undefined,true)}this.highPassUniforms["tDiffuse"].value=a.texture;this.highPassUniforms["luminosityThreshold"].value=this.threshold;this.quad.material=this.materialHighPassFilter;e.render(this.scene,this.camera,this.renderTargetBright,true);var o=this.renderTargetBright;for(var n=0;n<this.nMips;n++){this.quad.material=this.separableBlurMaterials[n];this.separableBlurMaterials[n].uniforms["colorTexture"].value=o.texture;this.separableBlurMaterials[n].uniforms["direction"].value=THREE.UnrealBloomPass.BlurDirectionX;e.render(this.scene,this.camera,this.renderTargetsHorizontal[n],true);this.separableBlurMaterials[n].uniforms["colorTexture"].value=this.renderTargetsHorizontal[n].texture;this.separableBlurMaterials[n].uniforms["direction"].value=THREE.UnrealBloomPass.BlurDirectionY;e.render(this.scene,this.camera,this.renderTargetsVertical[n],true);o=this.renderTargetsVertical[n]}this.quad.material=this.compositeMaterial;this.compositeMaterial.uniforms["bloomStrength"].value=this.strength;this.compositeMaterial.uniforms["bloomRadius"].value=this.radius;this.compositeMaterial.uniforms["bloomTintColors"].value=this.bloomTintColors;e.render(this.scene,this.camera,this.renderTargetsHorizontal[0],true);this.quad.material=this.materialCopy;this.copyUniforms["tDiffuse"].value=this.renderTargetsHorizontal[0].texture;if(r)e.context.enable(e.context.STENCIL_TEST);if(this.renderToScreen){e.render(this.scene,this.camera,undefined,false)}else{e.render(this.scene,this.camera,a,false)}e.setClearColor(this.oldClearColor,this.oldClearAlpha);e.autoClear=s},getSeperableBlurMaterial:function(e){return new THREE.ShaderMaterial({defines:{KERNEL_RADIUS:e,SIGMA:e},uniforms:{colorTexture:{value:null},texSize:{value:new THREE.Vector2(.5,.5)},direction:{value:new THREE.Vector2(.5,.5)}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 texSize;\t\t\t\tuniform vec2 direction;\t\t\t\t\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\t\t\t\t}\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\t\t\t\t\tfloat fSigma = float(SIGMA);\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\t\t\t\t\t\tfloat x = float(i);\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\t\t\t\t\t\tweightSum += 2.0 * w;\t\t\t\t\t}\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n\t\t\t\t}"})},getCompositeMaterial:function(e){return new THREE.ShaderMaterial({defines:{NUM_MIPS:e},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},dirtTexture:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\t\t\t\tuniform sampler2D blurTexture1;\t\t\t\tuniform sampler2D blurTexture2;\t\t\t\tuniform sampler2D blurTexture3;\t\t\t\tuniform sampler2D blurTexture4;\t\t\t\tuniform sampler2D blurTexture5;\t\t\t\tuniform sampler2D dirtTexture;\t\t\t\tuniform float bloomStrength;\t\t\t\tuniform float bloomRadius;\t\t\t\tuniform float bloomFactors[NUM_MIPS];\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\t\t\t\t\t\t\t\tfloat lerpBloomFactor(const in float factor) { \t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\t\t\t\t}\t\t\t\t\t\t\t\tvoid main() {\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\t\t\t\t}"})}});THREE.UnrealBloomPass.BlurDirectionX=new THREE.Vector2(1,0);THREE.UnrealBloomPass.BlurDirectionY=new THREE.Vector2(0,1)},function(e,t){THREE.PosterShader={uniforms:{tDiffuse:{value:null}},vertexShader:`\n    varying vec2 vUv;\n\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n  `,fragmentShader:`\n    #define PI 3.14159\n    #define UV_SCALE 0.02\n    #define MAX_HEIGHT 0.5\n    varying vec2 vUv;\n    uniform sampler2D tDiffuse;\n\n    float posterise(float val, float amount) {\n      return floor(val * amount) / amount;\n    }\n\n    float posteriseCeil(float val, float amount) {\n      return ceil(val * amount) / amount;\n    }\n\n    void main() {\n      vec4 frag = texture2D(tDiffuse, vUv);\n      frag.r = posterise(frag.r, 16.0);\n      gl_FragColor = frag;\n    }\n  `};THREE.PosterPass=function(e){THREE.Pass.call(this);this.size=e;this.shader=THREE.PosterShader;this.material=new THREE.ShaderMaterial(this.shader);this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1);this.scene=new THREE.Scene;this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),this.material);this.quad.frustumCulled=false;this.scene.add(this.quad);this.time=0};THREE.PosterPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.PosterPass,render:function(e,t,a,i,r){this.shader.uniforms["tDiffuse"].value=a.texture;if(this.renderToScreen){e.render(this.scene,this.camera)}else{e.render(this.scene,this.camera,t,this.clear)}}})},function(e,t){THREE.MTLLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager};THREE.MTLLoader.prototype={constructor:THREE.MTLLoader,load:function(e,t,a,i){var r=this;var s=new THREE.FileLoader(this.manager);s.setPath(this.path);s.load(e,function(e){t(r.parse(e))},a,i)},setPath:function(e){this.path=e},setTexturePath:function(e){this.texturePath=e},setBaseUrl:function(e){console.warn("THREE.MTLLoader: .setBaseUrl() is deprecated. Use .setTexturePath( path ) for texture path or .setPath( path ) for general base path instead.");this.setTexturePath(e)},setCrossOrigin:function(e){this.crossOrigin=e},setMaterialOptions:function(e){this.materialOptions=e},parse:function(e){var t=e.split("\n");var a={};var i=/\s+/;var r={};for(var s=0;s<t.length;s++){var o=t[s];o=o.trim();if(o.length===0||o.charAt(0)==="#"){continue}var n=o.indexOf(" ");var l=n>=0?o.substring(0,n):o;l=l.toLowerCase();var h=n>=0?o.substring(n+1):"";h=h.trim();if(l==="newmtl"){a={name:h};r[h]=a}else if(a){if(l==="ka"||l==="kd"||l==="ks"){var u=h.split(i,3);a[l]=[parseFloat(u[0]),parseFloat(u[1]),parseFloat(u[2])]}else{a[l]=h}}}var d=new THREE.MTLLoader.MaterialCreator(this.texturePath||this.path,this.materialOptions);d.setCrossOrigin(this.crossOrigin);d.setManager(this.manager);d.setMaterials(r);return d}};THREE.MTLLoader.MaterialCreator=function(e,t){this.baseUrl=e||"";this.options=t;this.materialsInfo={};this.materials={};this.materialsArray=[];this.nameLookup={};this.side=this.options&&this.options.side?this.options.side:THREE.FrontSide;this.wrap=this.options&&this.options.wrap?this.options.wrap:THREE.RepeatWrapping};THREE.MTLLoader.MaterialCreator.prototype={constructor:THREE.MTLLoader.MaterialCreator,crossOrigin:"Anonymous",setCrossOrigin:function(e){this.crossOrigin=e},setManager:function(e){this.manager=e},setMaterials:function(e){this.materialsInfo=this.convert(e);this.materials={};this.materialsArray=[];this.nameLookup={}},convert:function(e){if(!this.options)return e;var t={};for(var a in e){var i=e[a];var r={};t[a]=r;for(var s in i){var o=true;var n=i[s];var l=s.toLowerCase();switch(l){case"kd":case"ka":case"ks":if(this.options&&this.options.normalizeRGB){n=[n[0]/255,n[1]/255,n[2]/255]}if(this.options&&this.options.ignoreZeroRGBs){if(n[0]===0&&n[1]===0&&n[2]===0){o=false}}break;default:break}if(o){r[l]=n}}}return t},preload:function(){for(var e in this.materialsInfo){this.create(e)}},getIndex:function(e){return this.nameLookup[e]},getAsArray:function(){var e=0;for(var t in this.materialsInfo){this.materialsArray[e]=this.create(t);this.nameLookup[t]=e;e++}return this.materialsArray},create:function(e){if(this.materials[e]===undefined){this.createMaterial_(e)}return this.materials[e]},createMaterial_:function(e){var t=this;var a=this.materialsInfo[e];var i={name:e,side:this.side};function r(e,t){if(typeof t!=="string"||t==="")return"";if(/^https?:\/\//i.test(t))return t;return e+t}function s(e,a){if(i[e])return;var s=t.getTextureParams(a,i);var o=t.loadTexture(r(t.baseUrl,s.url));o.repeat.copy(s.scale);o.offset.copy(s.offset);o.wrapS=t.wrap;o.wrapT=t.wrap;i[e]=o}for(var o in a){var n=a[o];var l;if(n==="")continue;switch(o.toLowerCase()){case"kd":i.color=(new THREE.Color).fromArray(n);break;case"ks":i.specular=(new THREE.Color).fromArray(n);break;case"map_kd":s("map",n);break;case"map_ks":s("specularMap",n);break;case"norm":s("normalMap",n);break;case"map_bump":case"bump":s("bumpMap",n);break;case"ns":i.shininess=parseFloat(n);break;case"d":l=parseFloat(n);if(l<1){i.opacity=l;i.transparent=true}break;case"tr":l=parseFloat(n);if(l>0){i.opacity=1-l;i.transparent=true}break;default:break}}this.materials[e]=new THREE.MeshPhongMaterial(i);return this.materials[e]},getTextureParams:function(e,t){var a={scale:new THREE.Vector2(1,1),offset:new THREE.Vector2(0,0)};var i=e.split(/\s+/);var r;r=i.indexOf("-bm");if(r>=0){t.bumpScale=parseFloat(i[r+1]);i.splice(r,2)}r=i.indexOf("-s");if(r>=0){a.scale.set(parseFloat(i[r+1]),parseFloat(i[r+2]));i.splice(r,4)}r=i.indexOf("-o");if(r>=0){a.offset.set(parseFloat(i[r+1]),parseFloat(i[r+2]));i.splice(r,4)}a.url=i.join(" ").trim();return a},loadTexture:function(e,t,a,i,r){var s;var o=THREE.Loader.Handlers.get(e);var n=this.manager!==undefined?this.manager:THREE.DefaultLoadingManager;if(o===null){o=new THREE.TextureLoader(n)}if(o.setCrossOrigin)o.setCrossOrigin(this.crossOrigin);s=o.load(e,a,i,r);if(t!==undefined)s.mapping=t;return s}}},function(e,t){(function(){THREE.FBXLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager};Object.assign(THREE.FBXLoader.prototype,{load:function(e,t,a,i){var r=this;var s=THREE.Loader.prototype.extractUrlBase(e);var o=new THREE.FileLoader(this.manager);o.setResponseType("arraybuffer");o.load(e,function(a){try{var o=r.parse(a,s);t(o)}catch(t){window.setTimeout(function(){if(i)i(t);r.manager.itemError(e)},0)}},a,i)},parse:function(a,r){var o;if(D(a)){o=(new z).parse(a)}else{var n=W(a);if(!Q(n)){throw new Error("THREE.FBXLoader: Unknown format.")}if(B(n)<7e3){throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+B(n))}o=(new k).parse(n)}var h=e(o);var d=t(o);var f=i(o,new THREE.TextureLoader(this.manager).setPath(r),d,h);var c=s(o,f,h);var p=l(o,h);var m=u(o,h,p);var v=y(o,h,p,m,c);return v}});function e(e){var t=new Map;if("Connections"in e){var a=e.Connections.properties.connections;for(var i=0,r=a.length;i<r;++i){var s=a[i];if(!t.has(s[0])){t.set(s[0],{parents:[],children:[]})}var o={ID:s[1],relationship:s[2]};t.get(s[0]).parents.push(o);if(!t.has(s[1])){t.set(s[1],{parents:[],children:[]})}var n={ID:s[0],relationship:s[2]};t.get(s[1]).children.push(n)}}return t}function t(e){var t=new Map;if("Video"in e.Objects.subNodes){var i=e.Objects.subNodes.Video;for(var r in i){var s=i[r];if("Content"in s.properties){var o=a(i[r]);t.set(parseInt(r),o)}}}return t}function a(e){var t=e.properties.Content;var a=e.properties.RelativeFilename||e.properties.Filename;var i=a.slice(a.lastIndexOf(".")+1).toLowerCase();var r;switch(i){case"bmp":r="image/bmp";break;case"jpg":case"jpeg":r="image/jpeg";break;case"png":r="image/png";break;case"tif":r="image/tiff";break;default:console.warn('FBXLoader: Image type "'+i+'" is not supported.');return}if(typeof t==="string"){return"data:"+r+";base64,"+t}else{var s=new Uint8Array(t);return window.URL.createObjectURL(new Blob([s],{type:r}))}}function i(e,t,a,i){var s=new Map;var o=["jpg","jpeg","png","bmp"];if("Texture"in e.Objects.subNodes){var n=e.Objects.subNodes.Texture;for(var l in n){var h=n[l];var u=h.properties.FileName.slice(h.properties.FileName.lastIndexOf(".")+1).toLowerCase();if(o.indexOf(u)!=-1){var d=r(h,t,a,i);s.set(parseInt(l),d)}}}return s}function r(e,t,a,i){var r=e.id;var s=e.attrName;var o;var n=e.properties.FileName;var l=e.properties.RelativeFilename;var h=i.get(r).children;if(h!==undefined&&h.length>0&&a.has(h[0].ID)){o=a.get(h[0].ID)}else if(l!==undefined&&l[0]!=="/"&&l.match(/^[a-zA-Z]:/)===null){o=l}else{var u=n.split(/[\\\/]/);if(u.length>0){o=u[u.length-1]}else{o=n}}var d=t.path;if(o.indexOf("blob:")===0||o.indexOf("data:")===0){t.setPath(undefined)}var f=t.load(o);f.name=s;f.FBX_ID=r;var c=e.properties.WrapModeU;var p=e.properties.WrapModeV;var m=c!==undefined?c.value:0;var v=p!==undefined?p.value:0;f.wrapS=m===0?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping;f.wrapT=v===0?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping;if("Scaling"in e.properties){var x=e.properties.Scaling.value;f.repeat.x=x[0];f.repeat.y=x[1]}t.setPath(d);return f}function s(e,t,a){var i=new Map;if("Material"in e.Objects.subNodes){var r=e.Objects.subNodes.Material;for(var s in r){var n=o(r[s],t,a);if(n!==null)i.set(parseInt(s),n)}}return i}function o(e,t,a){var i=e.id;var r=e.attrName;var s=e.properties.ShadingModel;if(typeof s==="object"){s=s.value}if(!a.has(i))return null;var o=a.get(i).children;var l=n(e.properties,t,o);var h;switch(s.toLowerCase()){case"phong":h=new THREE.MeshPhongMaterial;break;case"lambert":h=new THREE.MeshLambertMaterial;break;case"unknown":h=new THREE.MeshStandardMaterial;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',s);h=new THREE.MeshPhongMaterial({color:3342591});break}h.setValues(l);h.name=r;return h}function n(e,t,a){var i={};if(e.BumpFactor){i.bumpScale=e.BumpFactor.value}if(e.Diffuse){i.color=V(e.Diffuse)}if(e.DisplacementFactor){i.displacementScale=e.DisplacementFactor.value}if(e.ReflectionFactor){i.reflectivity=e.ReflectionFactor.value}if(e.Specular){i.specular=V(e.Specular)}if(e.Shininess){i.shininess=e.Shininess.value}if(e.Emissive){i.emissive=V(e.Emissive)}if(e.EmissiveFactor){i.emissiveIntensity=parseFloat(e.EmissiveFactor.value)}if(e.Opacity){i.opacity=parseFloat(e.Opacity.value)}if(i.opacity<1){i.transparent=true}if(e["Maya|base_color"]){var r=e["Maya|base_color"].value;i.color=new THREE.Color(r[0],r[1],r[2])}if(e["Maya|emissive"]){var r=e["Maya|emissive"];i.emissive=new THREE.Color(r[0],r[1],r[2])}if(e["Maya|emissive_intensity"]){i.emissiveIntensity=e["Maya|emissive_intensity"].value}if(e["Maya|metallic"]){i.metalness=e["Maya|metallic"].value}if(e["Maya|roughness"]){i.roughness=e["Maya|roughness"].value}var s=1;if(e["Maya|uv_scale"]){var s=e["Maya|uv_scale"].value}for(var o=0,n=a.length;o<n;++o){var l=a[o];var h=l.relationship;switch(h){case"Maya|TEX_color_map":var u="Maya|use_color_map";if(e[u]&&e[u].value==1){i.map=t.get(l.ID);if(s!=1){i.map.wrapS=THREE.RepeatWrapping;i.map.wrapT=THREE.RepeatWrapping;i.map.repeat.set(s,s)}}break;case"Maya|TEX_emissive_map":var u="Maya|use_emissive_map";if(e[u]&&e[u].value==1){i.emissiveMap=t.get(l.ID);if(s!=1){i.emissiveMap.wrapS=THREE.RepeatWrapping;i.emissiveMap.wrapT=THREE.RepeatWrapping;i.emissiveMap.repeat.set(s,s)}}break;case"Maya|TEX_roughness_map":var u="Maya|use_roughness_map";if(e[u]&&e[u].value==1){i.roughnessMap=t.get(l.ID);if(s!=1){i.roughnessMap.wrapS=THREE.RepeatWrapping;i.roughnessMap.wrapT=THREE.RepeatWrapping;i.roughnessMap.repeat.set(s,s)}}break;case"Maya|TEX_normal_map":var u="Maya|use_normal_map";if(e[u]&&e[u].value==1){i.normalMap=t.get(l.ID);if(s!=1){i.normalMap.wrapS=THREE.RepeatWrapping;i.normalMap.wrapT=THREE.RepeatWrapping;i.normalMap.repeat.set(s,s)}}break;case"Maya|TEX_metallic_map":var u="Maya|use_metallic_map";if(e[u]&&e[u].value==1){i.metalnessMap=t.get(l.ID);if(s!=1){i.metalnessMap.wrapS=THREE.RepeatWrapping;i.metalnessMap.wrapT=THREE.RepeatWrapping;i.metalnessMap.repeat.set(s,s)}}break;case"Maya|TEX_ao_map":var u="Maya|use_ao_map";if(e[u]&&e[u].value==1){i.aoMap=t.get(l.ID);if(s!=1){i.aoMap.wrapS=THREE.RepeatWrapping;i.aoMap.wrapT=THREE.RepeatWrapping;i.aoMap.repeat.set(s,s)}}break;case"Maya|TEX_brdf_lut":case"Maya|TEX_global_specular_cube":case"Maya|TEX_global_diffuse_cube":break;case"Bump":i.bumpMap=t.get(l.ID);break;case"DiffuseColor":i.map=t.get(l.ID);break;case"DisplacementColor":i.displacementMap=t.get(l.ID);break;case"EmissiveColor":i.emissiveMap=t.get(l.ID);break;case"NormalMap":i.normalMap=t.get(l.ID);break;case"ReflectionColor":i.envMap=t.get(l.ID);i.envMap.mapping=THREE.EquirectangularReflectionMapping;break;case"SpecularColor":i.specularMap=t.get(l.ID);break;case"TransparentColor":i.alphaMap=t.get(l.ID);i.transparent=true;break;case"AmbientColor":case"ShininessExponent":case"SpecularFactor":case"VectorDisplacementColor":default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",h);break}}return i}function l(e,t){var a={};if("Deformer"in e.Objects.subNodes){var i=e.Objects.subNodes.Deformer;for(var r in i){var s=i[r];if(s.attrType==="Skin"){var o=t.get(parseInt(r));var n=h(o,i);n.FBX_ID=parseInt(r);a[r]=n}}}return a}function h(e,t){var a={};var i=e.children;for(var r=0,s=i.length;r<s;++r){var o=i[r];var n=t[o.ID];var l={FBX_ID:o.ID,index:r,indices:[],weights:[],transform:(new THREE.Matrix4).fromArray(n.subNodes.Transform.properties.a),transformLink:(new THREE.Matrix4).fromArray(n.subNodes.TransformLink.properties.a),linkMode:n.properties.Mode};if("Indexes"in n.subNodes){l.indices=n.subNodes.Indexes.properties.a;l.weights=n.subNodes.Weights.properties.a}a[o.ID]=l}return{map:a,bones:[]}}function u(e,t,a){var i=new Map;if("Geometry"in e.Objects.subNodes){var r=e.Objects.subNodes.Geometry;for(var s in r){var o=t.get(parseInt(s));var n=d(r[s],o,a);i.set(parseInt(s),n)}}return i}function d(e,t,a){switch(e.attrType){case"Mesh":return f(e,t,a);break;case"NurbsCurve":return T(e);break}}function f(e,t,a){for(var i=0;i<t.children.length;++i){var r=a[t.children[i].ID];if(r!==undefined)break}return c(e,r)}function c(e,t){var a=e.subNodes;var i=a.Vertices.properties.a;var r=a.PolygonVertexIndex.properties.a;var s=[];var o=[];var n=[];var l=[];var h=[];var u=[];var d=[];if(a.LayerElementColor){var f=v(a.LayerElementColor[0])}if(a.LayerElementMaterial){var c=x(a.LayerElementMaterial[0])}if(a.LayerElementNormal){var g=p(a.LayerElementNormal[0])}if(a.LayerElementUV){var E=[];var T=0;while(a.LayerElementUV[T]){E.push(m(a.LayerElementUV[T]));T++}}var y={};if(t){var F=t.map;for(var P in F){var _=F[P];var b=_.indices;for(var w=0;w<b.length;w++){var L=b[w];var S=_.weights[w];if(y[L]===undefined)y[L]=[];y[L].push({id:_.index,weight:S})}}}var R=0;var I=0;var N=false;var M=[];var H=[];var U=[];var X=[];var k=[];var z=[];for(var C=0;C<r.length;C++){var O=r[C];var D=false;if(O<0){O=O^-1;r[C]=O;D=true}var Q=[];var B=[];M.push(O*3,O*3+1,O*3+2);if(f){var Y=A(C,R,O,f);U.push(Y[0],Y[1],Y[2])}if(t){if(y[O]!==undefined){var G=y[O];for(var w=0,j=G.length;w<j;w++){B.push(G[w].weight);Q.push(G[w].id)}}if(B.length>4){if(!N){console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights.");N=true}var V=[0,0,0,0];var W=[0,0,0,0];B.forEach(function(e,t){var a=e;var i=Q[t];W.forEach(function(e,t,r){if(a>e){r[t]=a;a=e;var s=V[t];V[t]=i;i=s}})});Q=V;B=W}for(var T=B.length;T<4;++T){B[T]=0;Q[T]=0}for(var T=0;T<4;++T){k.push(B[T]);z.push(Q[T])}}if(g){var Y=A(C,R,O,g);H.push(Y[0],Y[1],Y[2])}if(E){for(var T=0;T<E.length;T++){var Y=A(C,R,O,E[T]);if(X[T]===undefined){X[T]=[]}X[T].push(Y[0],Y[1])}}I++;if(D){for(var T=2;T<I;T++){s.push(i[M[0]]);s.push(i[M[1]]);s.push(i[M[2]]);s.push(i[M[(T-1)*3]]);s.push(i[M[(T-1)*3+1]]);s.push(i[M[(T-1)*3+2]]);s.push(i[M[T*3]]);s.push(i[M[T*3+1]]);s.push(i[M[T*3+2]])}if(t){for(var T=2;T<I;T++){u.push(k[0]);u.push(k[1]);u.push(k[2]);u.push(k[3]);u.push(k[(T-1)*4]);u.push(k[(T-1)*4+1]);u.push(k[(T-1)*4+2]);u.push(k[(T-1)*4+3]);u.push(k[T*4]);u.push(k[T*4+1]);u.push(k[T*4+2]);u.push(k[T*4+3]);d.push(z[0]);d.push(z[1]);d.push(z[2]);d.push(z[3]);d.push(z[(T-1)*4]);d.push(z[(T-1)*4+1]);d.push(z[(T-1)*4+2]);d.push(z[(T-1)*4+3]);d.push(z[T*4]);d.push(z[T*4+1]);d.push(z[T*4+2]);d.push(z[T*4+3])}}if(g){for(var T=2;T<I;T++){o.push(H[0]);o.push(H[1]);o.push(H[2]);o.push(H[(T-1)*3]);o.push(H[(T-1)*3+1]);o.push(H[(T-1)*3+2]);o.push(H[T*3]);o.push(H[T*3+1]);o.push(H[T*3+2])}}if(E){for(var w=0;w<E.length;w++){if(l[w]===undefined)l[w]=[];for(var T=2;T<I;T++){l[w].push(X[w][0]);l[w].push(X[w][1]);l[w].push(X[w][(T-1)*2]);l[w].push(X[w][(T-1)*2+1]);l[w].push(X[w][T*2]);l[w].push(X[w][T*2+1])}}}if(f){for(var T=2;T<I;T++){n.push(U[0]);n.push(U[1]);n.push(U[2]);n.push(U[(T-1)*3]);n.push(U[(T-1)*3+1]);n.push(U[(T-1)*3+2]);n.push(U[T*3]);n.push(U[T*3+1]);n.push(U[T*3+2])}}if(c&&c.mappingType!=="AllSame"){var q=A(C,R,O,c)[0];for(var T=2;T<I;T++){h.push(q);h.push(q);h.push(q)}}R++;D=false;I=0;M=[];H=[];U=[];X=[];k=[];z=[]}}var K=new THREE.BufferGeometry;K.name=e.name;K.addAttribute("position",new THREE.Float32BufferAttribute(s,3));if(n.length>0){K.addAttribute("color",new THREE.Float32BufferAttribute(n,3))}if(t){K.addAttribute("skinIndex",new THREE.Float32BufferAttribute(d,4));K.addAttribute("skinWeight",new THREE.Float32BufferAttribute(u,4));K.FBX_Deformer=t}if(o.length>0){K.addAttribute("normal",new THREE.Float32BufferAttribute(o,3))}if(l.length>0){for(var T=0;T<l.length;T++){var Z="uv"+(T+1).toString();if(T==0){Z="uv"}K.addAttribute(Z,new THREE.Float32BufferAttribute(l[T],2))}}if(c&&c.mappingType!=="AllSame"){var $=h[0];var J=0;for(var T=0;T<h.length;++T){if(h[T]!==$){K.addGroup(J,T-J,$);$=h[T];J=T}}if(K.groups.length>0){var ee=K.groups[K.groups.length-1];var te=ee.start+ee.count;if(te!==h.length){K.addGroup(te,h.length-te,$)}}if(K.groups.length===0){K.addGroup(0,h.length,h[0])}}return K}function p(e){var t=e.properties.MappingInformationType;var a=e.properties.ReferenceInformationType;var i=e.subNodes.Normals.properties.a;var r=[];if(a==="IndexToDirect"){if("NormalIndex"in e.subNodes){r=e.subNodes.NormalIndex.properties.a}else if("NormalsIndex"in e.subNodes){r=e.subNodes.NormalsIndex.properties.a}}return{dataSize:3,buffer:i,indices:r,mappingType:t,referenceType:a}}function m(e){var t=e.properties.MappingInformationType;var a=e.properties.ReferenceInformationType;var i=e.subNodes.UV.properties.a;var r=[];if(a==="IndexToDirect"){r=e.subNodes.UVIndex.properties.a}return{dataSize:2,buffer:i,indices:r,mappingType:t,referenceType:a}}function v(e){var t=e.properties.MappingInformationType;var a=e.properties.ReferenceInformationType;var i=e.subNodes.Colors.properties.a;var r=[];if(a==="IndexToDirect"){r=e.subNodes.ColorIndex.properties.a}return{dataSize:4,buffer:i,indices:r,mappingType:t,referenceType:a}}function x(e){var t=e.properties.MappingInformationType;var a=e.properties.ReferenceInformationType;if(t==="NoMappingInformation"){return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:a}}var i=e.subNodes.Materials.properties.a;var r=[];for(var s=0,o=i.length;s<o;++s){r.push(s)}return{dataSize:1,buffer:i,indices:r,mappingType:t,referenceType:a}}var g=[];var E={ByPolygonVertex:{Direct:function(e,t,a,i){var r=e*i.dataSize;var s=e*i.dataSize+i.dataSize;return Z(g,i.buffer,r,s)},IndexToDirect:function(e,t,a,i){var r=i.indices[e];var s=r*i.dataSize;var o=r*i.dataSize+i.dataSize;return Z(g,i.buffer,s,o)}},ByPolygon:{Direct:function(e,t,a,i){var r=t*i.dataSize;var s=t*i.dataSize+i.dataSize;return Z(g,i.buffer,r,s)},IndexToDirect:function(e,t,a,i){var r=i.indices[t];var s=r*i.dataSize;var o=r*i.dataSize+i.dataSize;return Z(g,i.buffer,s,o)}},ByVertice:{Direct:function(e,t,a,i){var r=a*i.dataSize;var s=a*i.dataSize+i.dataSize;return Z(g,i.buffer,r,s)}},AllSame:{IndexToDirect:function(e,t,a,i){var r=i.indices[0]*i.dataSize;var s=i.indices[0]*i.dataSize+i.dataSize;return Z(g,i.buffer,r,s)}}};function A(e,t,a,i){return E[i.mappingType][i.referenceType](e,t,a,i)}function T(e){if(THREE.NURBSCurve===undefined){console.error("THREE.FBXLoader: The loader relies on THREE.NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry.");return new THREE.BufferGeometry}var t=parseInt(e.properties.Order);if(isNaN(t)){console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",e.properties.Order,e.id);return new THREE.BufferGeometry}var a=t-1;var i=e.subNodes.KnotVector.properties.a;var r=[];var s=e.subNodes.Points.properties.a;for(var o=0,n=s.length;o<n;o+=4){r.push((new THREE.Vector4).fromArray(s,o))}var l,h;if(e.properties.Form==="Closed"){r.push(r[0])}else if(e.properties.Form==="Periodic"){l=a;h=i.length-1-l;for(var o=0;o<a;++o){r.push(r[o])}}var u=new THREE.NURBSCurve(a,i,r,l,h);var d=u.getPoints(r.length*7);var f=new Float32Array(d.length*3);for(var o=0,n=d.length;o<n;++o){d[o].toArray(f,o*3)}var c=new THREE.BufferGeometry;c.addAttribute("position",new THREE.BufferAttribute(f,3));return c}function y(e,t,a,i,r){var s=new THREE.Group;var o=e.Objects.subNodes.Model;var n=[];var l=new Map;for(var h in o){var u=parseInt(h);var d=o[h];var f=t.get(u);var c=null;for(var p=0;p<f.parents.length;++p){for(var m in a){var v=a[m];var x=v.map;var g=x[f.parents[p].ID];if(g){var E=c;c=new THREE.Bone;v.bones[g.index]=c;if(E!==null)c.add(E)}}}if(!c){switch(d.attrType){case"Camera":var A;for(var T=0,y=f.children.length;T<y;++T){var P=f.children[T].ID;var _=e.Objects.subNodes.NodeAttribute[P];if(_!==undefined&&_.properties!==undefined){A=_.properties}}if(A===undefined){c=new THREE.Object3D}else{var b=0;if(A.CameraProjectionType!==undefined&&A.CameraProjectionType.value===1){b=1}var w=1;if(A.NearPlane!==undefined){w=A.NearPlane.value/1e3}var L=1e3;if(A.FarPlane!==undefined){L=A.FarPlane.value/1e3}var R=window.innerWidth;var I=window.innerHeight;if(A.AspectWidth!==undefined&&A.AspectHeight!==undefined){R=A.AspectWidth.value;I=A.AspectHeight.value}var N=R/I;var M=45;if(A.FieldOfView!==undefined){M=A.FieldOfView.value}switch(b){case 0:c=new THREE.PerspectiveCamera(M,N,w,L);break;case 1:c=new THREE.OrthographicCamera(-R/2,R/2,I/2,-I/2,w,L);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+b+".");c=new THREE.Object3D;break}}break;case"Light":var H;for(var T=0,y=f.children.length;T<y;++T){var P=f.children[T].ID;var _=e.Objects.subNodes.NodeAttribute[P];if(_!==undefined&&_.properties!==undefined){H=_.properties}}if(H===undefined){c=new THREE.Object3D}else{var b;if(H.LightType===undefined){b=0}else{b=H.LightType.value}var U=16777215;if(H.Color!==undefined){U=V(H.Color.value)}var X=H.Intensity===undefined?1:H.Intensity.value/100;if(H.CastLightOnObject!==undefined&&H.CastLightOnObject.value===0){X=0}var k=0;if(H.FarAttenuationEnd!==undefined){if(H.EnableFarAttenuation!==undefined&&H.EnableFarAttenuation.value===0){k=0}else{k=H.FarAttenuationEnd.value/1e3}}var z=1;switch(b){case 0:c=new THREE.PointLight(U,X,k,z);break;case 1:c=new THREE.DirectionalLight(U,X);break;case 2:var C=Math.PI/3;if(H.InnerAngle!==undefined){C=THREE.Math.degToRad(H.InnerAngle.value)}var O=0;if(H.OuterAngle!==undefined){O=THREE.Math.degToRad(H.OuterAngle.value);O=Math.max(O,1)}c=new THREE.SpotLight(U,X,k,C,O,z);break;default:console.warn("THREE.FBXLoader: Unknown light type "+H.LightType.value+", defaulting to a THREE.PointLight.");c=new THREE.PointLight(U,X);break}if(H.CastShadows!==undefined&&H.CastShadows.value===1){c.castShadow=true}}break;case"Mesh":var D=null;var Q=null;var B=[];for(var T=0,y=f.children.length;T<y;++T){var Y=f.children[T];if(i.has(Y.ID)){D=i.get(Y.ID)}if(r.has(Y.ID)){B.push(r.get(Y.ID))}}if(B.length>1){Q=B}else if(B.length>0){Q=B[0]}else{Q=new THREE.MeshPhongMaterial({color:13421772});B.push(Q)}if("color"in D.attributes){for(var G=0,j=B.length;G<j;++G){B[G].vertexColors=THREE.VertexColors}}if(D.FBX_Deformer){for(var W=0,K=B.length;W<K;++W){B[W].skinning=true}c=new THREE.SkinnedMesh(D,Q)}else{c=new THREE.Mesh(D,Q)}break;case"NurbsCurve":var D=null;for(var T=0,y=f.children.length;T<y;++T){var Y=f.children[T];if(i.has(Y.ID)){D=i.get(Y.ID)}}Q=new THREE.LineBasicMaterial({color:3342591,linewidth:5});c=new THREE.Line(D,Q);break;default:c=new THREE.Group;break}}c.name=THREE.PropertyBinding.sanitizeNodeName(d.attrName);c.FBX_ID=u;n.push(c);l.set(u,c)}for(var Z=0,$=n.length;Z<$;++Z){var c=n[Z];var d=o[c.FBX_ID];if("Lcl_Translation"in d.properties){c.position.fromArray(d.properties.Lcl_Translation.value)}if("Lcl_Rotation"in d.properties){var J=d.properties.Lcl_Rotation.value.map(THREE.Math.degToRad);J.push("ZYX");c.rotation.fromArray(J)}if("Lcl_Scaling"in d.properties){c.scale.fromArray(d.properties.Lcl_Scaling.value)}if("PreRotation"in d.properties){var ee=d.properties.PreRotation.value.map(THREE.Math.degToRad);ee[3]="ZYX";var te=(new THREE.Euler).fromArray(ee);te=(new THREE.Quaternion).setFromEuler(te);var ae=(new THREE.Quaternion).setFromEuler(c.rotation);te.multiply(ae);c.rotation.setFromQuaternion(te,"ZYX")}if("GeometricTranslation"in d.properties){var ee=d.properties.GeometricTranslation.value;c.traverse(function(e){if(e.geometry){e.geometry.translate(ee[0],ee[1],ee[2])}})}if("LookAtProperty"in d.properties){var f=t.get(c.FBX_ID);for(var T=0,y=f.children.length;T<y;++T){var Y=f.children[T];if(Y.relationship==="LookAtProperty"){var ie=e.Objects.subNodes.Model[Y.ID];if("Lcl_Translation"in ie.properties){var re=ie.properties.Lcl_Translation.value;if(c.target!==undefined){c.target.position.set(re[0],re[1],re[2]);s.add(c.target)}else{c.lookAt(new THREE.Vector3(re[0],re[1],re[2]))}}}}}var f=t.get(c.FBX_ID);for(var se=0;se<f.parents.length;se++){var oe=q(n,function(e){return e.FBX_ID===f.parents[se].ID});if(oe>-1){n[oe].add(c);break}}if(c.parent===null){s.add(c)}}s.updateMatrixWorld(true);var ne=new Map;if("Pose"in e.Objects.subNodes){var le=e.Objects.subNodes.Pose;for(var h in le){if(le[h].attrType==="BindPose"){le=le[h];break}}var he=le.subNodes.PoseNode;for(var ue=0,de=he.length;ue<de;++ue){var d=he[ue];var fe=(new THREE.Matrix4).fromArray(d.subNodes.Matrix.properties.a);ne.set(parseInt(d.properties.Node),fe)}}for(var m in a){var v=a[m];var x=v.map;for(var ce in x){var g=x[ce];var pe=g.index;var me=v.bones[pe];if(!ne.has(me.FBX_ID)){break}var ve=ne.get(me.FBX_ID);me.matrixWorld.copy(ve)}v.skeleton=new THREE.Skeleton(v.bones);var f=t.get(v.FBX_ID);var xe=f.parents;for(var ge=0,Ee=xe.length;ge<Ee;++ge){var Ae=xe[ge];if(i.has(Ae.ID)){var Te=Ae.ID;var ye=t.get(Te);for(var p=0;p<ye.parents.length;++p){if(l.has(ye.parents[p].ID)){var c=l.get(ye.parents[p].ID);c.bind(v.skeleton,c.matrixWorld);break}}}}}s.updateMatrixWorld(true);s.skeleton={bones:n};var Fe=F(e,t,s);S(s,Fe);if("GlobalSettings"in e&&"AmbientColor"in e.GlobalSettings.properties){var Pe=e.GlobalSettings.properties.AmbientColor.value;var _e=Pe[0];var be=Pe[1];var we=Pe[2];if(_e!==0||be!==0||we!==0){var U=new THREE.Color(_e,be,we);s.add(new THREE.AmbientLight(U,1))}}return s}function F(e,t,a){var i=e.Objects.subNodes.AnimationCurveNode;var r=e.Objects.subNodes.AnimationCurve;var s=e.Objects.subNodes.AnimationLayer;var o=e.Objects.subNodes.AnimationStack;var n=30;if("GlobalSettings"in e&&"TimeMode"in e.GlobalSettings.properties){var l=[30,120,100,60,50,48,30,30,29.97,29.97,25,24,1,23.976,30,96,72,59.94];var h=e.GlobalSettings.properties.TimeMode.value;if(h===14){if("CustomFrameRate"in e.GlobalSettings.properties){n=e.GlobalSettings.properties.CustomFrameRate.value;n=n===-1?30:n}}else if(h<=17){n=l[h]}}var u={curves:new Map,layers:{},stacks:{},length:0,fps:n,frames:0};var d=[];for(var f in i){if(f.match(/\d+/)){var c=P(e,i[f],t,a);d.push(c)}}var p=new Map;for(var m=0;m<d.length;++m){if(d[m]===null){continue}p.set(d[m].id,d[m])}var v=[];for(f in r){if(f.match(/\d+/)){var x=_(r[f]);if(!t.has(x.id))continue;v.push(x);var g=t.get(x.id).parents[0];var E=g.ID;var A=g.relationship;var T="";if(A.match(/X/)){T="x"}else if(A.match(/Y/)){T="y"}else if(A.match(/Z/)){T="z"}else{continue}p.get(E).curves[T]=x}}p.forEach(function(e){var t=e.containerBoneID;if(!u.curves.has(t)){u.curves.set(t,{T:null,R:null,S:null})}u.curves.get(t)[e.attr]=e;if(e.attr==="R"){var a=e.curves;if(a.x===null){a.x={version:null,times:[0],values:[0]}}if(a.y===null){a.y={version:null,times:[0],values:[0]}}if(a.z===null){a.z={version:null,times:[0],values:[0]}}a.x.values=a.x.values.map(THREE.Math.degToRad);a.y.values=a.y.values.map(THREE.Math.degToRad);a.z.values=a.z.values.map(THREE.Math.degToRad);if(e.preRotations!==null){var i=(new THREE.Euler).setFromVector3(e.preRotations,"ZYX");i=(new THREE.Quaternion).setFromEuler(i);var r=new THREE.Euler;var s=new THREE.Quaternion;for(var o=0;o<a.x.times.length;++o){r.set(a.x.values[o],a.y.values[o],a.z.values[o],"ZYX");s.setFromEuler(r).premultiply(i);r.setFromQuaternion(s,"ZYX");a.x.values[o]=r.x;a.y.values[o]=r.y;a.z.values[o]=r.z}}}});for(var f in s){var y=[];var F=t.get(parseInt(f)).children;for(var w=0;w<F.length;w++){if(p.has(F[w].ID)){var L=p.get(F[w].ID);var S=L.containerBoneID;if(y[S]===undefined){y[S]={T:null,R:null,S:null}}y[S][L.attr]=L}}u.layers[f]=y}for(var f in o){var R=[];var F=t.get(parseInt(f)).children;var I={max:0,min:Number.MAX_VALUE};for(var w=0;w<F.length;++w){var N=u.layers[F[w].ID];if(N!==undefined){R.push(N);for(var M=0,H=N.length;M<H;++M){var y=N[M];if(y){b(y,I)}}}}if(I.max>I.min){u.stacks[f]={name:o[f].attrName,layers:R,length:I.max-I.min,frames:(I.max-I.min)*u.fps}}}return u}function P(e,t,a,i){var r=e.Objects.subNodes.Model;var s={id:t.id,attr:t.attrName,internalID:t.id,attrX:false,attrY:false,attrZ:false,containerBoneID:-1,containerID:-1,curves:{x:null,y:null,z:null},preRotations:null};if(s.attr.match(/S|R|T/)){for(var o in t.properties){if(o.match(/X/)){s.attrX=true}if(o.match(/Y/)){s.attrY=true}if(o.match(/Z/)){s.attrZ=true}}}else{return null}var n=a.get(s.id);var l=n.parents;for(var h=l.length-1;h>=0;--h){var u=q(i.skeleton.bones,function(e){return e.FBX_ID===l[h].ID});if(u>-1){s.containerBoneID=u;s.containerID=l[h].ID;var d=r[s.containerID.toString()];if("PreRotation"in d.properties){s.preRotations=j(d.properties.PreRotation).multiplyScalar(Math.PI/180)}break}}return s}function _(e){return{version:null,id:e.id,internalID:e.id,times:e.subNodes.KeyTime.properties.a.map(Y),values:e.subNodes.KeyValueFloat.properties.a,attrFlag:e.subNodes.KeyAttrFlags.properties.a,attrData:e.subNodes.KeyAttrDataFloat.properties.a}}function b(e,t){if(e.R){w(e.R.curves,t)}if(e.S){w(e.S.curves,t)}if(e.T){w(e.T.curves,t)}}function w(e,t){if(e.x){L(e.x,t)}if(e.y){L(e.y,t)}if(e.z){L(e.z,t)}}function L(e,t){t.max=e.times[e.times.length-1]>t.max?e.times[e.times.length-1]:t.max;t.min=e.times[0]<t.min?e.times[0]:t.min}function S(e,t){if(e.animations===undefined){e.animations=[]}var a=t.stacks;for(var i in a){var r=a[i];var s={name:r.name,fps:t.fps,length:r.length,hierarchy:[]};var o=e.skeleton.bones;for(var n=0,l=o.length;n<l;++n){var h=o[n];var u=h.name.replace(/.*:/,"");var d=q(o,function(e){return h.parent===e});s.hierarchy.push({parent:d,name:u,keys:[]})}for(var f=0;f<=r.frames;f++){for(var n=0,l=o.length;n<l;++n){var h=o[n];var c=n;var p=r.layers[0][c];for(var m=0,v=s.hierarchy.length;m<v;++m){var x=s.hierarchy[m];if(x.name===h.name){x.keys.push(N(t,p,h,f))}}}}e.animations.push(THREE.AnimationClip.parseAnimation(s,o))}}var R=new THREE.Euler;var I=new THREE.Quaternion;function N(e,t,a,i){var r={time:i/e.fps,pos:a.position.toArray(),rot:a.quaternion.toArray(),scl:a.scale.toArray()};if(t===undefined)return r;R.setFromQuaternion(a.quaternion,"ZYX",false);try{if(H(t,"T")&&U(t.T,i)){if(t.T.curves.x.values[i]){r.pos[0]=t.T.curves.x.values[i]}if(t.T.curves.y.values[i]){r.pos[1]=t.T.curves.y.values[i]}if(t.T.curves.z.values[i]){r.pos[2]=t.T.curves.z.values[i]}}if(H(t,"R")&&U(t.R,i)){if(t.R.curves.x.values[i]){R.x=t.R.curves.x.values[i]}if(t.R.curves.y.values[i]){R.y=t.R.curves.y.values[i]}if(t.R.curves.z.values[i]){R.z=t.R.curves.z.values[i]}I.setFromEuler(R);r.rot=I.toArray()}if(H(t,"S")&&U(t.S,i)){if(t.T.curves.x.values[i]){r.scl[0]=t.S.curves.x.values[i]}if(t.T.curves.y.values[i]){r.scl[1]=t.S.curves.y.values[i]}if(t.T.curves.z.values[i]){r.scl[2]=t.S.curves.z.values[i]}}}catch(e){console.log("THREE.FBXLoader: ",a);console.log("THREE.FBXLoader: ",e)}return r}var M=["x","y","z"];function H(e,t){if(e===undefined){return false}var a=e[t];if(!a){return false}return M.every(function(e){return a.curves[e]!==null})}function U(e,t){return M.every(function(a){return X(e.curves[a],t)})}function X(e,t){return e.values[t]!==undefined}function k(){}Object.assign(k.prototype,{getPrevNode:function(){return this.nodeStack[this.currentIndent-2]},getCurrentNode:function(){return this.nodeStack[this.currentIndent-1]},getCurrentProp:function(){return this.currentProp},pushStack:function(e){this.nodeStack.push(e);this.currentIndent+=1},popStack:function(){this.nodeStack.pop();this.currentIndent-=1},setCurrentProp:function(e,t){this.currentProp=e;this.currentPropName=t},parse:function(e){this.currentIndent=0;this.allNodes=new O;this.nodeStack=[];this.currentProp=[];this.currentPropName="";var t=e.split("\n");for(var a=0,i=t.length;a<i;a++){var r=t[a];if(r.match(/^[\s\t]*;/)){continue}if(r.match(/^[\s\t]*$/)){continue}var s=new RegExp("^\\t{"+this.currentIndent+"}(\\w+):(.*){","");var o=r.match(s);if(o){var n=o[1].trim().replace(/^"/,"").replace(/"$/,"");var l=o[2].split(",");for(var h=0,r=l.length;h<r;h++){l[h]=l[h].trim().replace(/^"/,"").replace(/"$/,"")}this.parseNodeBegin(r,n,l||null);continue}var u=new RegExp("^\\t{"+this.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)");var o=r.match(u);if(o){var d=o[1].replace(/^"/,"").replace(/"$/,"").trim();var f=o[2].replace(/^"/,"").replace(/"$/,"").trim();if(d==="Content"&&f===","){f=t[++a].replace(/"/g,"").replace(/,$/,"").trim()}this.parseNodeProperty(r,d,f);continue}var c=new RegExp("^\\t{"+(this.currentIndent-1)+"}}");if(r.match(c)){this.nodeEnd();continue}if(r.match(/^[^\s\t}]/)){this.parseNodePropertyContinued(r)}}return this.allNodes},parseNodeBegin:function(e,t,a){var i={name:t,properties:{},subNodes:{}};var r=this.parseNodeAttr(a);var s=this.getCurrentNode();if(this.currentIndent===0){this.allNodes.add(t,i)}else{if(t in s.subNodes){var o=s.subNodes[t];if(this.isFlattenNode(s.subNodes[t])){if(r.id===""){s.subNodes[t]=[];s.subNodes[t].push(o)}else{s.subNodes[t]={};s.subNodes[t][o.id]=o}}if(r.id===""){s.subNodes[t].push(i)}else{s.subNodes[t][r.id]=i}}else if(typeof r.id==="number"||r.id.match(/^\d+$/)){s.subNodes[t]={};s.subNodes[t][r.id]=i}else{s.subNodes[t]=i}}if(a){i.id=r.id;i.attrName=r.name;i.attrType=r.type}this.pushStack(i)},parseNodeAttr:function(e){var t=e[0];if(e[0]!==""){t=parseInt(e[0]);if(isNaN(t)){t=e[0]}}var a="",i="";if(e.length>1){a=e[1].replace(/^(\w+)::/,"");i=e[2]}return{id:t,name:a,type:i}},parseNodeProperty:function(e,t,a){var i=this.getCurrentNode();var r=i.name;if(r!==undefined){var s=r.match(/Properties(\d)+/);if(s){this.parseNodeSpecialProperty(e,t,a);return}}if(t==="C"){var o=a.split(",").slice(1);var n=parseInt(o[0]);var l=parseInt(o[1]);var h=a.split(",").slice(3);h=h.map(function(e){return e.trim().replace(/^"/,"")});t="connections";a=[n,l];K(a,h);if(i.properties[t]===undefined){i.properties[t]=[]}}if(t==="Node"){var u=parseInt(a);i.properties.id=u;i.id=u}if(t in i.properties){if(Array.isArray(i.properties[t])){i.properties[t].push(a)}else{i.properties[t]+=a}}else{if(Array.isArray(i.properties[t])){i.properties[t].push(a)}else{i.properties[t]=a}}this.setCurrentProp(i.properties,t);if(t==="a"&&a.slice(-1)!==","){i.properties.a=G(a)}},parseNodePropertyContinued:function(e){this.currentProp[this.currentPropName]+=e;if(e.slice(-1)!==","){var t=this.getCurrentNode();t.properties.a=G(t.properties.a)}},parseNodeSpecialProperty:function(e,t,a){var i=a.split('",');for(var r=0,s=i.length;r<s;r++){i[r]=i[r].trim().replace(/^\"/,"").replace(/\s/,"_")}var o=i[0];var n=i[1];var l=i[2];var h=i[3];var u=i[4];switch(n){case"int":case"enum":case"bool":case"ULongLong":u=parseInt(u);break;case"double":case"Number":case"FieldOfView":u=parseFloat(u);break;case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":u=G(u);break}this.getPrevNode().properties[o]={type:n,type2:l,flag:h,value:u};this.setCurrentProp(this.getPrevNode().properties,o)},nodeEnd:function(){this.popStack()},isFlattenNode:function(e){return"subNodes"in e&&"properties"in e?true:false}});function z(){}Object.assign(z.prototype,{parse:function(e){var t=new C(e);t.skip(23);var a=t.getUint32();var i=new O;var r=0;while(!this.endOfContent(t)){try{var s=this.parseNode(t,a);if(s!==null){i.add(s.name,s)}}catch(e){console.log(e)}}return i},endOfContent:function(e){if(e.size()%16===0){return(e.getOffset()+160+16&~15)>=e.size()}else{return e.getOffset()+160+16>=e.size()}},parseNode:function(e,t){var a=t>=7500?e.getUint64():e.getUint32();var i=t>=7500?e.getUint64():e.getUint32();var r=t>=7500?e.getUint64():e.getUint32();var s=e.getUint8();var o=e.getString(s);if(a===0)return null;var n=[];for(var l=0;l<i;l++){n.push(this.parseProperty(e))}var h=n.length>0?n[0]:"";var u=n.length>1?n[1]:"";var d=n.length>2?n[2]:"";var f={};var c={};var p=false;if(i===1&&e.getOffset()===a){p=true}while(a>e.getOffset()){var m=this.parseNode(e,t);if(m===null)continue;if(m.singleProperty===true){var v=m.propertyList[0];if(Array.isArray(v)){f[m.name]=m;m.properties.a=v}else{c[m.name]=v}continue}if(o==="Connections"&&m.name==="C"){var x=[];for(var l=1,g=m.propertyList.length;l<g;l++){x[l-1]=m.propertyList[l]}if(c.connections===undefined){c.connections=[]}c.connections.push(x);continue}if(m.name.match(/^Properties\d+$/)){var E=Object.keys(m.properties);for(var l=0,g=E.length;l<g;l++){var A=E[l];c[A]=m.properties[A]}continue}if(o.match(/^Properties\d+$/)&&m.name==="P"){var T=m.propertyList[0];var y=m.propertyList[1];var F=m.propertyList[2];var P=m.propertyList[3];var _;if(T.indexOf("Lcl ")===0)T=T.replace("Lcl ","Lcl_");if(y.indexOf("Lcl ")===0)y=y.replace("Lcl ","Lcl_");if(y==="ColorRGB"||y==="Vector"||y==="Vector3D"||y.indexOf("Lcl_")===0){_=[m.propertyList[4],m.propertyList[5],m.propertyList[6]]}else{_=m.propertyList[4]}c[T]={type:y,type2:F,flag:P,value:_};continue}if(f[m.name]===undefined){if(typeof m.id==="number"){f[m.name]={};f[m.name][m.id]=m}else{f[m.name]=m}}else{if(m.id===""){if(!Array.isArray(f[m.name])){f[m.name]=[f[m.name]]}f[m.name].push(m)}else{if(f[m.name][m.id]===undefined){f[m.name][m.id]=m}else{if(!Array.isArray(f[m.name][m.id])){f[m.name][m.id]=[f[m.name][m.id]]}f[m.name][m.id].push(m)}}}}return{singleProperty:p,id:h,attrName:u,attrType:d,name:o,properties:c,propertyList:n,subNodes:f}},parseProperty:function(e){var t=e.getChar();switch(t){case"C":return e.getBoolean();case"D":return e.getFloat64();case"F":return e.getFloat32();case"I":return e.getInt32();case"L":return e.getInt64();case"R":var a=e.getUint32();return e.getArrayBuffer(a);case"S":var a=e.getUint32();return e.getString(a);case"Y":return e.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":var i=e.getUint32();var r=e.getUint32();var s=e.getUint32();if(r===0){switch(t){case"b":case"c":return e.getBooleanArray(i);case"d":return e.getFloat64Array(i);case"f":return e.getFloat32Array(i);case"i":return e.getInt32Array(i);case"l":return e.getInt64Array(i)}}if(window.Zlib===undefined){throw new Error("THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js")}var o=new Zlib.Inflate(new Uint8Array(e.getArrayBuffer(s)));var n=new C(o.decompress().buffer);switch(t){case"b":case"c":return n.getBooleanArray(i);case"d":return n.getFloat64Array(i);case"f":return n.getFloat32Array(i);case"i":return n.getInt32Array(i);case"l":return n.getInt64Array(i)}default:throw new Error("THREE.FBXLoader: Unknown property type "+t)}}});function C(e,t){this.dv=new DataView(e);this.offset=0;this.littleEndian=t!==undefined?t:true}Object.assign(C.prototype,{getOffset:function(){return this.offset},size:function(){return this.dv.buffer.byteLength},skip:function(e){this.offset+=e},getBoolean:function(){return(this.getUint8()&1)===1},getBooleanArray:function(e){var t=[];for(var a=0;a<e;a++){t.push(this.getBoolean())}return t},getInt8:function(){var e=this.dv.getInt8(this.offset);this.offset+=1;return e},getInt8Array:function(e){var t=[];for(var a=0;a<e;a++){t.push(this.getInt8())}return t},getUint8:function(){var e=this.dv.getUint8(this.offset);this.offset+=1;return e},getUint8Array:function(e){var t=[];for(var a=0;a<e;a++){t.push(this.getUint8())}return t},getInt16:function(){var e=this.dv.getInt16(this.offset,this.littleEndian);this.offset+=2;return e},getInt16Array:function(e){var t=[];for(var a=0;a<e;a++){t.push(this.getInt16())}return t},getUint16:function(){var e=this.dv.getUint16(this.offset,this.littleEndian);this.offset+=2;return e},getUint16Array:function(e){var t=[];for(var a=0;a<e;a++){t.push(this.getUint16())}return t},getInt32:function(){var e=this.dv.getInt32(this.offset,this.littleEndian);this.offset+=4;return e},getInt32Array:function(e){var t=[];for(var a=0;a<e;a++){t.push(this.getInt32())}return t},getUint32:function(){var e=this.dv.getUint32(this.offset,this.littleEndian);this.offset+=4;return e},getUint32Array:function(e){var t=[];for(var a=0;a<e;a++){t.push(this.getUint32())}return t},getInt64:function(){var e,t;if(this.littleEndian){e=this.getUint32();t=this.getUint32()}else{t=this.getUint32();e=this.getUint32()}if(t&2147483648){t=~t&4294967295;e=~e&4294967295;if(e===4294967295)t=t+1&4294967295;e=e+1&4294967295;return-(t*4294967296+e)}return t*4294967296+e},getInt64Array:function(e){var t=[];for(var a=0;a<e;a++){t.push(this.getInt64())}return t},getUint64:function(){var e,t;if(this.littleEndian){e=this.getUint32();t=this.getUint32()}else{t=this.getUint32();e=this.getUint32()}return t*4294967296+e},getUint64Array:function(e){var t=[];for(var a=0;a<e;a++){t.push(this.getUint64())}return t},getFloat32:function(){var e=this.dv.getFloat32(this.offset,this.littleEndian);this.offset+=4;return e},getFloat32Array:function(e){var t=[];for(var a=0;a<e;a++){t.push(this.getFloat32())}return t},getFloat64:function(){var e=this.dv.getFloat64(this.offset,this.littleEndian);this.offset+=8;return e},getFloat64Array:function(e){var t=[];for(var a=0;a<e;a++){t.push(this.getFloat64())}return t},getArrayBuffer:function(e){var t=this.dv.buffer.slice(this.offset,this.offset+e);this.offset+=e;return t},getChar:function(){return String.fromCharCode(this.getUint8())},getString:function(e){var t="";while(e>0){var a=this.getUint8();e--;if(a===0)break;t+=String.fromCharCode(a)}t=decodeURIComponent(escape(t));this.skip(e);return t}});function O(){}Object.assign(O.prototype,{add:function(e,t){this[e]=t}});function D(e){var t="Kaydara FBX Binary  \0";return e.byteLength>=t.length&&t===W(e,0,t.length)}function Q(e){var t=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"];var a=0;function i(t){var i=e[t-1];e=e.slice(a+t);a++;return i}for(var r=0;r<t.length;++r){var s=i(1);if(s===t[r]){return false}}return true}function B(e){var t=/FBXVersion: (\d+)/;var a=e.match(t);if(a){var i=parseInt(a[1]);return i}throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function Y(e){return e/46186158e3}function G(e){var t=e.split(",");for(var a=0,i=t.length;a<i;a++){t[a]=parseFloat(t[a])}return t}function j(e){return(new THREE.Vector3).fromArray(e.value)}function V(e){return(new THREE.Color).fromArray(e.value)}function W(e,t,a){if(t===undefined)t=0;if(a===undefined)a=e.byteLength;var i=new Uint8Array(e,t,a);if(window.TextDecoder!==undefined){return(new TextDecoder).decode(i)}var r="";for(var s=0,o=i.length;s<o;s++){r+=String.fromCharCode(i[s])}return r}function q(e,t){for(var a=0,i=e.length;a<i;a++){if(t(e[a]))return a}return-1}function K(e,t){for(var a=0,i=e.length,r=t.length;a<r;a++,i++){e[i]=t[a]}}function Z(e,t,a,i){for(var r=a,s=0;r<i;r++,s++){e[s]=t[r]}return e}})()},function(e,t){THREE.OBJLoader=function(){var e=/^[og]\s*(.+)?/;var t=/^mtllib /;var a=/^usemtl /;function i(){var e={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materialLibraries:[],startObject:function(e,t){if(this.object&&this.object.fromDeclaration===false){this.object.name=e;this.object.fromDeclaration=t!==false;return}var a=this.object&&typeof this.object.currentMaterial==="function"?this.object.currentMaterial():undefined;if(this.object&&typeof this.object._finalize==="function"){this.object._finalize(true)}this.object={name:e||"",fromDeclaration:t!==false,geometry:{vertices:[],normals:[],colors:[],uvs:[]},materials:[],smooth:true,startMaterial:function(e,t){var a=this._finalize(false);if(a&&(a.inherited||a.groupCount<=0)){this.materials.splice(a.index,1)}var i={index:this.materials.length,name:e||"",mtllib:Array.isArray(t)&&t.length>0?t[t.length-1]:"",smooth:a!==undefined?a.smooth:this.smooth,groupStart:a!==undefined?a.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:false,clone:function(e){var t={index:typeof e==="number"?e:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:false};t.clone=this.clone.bind(t);return t}};this.materials.push(i);return i},currentMaterial:function(){if(this.materials.length>0){return this.materials[this.materials.length-1]}return undefined},_finalize:function(e){var t=this.currentMaterial();if(t&&t.groupEnd===-1){t.groupEnd=this.geometry.vertices.length/3;t.groupCount=t.groupEnd-t.groupStart;t.inherited=false}if(e&&this.materials.length>1){for(var a=this.materials.length-1;a>=0;a--){if(this.materials[a].groupCount<=0){this.materials.splice(a,1)}}}if(e&&this.materials.length===0){this.materials.push({name:"",smooth:this.smooth})}return t}};if(a&&a.name&&typeof a.clone==="function"){var i=a.clone(0);i.inherited=true;this.object.materials.push(i)}this.objects.push(this.object)},finalize:function(){if(this.object&&typeof this.object._finalize==="function"){this.object._finalize(true)}},parseVertexIndex:function(e,t){var a=parseInt(e,10);return(a>=0?a-1:a+t/3)*3},parseNormalIndex:function(e,t){var a=parseInt(e,10);return(a>=0?a-1:a+t/3)*3},parseUVIndex:function(e,t){var a=parseInt(e,10);return(a>=0?a-1:a+t/2)*2},addVertex:function(e,t,a){var i=this.vertices;var r=this.object.geometry.vertices;r.push(i[e+0],i[e+1],i[e+2]);r.push(i[t+0],i[t+1],i[t+2]);r.push(i[a+0],i[a+1],i[a+2])},addVertexPoint:function(e){var t=this.vertices;var a=this.object.geometry.vertices;a.push(t[e+0],t[e+1],t[e+2])},addVertexLine:function(e){var t=this.vertices;var a=this.object.geometry.vertices;a.push(t[e+0],t[e+1],t[e+2])},addNormal:function(e,t,a){var i=this.normals;var r=this.object.geometry.normals;r.push(i[e+0],i[e+1],i[e+2]);r.push(i[t+0],i[t+1],i[t+2]);r.push(i[a+0],i[a+1],i[a+2])},addColor:function(e,t,a){var i=this.colors;var r=this.object.geometry.colors;r.push(i[e+0],i[e+1],i[e+2]);r.push(i[t+0],i[t+1],i[t+2]);r.push(i[a+0],i[a+1],i[a+2])},addUV:function(e,t,a){var i=this.uvs;var r=this.object.geometry.uvs;r.push(i[e+0],i[e+1]);r.push(i[t+0],i[t+1]);r.push(i[a+0],i[a+1])},addUVLine:function(e){var t=this.uvs;var a=this.object.geometry.uvs;a.push(t[e+0],t[e+1])},addFace:function(e,t,a,i,r,s,o,n,l){var h=this.vertices.length;var u=this.parseVertexIndex(e,h);var d=this.parseVertexIndex(t,h);var f=this.parseVertexIndex(a,h);this.addVertex(u,d,f);if(i!==undefined&&i!==""){var c=this.uvs.length;u=this.parseUVIndex(i,c);d=this.parseUVIndex(r,c);f=this.parseUVIndex(s,c);this.addUV(u,d,f)}if(o!==undefined&&o!==""){var p=this.normals.length;u=this.parseNormalIndex(o,p);d=o===n?u:this.parseNormalIndex(n,p);f=o===l?u:this.parseNormalIndex(l,p);this.addNormal(u,d,f)}if(this.colors.length>0){this.addColor(u,d,f)}},addPointGeometry:function(e){this.object.geometry.type="Points";var t=this.vertices.length;for(var a=0,i=e.length;a<i;a++){this.addVertexPoint(this.parseVertexIndex(e[a],t))}},addLineGeometry:function(e,t){this.object.geometry.type="Line";var a=this.vertices.length;var i=this.uvs.length;for(var r=0,s=e.length;r<s;r++){this.addVertexLine(this.parseVertexIndex(e[r],a))}for(var o=0,s=t.length;o<s;o++){this.addUVLine(this.parseUVIndex(t[o],i))}}};e.startObject("",false);return e}function r(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager;this.materials=null}r.prototype={constructor:r,load:function(e,t,a,i){var r=this;var s=new THREE.FileLoader(r.manager);s.setPath(this.path);s.load(e,function(e){t(r.parse(e))},a,i)},setPath:function(e){this.path=e;return this},setMaterials:function(e){this.materials=e;return this},parse:function(r){console.time("OBJLoader");var s=new i;if(r.indexOf("\r\n")!==-1){r=r.replace(/\r\n/g,"\n")}if(r.indexOf("\\\n")!==-1){r=r.replace(/\\\n/g,"")}var o=r.split("\n");var n="",l="";var h=0;var u=[];var d=typeof"".trimLeft==="function";for(var f=0,c=o.length;f<c;f++){n=o[f];n=d?n.trimLeft():n.trim();h=n.length;if(h===0)continue;l=n.charAt(0);if(l==="#")continue;if(l==="v"){var p=n.split(/\s+/);switch(p[0]){case"v":s.vertices.push(parseFloat(p[1]),parseFloat(p[2]),parseFloat(p[3]));if(p.length===8){s.colors.push(parseFloat(p[4]),parseFloat(p[5]),parseFloat(p[6]))}break;case"vn":s.normals.push(parseFloat(p[1]),parseFloat(p[2]),parseFloat(p[3]));break;case"vt":s.uvs.push(parseFloat(p[1]),parseFloat(p[2]));break}}else if(l==="f"){var m=n.substr(1).trim();var v=m.split(/\s+/);var x=[];for(var g=0,E=v.length;g<E;g++){var A=v[g];if(A.length>0){var T=A.split("/");x.push(T)}}var y=x[0];for(var g=1,E=x.length-1;g<E;g++){var F=x[g];var P=x[g+1];s.addFace(y[0],F[0],P[0],y[1],F[1],P[1],y[2],F[2],P[2])}}else if(l==="l"){var _=n.substring(1).trim().split(" ");var b=[],w=[];if(n.indexOf("/")===-1){b=_}else{for(var L=0,S=_.length;L<S;L++){var R=_[L].split("/");if(R[0]!=="")b.push(R[0]);if(R[1]!=="")w.push(R[1])}}s.addLineGeometry(b,w)}else if(l==="p"){var m=n.substr(1).trim();var I=m.split(" ");s.addPointGeometry(I)}else if((u=e.exec(n))!==null){var N=(" "+u[0].substr(1).trim()).substr(1);s.startObject(N)}else if(a.test(n)){s.object.startMaterial(n.substring(7).trim(),s.materialLibraries)}else if(t.test(n)){s.materialLibraries.push(n.substring(7).trim())}else if(l==="s"){u=n.split(" ");if(u.length>1){var M=u[1].trim().toLowerCase();s.object.smooth=M!=="0"&&M!=="off"}else{s.object.smooth=true}var H=s.object.currentMaterial();if(H)H.smooth=s.object.smooth}else{if(n==="\0")continue;throw new Error('THREE.OBJLoader: Unexpected line: "'+n+'"')}}s.finalize();var U=new THREE.Group;U.materialLibraries=[].concat(s.materialLibraries);for(var f=0,c=s.objects.length;f<c;f++){var X=s.objects[f];var k=X.geometry;var z=X.materials;var C=k.type==="Line";var O=k.type==="Points";var D=false;if(k.vertices.length===0)continue;var Q=new THREE.BufferGeometry;Q.addAttribute("position",new THREE.Float32BufferAttribute(k.vertices,3));if(k.normals.length>0){Q.addAttribute("normal",new THREE.Float32BufferAttribute(k.normals,3))}else{Q.computeVertexNormals()}if(k.colors.length>0){D=true;Q.addAttribute("color",new THREE.Float32BufferAttribute(k.colors,3))}if(k.uvs.length>0){Q.addAttribute("uv",new THREE.Float32BufferAttribute(k.uvs,2))}var B=[];for(var Y=0,G=z.length;Y<G;Y++){var j=z[Y];var H=undefined;if(this.materials!==null){H=this.materials.create(j.name);if(C&&H&&!(H instanceof THREE.LineBasicMaterial)){var V=new THREE.LineBasicMaterial;V.copy(H);V.lights=false;H=V}else if(O&&H&&!(H instanceof THREE.PointsMaterial)){var W=new THREE.PointsMaterial({size:10,sizeAttenuation:false});V.copy(H);H=W}}if(!H){if(C){H=new THREE.LineBasicMaterial}else if(O){H=new THREE.PointsMaterial({size:1,sizeAttenuation:false})}else{H=new THREE.MeshPhongMaterial}H.name=j.name}H.flatShading=j.smooth?false:true;H.vertexColors=D?THREE.VertexColors:THREE.NoColors;B.push(H)}var q;if(B.length>1){for(var Y=0,G=z.length;Y<G;Y++){var j=z[Y];Q.addGroup(j.groupStart,j.groupCount,Y)}if(C){q=new THREE.LineSegments(Q,B)}else if(O){q=new THREE.Points(Q,B)}else{q=new THREE.Mesh(Q,B)}}else{if(C){q=new THREE.LineSegments(Q,B[0])}else if(O){q=new THREE.Points(Q,B[0])}else{q=new THREE.Mesh(Q,B[0])}}q.name=X.name;U.add(q)}console.timeEnd("OBJLoader");return U}};return r}()},function(e,t,a){"use strict";a.r(t);var i=a(1);var r=a(2);var s=a(3);var o=a(4);var n=a(5);var l=a(6);var h=a(7);var u=a(0);var d=a(8);class f{constructor(e){this.scene=e.scene;this.camera=e.camera.camera;this.renderer=new THREE.WebGLRenderer({});this.renderer.setClearColor(4473924,1);this.renderer.gammaInput=true;this.renderer.gammaOutput=true;this.padding={x:64,y:96,minX:768,minY:480};this.setSize();const t=.5;const a=.125;const i=.96;this.passRender=new THREE.RenderPass(this.scene,this.camera);this.passPoster=new THREE.PosterPass(this.size);this.passBloom=new THREE.UnrealBloomPass(this.size,t,a,i);this.passBloom.renderToScreen=true;this.composer=new THREE.EffectComposer(this.renderer);this.composer.addPass(this.passRender);this.composer.addPass(this.passPoster);this.composer.addPass(this.passBloom);window.addEventListener("resize",()=>{this.resize()});window.addEventListener("orientationchange",()=>{setTimeout(()=>{this.resize()},125)});this.domElement=document.querySelector("#canvas-target");this.domElement.append(this.renderer.domElement);this.resize();e.resize()}setSize(){const e=Math.min(window.innerWidth,Math.max(this.padding.minX,window.innerWidth-this.padding.x*2));const t=Math.min(window.innerHeight,Math.max(this.padding.minY,window.innerHeight-this.padding.y*2));this.width=e;this.height=t;if(!this.size){this.size=new THREE.Vector2(this.width,this.height)}else{this.size.x=this.width;this.size.y=this.height}}resize(){this.setSize();this.domElement.style.width=`${this.width}px`;this.domElement.style.height=`${this.height}px`;this.renderer.setSize(this.width,this.height);this.composer.setSize(this.width,this.height);this.passBloom.setSize(this.width,this.height)}draw(e){this.composer.render(e)}}class c{constructor(e){this.root=e;this.position=e.player.position;this.rotation=e.player.rotation;this.height=e.player.height;this.target=new THREE.Vector3;this.fov=65;this.aspectRatio=this.root.width/this.root.height;this.offset=.1;this.camera=new THREE.PerspectiveCamera(this.fov,this.aspectRatio,.1,2e6);this.camera.up=new THREE.Vector3(0,1,0);this.camera.rotation.order="YXZ"}resize(e,t){this.aspectRatio=this.root.width/this.root.height;this.camera.aspect=this.aspectRatio;this.camera.updateProjectionMatrix()}update(e){const t=this.offset-this.offset*Math.abs(Math.sin(this.rotation.y));const a=this.offset;const i=this.position.y+this.height;this.camera.position.set(this.position.x,this.position.y+this.height,this.position.z);this.camera.rotation.y=this.rotation.x+Math.PI;this.camera.rotation.x=this.rotation.y}}class p{constructor(e){this.scene=e.scene;this.sky=new THREE.Sky;this.sky.scale.setScalar(45e4);const t=4e5;const a=.25;const i=.4875;const r=Math.PI*(i-.5);const s=Math.PI*2*(a-.5);const o=new THREE.Vector3(t*Math.cos(s),t*Math.sin(s)*Math.sin(r),t*Math.sin(s)*Math.cos(r));this.sky.material.uniforms.sunPosition.value.copy(o);this.scene.add(this.sky);this.lights={point:{},ambient:{},directional:{},hemisphere:{}};this.lights.point.a=new THREE.PointLight(16777215,1,24,2);this.lights.point.b=new THREE.PointLight(16777215,1,32,2);this.lights.point.c=new THREE.PointLight(16777215,1,20,2);this.lights.ambient.a=new THREE.AmbientLight(16777215,.3);this.lights.directional.a=new THREE.DirectionalLight(16777215,.5);this.lights.hemisphere.a=new THREE.HemisphereLight(0,255,.25);this.lights.point.a.position.set(-8,10,14);this.lights.point.b.position.set(0,10,-4);this.lights.point.c.position.set(26,10,6);this.lights.directional.a.position.set(-1,1.5,-1);Object.keys(this.lights).forEach(e=>{Object.keys(this.lights[e]).forEach(t=>{this.scene.add(this.lights[e][t])})})}}class m{constructor(e){this.path=`${APP_ROOT}/${e}/`;this.mat={};this.mat.default=new THREE.MeshPhysicalMaterial({emissive:0,roughness:1,envMapIntensity:.25});this.mat.porcelain=new THREE.MeshPhysicalMaterial({color:16777215,emissive:8947848,emissiveIntensity:.6,roughness:.55,metalness:.125,envMapIntensity:.5});this.mat.metal=new THREE.MeshPhysicalMaterial({color:11046521,emissive:0,roughness:.25,metalness:1,envMapIntensity:.5});this.mat.neon=new THREE.MeshPhysicalMaterial({emissive:16777215,emissiveIntensity:1});this.mat.dark=new THREE.MeshPhysicalMaterial({color:0,roughness:.5,metalness:0});const t=["posx","negx","posy","negy","posz","negz"].map(e=>`${this.path}envmap/${e}.jpg`);this.envMap=(new THREE.CubeTextureLoader).load(t);this.normalMap=(new THREE.TextureLoader).load(this.path+"textures/noise.jpg");this.normalMap.wrapS=this.normalMap.wrapT=THREE.RepeatWrapping;this.normalMap.repeat.set(32,32);Object.keys(this.mat).forEach(e=>{if(this.mat[e].type&&this.mat[e].type==="MeshPhysicalMaterial"){this.mat[e].envMap=this.envMap}});this.uniforms={time:{value:0}};this.loaded={}}conform(e){if(!this.loaded[e.name]){this.loaded[e.name]=e}e.envMap=this.envMap;e.envMapIntensity=.5;switch(e.name){case"concrete":e.normalScale.x=.25;e.normalScale.y=.25;break;case"gold":break;case"neon":case"neon1":e.emissive=new THREE.Color(1,1,1);e.emissiveIntensity=1;break;case"nu_metal":e.normalScale.x=.25;e.normalScale.y=.25;break;case"plastic":break;default:break}}getCustomMaterial(e){const t=this.mat.metal.clone();t.onBeforeCompile=(e=>{e.vertexShader=`uniform float time;\n${e.vertexShader}`;const t=`\n        vec4 mvp = modelMatrix * vec4(position, 1.0);\n        float theta = sin(time * 0.1 + mvp.x / 2.0);\n        float c = cos(theta);\n        float s = sin(theta);\n        float off = 1.0;// + 0.2 * sin(time + position.x * 200.0);\n        mat3 roty = mat3(c, 0, s, 0, 1, 0, -s, 0, c);\n        //mat3 sy = mat3(s, 0, 0, 0, 1, 0, 0, 0, 1);\n        mat4 m = mat4(1, 0, 0, 0, 0, 1, 0, s * off * 2.0, 0, 0, 1, s * off, 0, 0, 0, 1);\n        vec4 t = vec4(position, 1.0) * m;\n        vec3 transformed = vec3(t.x, t.y, t.z);\n        vNormal = vNormal * roty;\n      `;e.vertexShader=e.vertexShader.replace("#include <begin_vertex>",t);e.uniforms.time=this.uniforms.time});t.roughness=.5;return t}update(e){this.uniforms.time.value+=e}}var v=a(9);var x=a(10);var g=a(11);class E{constructor(e){this.path=`${APP_ROOT}/${e}/`;this.materials={};this.images={};this.loaderFBX=new THREE.FBXLoader;this.loaderOBJ=new THREE.OBJLoader}loadFBX(e){return new Promise((t,a)=>{try{this.loaderFBX.load(this.path+e+".fbx",e=>{t(e)})}catch(e){console.log(e);a(e)}})}loadOBJ(e){return new Promise((t,a)=>{try{this.loaderOBJ.load(this.path+e+".obj",e=>{t(e)})}catch(e){console.log(e);a(e)}})}}class A{constructor(e){this.root=e;this.scene=e.scene;this.colliderSystem=e.colliderSystem;this.materials=new m("assets");this.loader=new E("assets");this.loadScene()}loadScene(){this.floor=new THREE.Mesh(new THREE.BoxBufferGeometry(100,1,100),new THREE.MeshPhongMaterial({}));this.floor.position.y=-.25;this.colliderSystem.add(this.floor);this.toLoad=2;this.checkLoaded=(()=>{this.toLoad-=1;if(this.toLoad==0){const e=document.querySelector("#open-gallery");e.classList.remove("is-loading");e.classList.add("flash");e.innerHTML="Open Gallery"}});this.loader.loadFBX("map").then(e=>{this.scene.add(e);this.conformGroups(e);this.checkLoaded()},e=>{console.log(e)});this.loader.loadOBJ("collision").then(e=>{this.addCollisionMap(e);this.checkLoaded()},e=>{console.log(e)});this.loader.loadFBX("props").then(e=>{this.scene.add(e);this.conformGroups(e)});this.makeBox()}addCollisionMap(e){if(e.type==="Mesh"){this.colliderSystem.add(e)}else if(e.children&&e.children.length){e.children.forEach(e=>{this.addCollisionMap(e)})}}conformGroups(e){if(e.type==="Mesh"){this.materials.conform(e.material)}else if(e.children&&e.children.length){e.children.forEach(e=>{this.conformGroups(e)})}}makeBox(){const e=.1;const t=4;for(var a=-16;a<=16;a+=8){const i=19;const r=new THREE.Mesh(new THREE.BoxBufferGeometry(e,e,t),this.materials.mat.neon);const s=new THREE.Mesh(new THREE.BoxBufferGeometry(e,e*4,t),this.materials.mat.dark);const o=new THREE.Mesh(new THREE.BoxBufferGeometry(e,1,e),this.materials.mat.dark);const n=o.clone();r.position.set(a,i,6);s.position.set(a,i+e*2.5,6);o.position.set(a,i+e*4.5+.5,6+t/3);n.position.set(a,i+e*4.5+.5,6-t/3);o.rotation.y=Math.PI/4;n.rotation.y=Math.PI/4;this.scene.add(r,s,o,n)}}update(e){this.materials.update(e)}}const T=(e,t,a)=>{return(t-e)*a+e};const y=function(e,t){return Math.atan2(Math.sin(t-e),Math.cos(t-e))};const F=e=>{return Math.random()*e-e/2};const P=Math.PI*2;const _=(e,t,a)=>{return Math.min(a,Math.max(t,e))};class b{constructor(e){this.root=e;this.position=new THREE.Vector3(-24,1,16);this.rotation=new THREE.Vector2(Math.PI*.55,Math.PI*-.05);this.motion=new THREE.Vector3;this.target={position:this.position.clone(),rotation:this.rotation.clone(),motion:this.motion.clone()};this.collider=new Collider.Collider(this.target.position,this.motion);this.collider.setPhysics({gravity:20});this.automove={active:{position:true,rotation:true},speed:{current:0,max:7.5,blend:.125},rotationSpeed:{current:0,max:Math.PI/2.5,accum:Math.PI/70},position:this.position.clone(),rotation:new THREE.Vector2(Math.PI*.55,Math.PI*.03),threshold:{position:{outer:2,inner:.02},rotation:Math.PI/1e3}};this.speed=6;this.rotationSpeed=Math.PI*.5;this.jump=8;this.jumpSpeedMultiplier=.25;this.height=3;this.falling=false;this.fallTime=0;this.fallTimeThreshold=.2;this.noclip=false;this.noclipSpeed=36;this.toggleNoclip=(()=>{this.noclip=this.noclip==false});this.minPitch=Math.PI*-.125;this.maxPitch=Math.PI*.125;this.adjust={slow:.05,normal:.1,fast:.125,maximum:.3};this.keys={disabled:true};this.group=new THREE.Group;this.light=new THREE.PointLight(16777215,1,12,2);this.light.position.y=this.height+.25;this.group.add(this.light);this.root.scene.add(this.group)}move(e){if(this.keys.left||this.keys.right){if(this.automove.active.rotation){this.target.rotation.copy(this.rotation);this.automove.active.rotation=false}const t=(this.keys.left?1:0)+(this.keys.right?-1:0);this.target.rotation.x+=t*this.rotationSpeed*e}if(this.keys.up||this.keys.down){if(this.automove.active.position){this.automove.active.position=false;this.target.position.copy(this.position)}const e=this.noclip?this.noclipSpeed*(1-Math.abs(Math.sin(this.target.rotation.y))):this.speed;const t=(this.keys.up?1:0)+(this.keys.down?-1:0);this.target.motion.x=Math.sin(this.rotation.x)*e*t;this.target.motion.z=Math.cos(this.rotation.x)*e*t}else{this.target.motion.x=0;this.target.motion.z=0}if(this.keys.jump){if(this.motion.y==0||this.fallTime<this.fallTimeThreshold){this.motion.y=this.jump;this.fallTime=this.fallTimeThreshold}}this.falling=this.motion.y!=0;this.fallTime=this.falling?this.fallTime+e:0;if(this.noclip){this.falling=false;if(this.keys.up||this.keys.down){const e=(this.keys.up?1:0)+(this.keys.down?-1:0);this.target.motion.y=Math.sin(this.target.rotation.y)*e*this.noclipSpeed}else{this.target.motion.y=0}this.motion.y=this.target.motion.y}if(!this.falling){this.motion.x=this.target.motion.x;this.motion.z=this.target.motion.z}else{this.motion.x=T(this.motion.x,this.target.motion.x,this.jumpSpeedMultiplier);this.motion.z=T(this.motion.z,this.target.motion.z,this.jumpSpeedMultiplier)}}moveToArtwork(e){if(this.position.distanceTo(e.viewPosition)>this.automove.threshold.position.outer){this.automove.position.copy(e.viewPosition);this.automove.active.position=true;this.automove.rotation.copy(e.viewRotation);this.automove.active.rotation=true}}applyAutomove(e){if(this.automove.active.position){const t=this.automove.position.clone();t.sub(this.position);const a=t.length();t.normalize();if(a>this.automove.threshold.position.outer){this.automove.speed.current+=(this.automove.speed.max-this.automove.speed.current)*this.automove.speed.blend;t.multiplyScalar(this.automove.speed.current*e);this.position.add(t)}else{if(a>this.automove.threshold.position.inner){const i=this.automove.speed.max*(a/this.automove.threshold.position.outer);this.automove.speed.current+=(i-this.automove.speed.current)*this.automove.speed.blend;t.multiplyScalar(this.automove.speed.current*e);this.position.add(t)}else{this.target.position.copy(this.automove.position);this.automove.active.position=false;this.keys.disabled=false}}}else{this.automove.speed.current=0}if(this.automove.active.rotation){this.automove.rotationSpeed.current=Math.min(this.automove.rotationSpeed.current+this.automove.rotationSpeed.accum,this.automove.rotationSpeed.max);const t=y(this.rotation.x,this.automove.rotation.x);const a=y(this.rotation.y,this.automove.rotation.y);const i=Math.hypot(t,a);this.rotation.x+=t*this.automove.rotationSpeed.current*e;this.rotation.y+=a*this.automove.rotationSpeed.current*e;if(i<this.automove.threshold.rotation){this.automove.active.rotation=false;this.target.rotation.copy(this.automove.rotation)}}else{this.automove.rotationSpeed.current=0}}setRotation(e,t){this.target.rotation.y=e;this.target.rotation.x=t;this.automove.active.rotation=false}getTargetPosition(){return this.target.position}update(e){this.applyAutomove(e);if(!this.keys.disabled&&!this.automove.active.position){this.move(e);if(!this.noclip){this.collider.move(e,this.root.colliderSystem)}else{this.target.position.x+=this.motion.x*e;this.target.position.y+=this.motion.y*e;this.target.position.z+=this.motion.z*e}this.position.x=T(this.position.x,this.target.position.x,this.adjust.maximum);this.position.y=T(this.position.y,this.target.position.y,this.adjust.maximum);this.position.z=T(this.position.z,this.target.position.z,this.adjust.maximum)}if(!this.automove.active.rotation){this.rotation.x+=y(this.rotation.x,this.target.rotation.x)*this.adjust.normal;this.rotation.y=T(this.rotation.y,this.target.rotation.y,this.adjust.normal)}this.group.position.set(this.position.x,this.position.y,this.position.z)}}class w{constructor(){this.element=document.querySelector("#canvas-target");this.width=window.innerWidth;this.height=window.innerHeight;this.scene=new THREE.Scene;this.colliderSystem=new Collider.System;this.player=new b(this);this.camera=new c(this);this.lighting=new p(this);this.map=new A(this);window.addEventListener("resize",()=>{this.resize()});window.addEventListener("orientationchange",()=>{setTimeout(()=>{this.resize()},125)})}resize(){const e=this.element.getBoundingClientRect();this.width=e.width;this.height=e.height;this.camera.resize()}update(e){this.player.update(e);this.camera.update(e);this.map.update(e)}}class L{constructor(e,t,a,i,r){this.x=0;this.y=0;this.origin={x:0,y:0};this.delta={x:0,y:0};this.active=false;this.domElement=e;if(!r){this.domElement.addEventListener("mousedown",t,false);this.domElement.addEventListener("mousemove",a,false);this.domElement.addEventListener("mouseup",i,false);this.domElement.addEventListener("mouseleave",i,false)}else{this.domElement.addEventListener("touchstart",t,false);this.domElement.addEventListener("touchmove",a,false);this.domElement.addEventListener("touchend",i,false)}}start(e){this.active=true;this.origin.x=e.offsetX;this.origin.y=e.offsetY}move(e){this.x=e.offsetX;this.y=e.offsetY;this.delta.x=this.x-this.origin.x;this.delta.y=this.y-this.origin.y}stop(){this.active=false}}class S{constructor(e){this.keys={};this.onEvent=e;document.addEventListener("keydown",e=>{this.onKeyDown(e)});document.addEventListener("keyup",e=>{this.onKeyUp(e)})}onKeyDown(e){this.keys[e.key]=true;this.onEvent(e.key)}onKeyUp(e){this.keys[e.key]=false;this.onEvent(e.key)}release(e){this.keys[e]=false}isSpecial(){return this.keys["Shift"]||this.keys["Control"]||this.keys["Alt"]}isControl(){return this.keys["Control"]}isShift(){return this.keys["Shift"]}isAlt(){return this.keys["Alt"]}}class R{constructor(e,t,a){this.root=e;this.cvs=document.createElement("canvas");this.ctx=this.cvs.getContext("2d");this.domElement=t;this.canvasTarget=a;this.resize();this.domElement.append(this.cvs);this.prompt={};this.prompt.touchMove={alpha:{current:0,min:0,max:1},size:{current:12,min:12,max:24}};this.prompt.click={alpha:{current:0,min:0,max:1}}}clear(){this.ctx.clearRect(0,0,this.cvs.width,this.cvs.height);this.ctx.font="14px Karla";this.ctx.strokeStyle="#fff";this.ctx.fillStyle="#fff";this.ctx.lineWidth=1.5;this.ctx.lineCap="round"}resize(){this.cvs.width=this.canvasTarget.width;this.cvs.height=this.canvasTarget.height}promptClick(e,t,a,i){if(t){this.prompt.click.alpha.current+=(this.prompt.click.alpha.max-this.prompt.click.alpha.current)*.2}else{this.prompt.click.alpha.current+=(this.prompt.click.alpha.min-this.prompt.click.alpha.current)*.2}if(this.prompt.click.alpha.current>0){this.ctx.globalAlpha=this.prompt.click.alpha.current;this.ctx.fillText(e,a+12,i+12)}}promptTouchMove(e){if(e){this.prompt.touchMove.alpha.current+=(this.prompt.touchMove.alpha.max-this.prompt.touchMove.alpha.current)*.2;this.prompt.touchMove.size.current+=(this.prompt.touchMove.size.max-this.prompt.touchMove.size.current)*.2}else{this.prompt.touchMove.alpha.current+=(this.prompt.touchMove.alpha.min-this.prompt.touchMove.alpha.current)*.2;this.prompt.touchMove.size.current+=(this.prompt.touchMove.size.min-this.prompt.touchMove.size.current)*.2}if(this.prompt.touchMove.alpha.current>0){const e=this.prompt.touchMove.size.current;const t=e*2;const a=this.cvs.width/2;const i=this.cvs.height/2;this.ctx.globalAlpha=this.prompt.touchMove.alpha.current;this.ctx.beginPath();this.ctx.arc(a,i,e,0,Math.PI*2,false);this.ctx.moveTo(a-e,i);this.ctx.lineTo(a+e,i);this.ctx.moveTo(a,i-4);this.ctx.lineTo(a,i+4);this.ctx.stroke()}}promptGodMode(){this.ctx.globalAlpha=1;this.ctx.fillText("fly mode",20,this.cvs.height-40);const e=Math.round(this.root.player.position.x*10)/10;const t=Math.round(this.root.player.position.y*10)/10;const a=Math.round(this.root.player.position.z*10)/10;const i=Math.round(this.root.player.rotation.x*100)/100;this.ctx.fillText(`${e}, ${t}, ${a}, ${i}`,20,this.cvs.height-20)}drawDevOverlay(){}getContext(){return this.ctx}}class I{constructor(e,t){this.onscreen=true;this.position=e;this.clipping=t||null;this.coords=new THREE.Vector2;this.helper=new THREE.Vector3}calculateNodePosition(e,t,a){this.helper.copy(e.position);this.helper.sub(this.position);this.helper.normalize();if(this.helper.dot(t)<=0){this.onscreen=true;this.helper.copy(this.position);this.helper.project(e);this.coords.x=(this.helper.x+1)*a.x;this.coords.y=(-this.helper.y+1)*a.y}else{this.onscreen=false}if(this.clipping&&this.onscreen){this.helper.copy(e.position);this.helper.sub(this.position);if(this.helper.dot(this.clipping)<0){this.onscreen=false}}}}const N=(e,t,a,i)=>{const r=e.clone();r.project(t);i.x=(r.x+1)*a.x;i.y=(-r.y+1)*a.y};class M extends I{constructor(e,t,a,i){super(e,a||null);this.rotation=t;this.active=true;this.hover=false;this.cornersOK=false;this.buttonActive=false;this.buttonRadius=32;this.buttonHover=false;this.radius={min:8,max:32};this.corners={world:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},screen:{a:new THREE.Vector2,b:new THREE.Vector2,c:new THREE.Vector2,d:new THREE.Vector2}};this.distance=-1;this.root=i||null}setCorners(){const e=this.root.position;const t=this.root.direction;const a=this.root.board.scale;const i=.5;const r=t.x*this.root.thickness/2;const s=t.z*this.root.thickness/2;this.corners.world.a.set(e.x-(t.x!=0?0:a.x*i)+r,e.y+a.y*i,e.z-(t.z!=0?0:a.z*i)+s);this.corners.world.b.set(e.x+(t.x!=0?0:a.x*i)+r,e.y+a.y*i,e.z+(t.z!=0?0:a.z*i)+s);this.corners.world.c.set(e.x+(t.x!=0?0:a.x*i)+r,e.y-a.y*i,e.z+(t.z!=0?0:a.z*i)+s);this.corners.world.d.set(e.x-(t.x!=0?0:a.x*i)+r,e.y-a.y*i,e.z-(t.z!=0?0:a.z*i)+s)}updateCorners(e,t){N(this.corners.world.a,e,t,this.corners.screen.a);N(this.corners.world.b,e,t,this.corners.screen.b);N(this.corners.world.c,e,t,this.corners.screen.c);N(this.corners.world.d,e,t,this.corners.screen.d);this.cornersOK=this.corners.screen.a.y<this.corners.screen.c.y&&this.corners.screen.b.y<this.corners.screen.d.y&&Math.abs(this.corners.screen.a.x-this.corners.screen.b.x)<window.innerWidth}isCorrectQuadrant(e){return e.x<=-16||e.x>=16||this.position.x>=16||this.position.x<=-16||e.z>=6&&this.position.z>=6||e.z<=6&&this.position.z<=6}mouseOver(e,t,a){if(this.active&&this.onscreen&&this.cornersOK){const i=Math.min(this.corners.screen.c.x,this.corners.screen.d.x)-10;const r=Math.max(this.corners.screen.c.x,this.corners.screen.d.x)+10;const s=Math.min(this.corners.screen.a.y,this.corners.screen.b.y)-10;const o=Math.max(this.corners.screen.c.y,this.corners.screen.d.y)+10;let n=Math.max(this.corners.screen.c.x,this.corners.screen.d.x);let l=n==this.corners.screen.c.x?this.corners.screen.c.y:this.corners.screen.d.y;n+=this.buttonRadius+5;l-=this.buttonRadius/2;this.buttonHover=this.buttonActive&&Math.hypot(n-e,l-t)<this.buttonRadius+10;this.hover=(this.buttonHover||e>=i&&e<=r&&t>=s&&t<=o)&&this.isCorrectQuadrant(a)}else{this.hover=false}}isHover(){return this.hover&&this.active}update(e,t,a,i,r){this.calculateNodePosition(a,i,r);this.distance=t.position.distanceTo(this.position);if(this.distance>this.radius.max){this.active=false}else{this.active=true;this.updateCorners(a,r);this.buttonActive=this.distance<=this.radius.min}}draw(e){if(this.onscreen&&this.active&&this.hover&&this.cornersOK){e.globalAlpha=1;e.beginPath();e.moveTo(this.corners.screen.a.x,this.corners.screen.a.y);e.lineTo(this.corners.screen.b.x,this.corners.screen.b.y);e.lineTo(this.corners.screen.c.x,this.corners.screen.c.y);e.lineTo(this.corners.screen.d.x,this.corners.screen.d.y);e.closePath();e.stroke();if(this.buttonActive){let t=Math.max(this.corners.screen.c.x,this.corners.screen.d.x);let a=t==this.corners.screen.c.x?this.corners.screen.c.y:this.corners.screen.d.y;t+=this.buttonRadius+5;a-=this.buttonRadius/2;e.textAlign="center";e.globalAlpha=this.buttonHover?.5:1;e.fillText("[info]",t,a+4)}}}}class H extends I{constructor(e,t,a){super(t,a||null);this.message=e}update(e,t,a){this.calculateNodePosition(e,t,a)}draw(e){if(this.onscreen){e.globalAlpha=1;e.fillText(this.message,this.coords.x,this.coords.y)}}}class U{constructor(e,t,a){this.root=e;this.id=t;this.active=false;this.position=new THREE.Vector3;this.direction=new THREE.Vector3;this.element=a;this.nearRadius=5;this.thickness=.2;this.upstairs=false;this.data={url:a.dataset.url,title:a.dataset.title||"",subtitle:a.dataset.subtitle||"",desc:a.dataset.desc||"",link:a.dataset.link||"",width:parseFloat(a.dataset.width),offset:{horizontal:parseFloat(a.dataset.hoff),vertical:parseFloat(a.dataset.voff)},index:parseInt(a.dataset.location)-1||a.dataset.location}}init(e,t,a){const i=this.thickness/2+.01;this.board=new THREE.Mesh(new THREE.BoxBufferGeometry(1,1,1),new THREE.MeshStandardMaterial({color:0,roughness:.75,metalness:0}));this.plane=new THREE.Mesh(new THREE.PlaneBufferGeometry(1,1),new THREE.MeshStandardMaterial({roughness:1,metalness:.5}));this.baseY=t.y;t.x+=(a.x!=0?0:1)*this.data.offset.horizontal;t.y+=this.data.offset.vertical;t.z+=(a.z!=0?0:1)*this.data.offset.horizontal;this.plane.position.set(t.x+a.x*i,t.y,t.z+a.z*i);this.position.set(t.x,t.y,t.z);this.direction.set(a.x,a.y,a.z);this.node=new M(t,null,a,this);this.viewPosition=new THREE.Vector3;this.viewPosition.y=Math.min(7.8,this.baseY-3);this.viewPosition.x=t.x+a.x*Math.min((t.y-this.viewPosition.y)*.9,8);this.viewPosition.z=t.z+a.z*Math.min((t.y-this.viewPosition.y)*.9,8);if(t.x>20&&t.z<-10){this.viewPosition.set(24,6,-8)}else if(t.x<-20&&t.z<-10){this.viewPosition.set(-24,6,-8)}this.viewRotation=new THREE.Vector2;this.viewRotation.y=Math.atan2(t.y-(this.viewPosition.y+this.root.player.height)-.125,Math.hypot(t.x-this.viewPosition.x,t.z-this.viewPosition.z));this.viewRotation.x=Math.atan2(t.x-this.viewPosition.x,t.z-this.viewPosition.z);const r=(new THREE.TextureLoader).load(this.data.url,e=>{const t=this.data.width*(e.image.naturalHeight/e.image.naturalWidth);this.plane.scale.x=this.data.width;this.plane.scale.y=t;this.board.scale.x=a.x!=0?this.thickness:this.data.width;this.board.scale.y=t;this.board.scale.z=a.z!=0?this.thickness:this.data.width;this.node.setCorners()});this.plane.material.map=r;r.wrapS=r.wrapT=THREE.ClampToEdgeWrapping;r.minFilter=THREE.LinearFilter;if(a.z==1){}else if(a.z==-1){this.plane.rotation.y=Math.PI}else if(a.x==1){this.plane.rotation.y=Math.PI*.5}else if(a.x==-1){this.plane.rotation.y=Math.PI*1.5}this.board.scale.x=a.x!=0?this.thickness:1;this.board.scale.z=a.z!=0?this.thickness:1;this.board.position.set(t.x,t.y,t.z);e.add(this.plane);e.add(this.board)}mouseOver(e,t,a){this.node.mouseOver(e,t,a)}click(e,t,a){this.node.mouseOver(e,t,a);if(this.node.isHover()){this.root.closeArtworkMenu();this.root.moveToArtwork(this);if(this.node.buttonActive){this.root.openArtworkMenu(this)}}}removeHover(){this.node.hover=false}forceHover(){this.node.hover=true}getFloorPosition(){return this.floorPosition}isHover(){return this.node.isHover()}update(e,t,a,i,r){this.node.update(e,t,a,i,r)}draw(e){this.node.draw(e)}}class X{constructor(e){this.root=e;this.player=this.root.scene.player;this.camera=this.root.scene.camera.camera;this.scene=this.root.scene.scene;this.centre=this.root.centre;this.cameraDirection=new THREE.Vector3;this.artworkActiveRadius=10;this.artworks=[];this.isDev=window.location.host.indexOf("localhost")!=-1;var t=0;document.querySelectorAll("#artworks .image").forEach(e=>{this.artworks.push(new U(this,++t,e))});this.placeArtworks();this.domElement=document.querySelector("#artwork-target");this.el={image:this.domElement.querySelector(".image"),title:this.domElement.querySelector(".title"),subtitle:this.domElement.querySelector(".subtitle"),desc:this.domElement.querySelector(".desc"),link:this.domElement.querySelector(".link"),comments:this.domElement.querySelector(".comments"),close:this.domElement.querySelector(".close-artwork-menu")};this.el.close.addEventListener("click",()=>{this.closeArtworkMenu()})}placeArtworks(){const e=[{x:-24,y:4,z:23,nx:0,nz:-1},{x:-10.5,y:3.5,z:23,nx:0,nz:-1},{x:-8,y:3.5,z:23,nx:0,nz:-1},{x:-5.5,y:3.5,z:23,nx:0,nz:-1},{x:5.5,y:3.5,z:23,nx:0,nz:-1},{x:8,y:3.5,z:23,nx:0,nz:-1},{x:10.5,y:3.5,z:23,nx:0,nz:-1},{x:24,y:4,z:23,nx:0,nz:-1},{x:-12,y:3.5,z:8,nx:0,nz:1},{x:-8,y:3.5,z:8,nx:0,nz:1},{x:-4,y:3.5,z:8,nx:0,nz:1},{x:4,y:3.5,z:8,nx:0,nz:1},{x:8,y:3.5,z:8,nx:0,nz:1},{x:12,y:3.5,z:8,nx:0,nz:1},{x:-31,y:4,z:14,nx:1,nz:0},{x:-29.5,y:4,z:6,nx:1,nz:0},{x:-31,y:4,z:-2,nx:1,nz:0},{x:32,y:4,z:14,nx:-1,nz:0},{x:30,y:4,z:6,nx:-1,nz:0},{x:32,y:4,z:-2,nx:-1,nz:0},{x:-12,y:3.5,z:4,nx:0,nz:-1},{x:-8,y:3.5,z:4,nx:0,nz:-1},{x:-4,y:3.5,z:4,nx:0,nz:-1},{x:4,y:3.5,z:4,nx:0,nz:-1},{x:8,y:3.5,z:4,nx:0,nz:-1},{x:12,y:3.5,z:4,nx:0,nz:-1},{x:-8,y:3.5,z:-11.5,nx:0,nz:1},{x:8,y:3.5,z:-11.5,nx:0,nz:1},{x:-24,y:11,z:-11,nx:0,nz:1,upstairs:true},{x:-8,y:11,z:-11.5,nx:0,nz:1,upstairs:true},{x:8,y:11,z:-11.5,nx:0,nz:1,upstairs:true},{x:24,y:11,z:-11,nx:0,nz:1,upstairs:true}];for(var t=0;t<this.artworks.length;t++){const r=this.artworks[t];var a=null;if(typeof r.data.index=="number"&&r.data.index<e.length&&e[r.data.index].active==undefined){a=e[r.data.index];a.active=true}if(a==null){for(var i=0;i<e.length;i++){if(!e[i].active){a=e[i];a.active=true;break}}}if(a!=null){const e=new THREE.Vector3(a.x,a.y,a.z);const t=new THREE.Vector3(a.nx,0,a.nz);r.init(this.scene,e,t);if(a.upstairs!==undefined){r.upstairs=true}}else{console.log("Error: Duplicate artwork slot reference.");this.artworks.splice(t,1);t-=1}}if(this.isDev){const t=new THREE.MeshStandardMaterial({color:0,roughness:.75,metalness:0});e.forEach(e=>{if(!e.active){const a=new THREE.Mesh(new THREE.BoxBufferGeometry(.25,.25,.25),t);a.position.set(e.x,e.y,e.z);this.scene.add(a)}})}}mouseOver(e,t){var a=[];for(var i=0,r=this.artworks.length;i<r;++i){this.artworks[i].mouseOver(e,t,this.player.position);if(this.artworks[i].isHover()){a.push(this.artworks[i])}}if(a.length>1){var s=100;var o=a[0];for(var i=0;i<a.length;++i){a[i].removeHover();const e=this.player.position.distanceTo(a[i].position);if(e<s){s=e;o=a[i]}}o.forceHover()}if(a.length){this.root.domElement.classList.add("clickable")}else{this.root.domElement.classList.remove("clickable")}}click(e,t){for(var a=0,i=this.artworks.length;a<i;++a){this.artworks[a].click(e,t,this.player.position)}}openArtworkMenu(e){document.querySelector("#gallery-controls").classList.add("display-none");if(this.domElement.dataset.active!=e.id){this.domElement.dataset.active=e.id;this.el.image.innerHTML="[ image loads here ]";this.el.title.innerHTML=e.data.title;this.el.subtitle.innerHTML=e.data.subtitle;this.el.desc.innerHTML=e.data.desc;this.el.link.innerHTML=e.data.link?`<a href='${e.data.link}' target='_blank'>Link</a>`:"";this.el.comments.innerHTML="[comments here]"}this.domElement.classList.add("active")}closeArtworkMenu(){document.querySelector("#gallery-controls").classList.remove("display-none");this.domElement.classList.remove("active")}moveToArtwork(e){this.player.moveToArtwork(e)}update(e){this.camera.getWorldDirection(this.cameraDirection);for(var t=0;t<this.artworks.length;++t){this.artworks[t].update(e,this.player,this.camera,this.cameraDirection,this.centre)}}draw(e){for(var t=0,a=this.artworks.length;t<a;++t){this.artworks[t].draw(e)}}}class k{constructor(e,t,a){this.scene=e;this.isMobile=a;this.player=this.scene.player;this.domElement=document.querySelector("#canvas-target");this.centre={x:0,y:0};this.setSize();this.rotation=new THREE.Vector2;this.timestamp=null;this.threshold={click:200,pan:200};this.scaleRotation={x:a?.75:1,y:1};document.querySelectorAll("#gallery-controls .controls__inner .control").forEach(e=>{if(!a){e.addEventListener("mousedown",e=>{this.onControlDown(e.currentTarget)});e.addEventListener("mouseup",e=>{this.onControlUp(e.currentTarget)});e.addEventListener("mouseleave",e=>{this.onControlLeave(e.currentTarget)})}else{e.addEventListener("touchstart",e=>{e.preventDefault();this.onControlDown(e.currentTarget)});e.addEventListener("touchend",e=>{e.preventDefault();this.onControlUp(e.currentTarget)})}});this.controls={up:document.querySelector("#ctrl-U"),down:document.querySelector("#ctrl-D"),left:document.querySelector("#ctrl-L"),right:document.querySelector("#ctrl-R")};this.keyboard=new S(e=>{this.onKeyboard(e)});if(!this.isMobile){this.mouse=new L(this.domElement,e=>{this.onMouseDown(e)},e=>{this.onMouseMove(e)},e=>{this.onMouseUp(e)},this.isMobile)}else{this.mouse=new L(this.domElement,e=>{this.onMouseDown(this.processTouch(e))},e=>{this.onMouseMove(this.processTouch(e))},e=>{this.onMouseUp(this.processTouch(e))},this.isMobile)}window.addEventListener("resize",()=>{this.resize()});window.addEventListener("orientationchange",()=>{setTimeout(()=>{this.resize()},125)});this.canvas=new R(this,this.domElement,t.renderer.domElement);this.floorPlan=new X(this)}processTouch(e){var t=0;var a=0;if(e.targetTouches.length){const i=this.domElement.getBoundingClientRect();const r=e.targetTouches[0];t=r.pageX-i.left;a=r.pageY-i.top}return{offsetX:t,offsetY:a}}onMouseDown(e){this.rotation.y=this.player.rotation.y;this.rotation.x=this.player.rotation.x;this.timestamp=Date.now();this.mouse.start(e);if(this.isMobile){this.onMouseMove(e)}}onMouseMove(e){this.mouse.move(e);if(this.mouse.active){if(!(this.player.keys.left||this.player.keys.right)){const t=this.rotation.x+this.mouse.delta.x/this.centre.x*this.scaleRotation.x;const a=_(this.rotation.y+this.mouse.delta.y/this.centre.y*this.scaleRotation.y,this.player.minPitch,this.player.maxPitch);if(a==this.player.minPitch||a==this.player.maxPitch){this.mouse.origin.y=e.offsetY;this.rotation.y=a}this.player.setRotation(a,t)}}else{this.floorPlan.mouseOver(this.mouse.x,this.mouse.y)}}onMouseUp(e){this.mouse.stop();if(Date.now()-this.timestamp<this.threshold.click){this.floorPlan.click(this.mouse.x,this.mouse.y)}}onControlUp(e){switch(e.dataset.dir){case"up":this.player.keys.up=false;break;case"down":this.player.keys.down=false;break;case"left":this.player.keys.left=false;break;case"right":this.player.keys.right=false;break;default:break}e.classList.remove("active")}onControlDown(e){switch(e.dataset.dir){case"up":this.player.keys.up=true;break;case"down":this.player.keys.down=true;break;case"left":this.player.keys.left=true;break;case"right":this.player.keys.right=true;break;default:break}e.classList.add("active")}onControlLeave(e){this.onControlUp(e)}onKeyboard(e){switch(e){case"a":case"A":case"ArrowLeft":this.player.keys.left=this.keyboard.keys[e];if(this.player.keys.left){this.controls.left.classList.add("active")}else{this.controls.left.classList.remove("active")}break;case"d":case"D":case"ArrowRight":this.player.keys.right=this.keyboard.keys[e];if(this.player.keys.right){this.controls.right.classList.add("active")}else{this.controls.right.classList.remove("active")}break;case"w":case"W":case"ArrowUp":this.player.keys.up=this.keyboard.keys[e];if(this.player.keys.up){this.controls.up.classList.add("active")}else{this.controls.up.classList.remove("active")}break;case"s":case"S":case"ArrowDown":this.player.keys.down=this.keyboard.keys[e];if(this.player.keys.down){this.controls.down.classList.add("active")}else{this.controls.down.classList.remove("active")}break;case" ":this.player.keys.jump=this.keyboard.keys[e];break;case"x":case"X":if(this.keyboard.keys["x"]||this.keyboard.keys["X"]){if(this.keyboard.isControl()){this.player.toggleNoclip()}this.keyboard.release("x");this.keyboard.release("X")}break;default:break}}setSize(){const e=this.domElement.getBoundingClientRect();this.centre.x=e.width/2;this.centre.y=e.height/2}resize(){this.setSize();this.canvas.resize()}update(e){this.floorPlan.update(e)}draw(){this.canvas.clear();this.floorPlan.draw(this.canvas.getContext());this.canvas.promptTouchMove(this.mouse.active&&Date.now()-this.timestamp>this.threshold.pan);if(this.player.noclip){this.canvas.promptGodMode();this.canvas.drawDevOverlay()}else{this.canvas.drawDevOverlay()}}}const z=()=>{var e=false;(function(t){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4)))e=true})(navigator.userAgent||navigator.vendor||window.opera);return e};const C=()=>{var e=false;(function(t){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4)))e=true})(navigator.userAgent||navigator.vendor||window.opera);return e};class O{constructor(e){this.isDev=window.location.host.indexOf("localhost")!=-1;this.root=e;this.openGalleryButton=document.querySelector("#open-gallery");this.openGalleryButton.onclick=(()=>{if(!this.openGalleryButton.classList.contains("is-loading")){this.openGalleryButton.classList.remove("flash");this.toggleGallery()}});document.querySelectorAll(".close-gallery").forEach(e=>{e.addEventListener("click",()=>{this.closeGalleryMenu();this.toggleGallery()})});this.initMenus();if(this.isDev){this.toggleGallery()}else{this.onMenuItem(document.querySelector("#nav-item-controls"))}}toggleGallery(){if(!this.lock){this.lock=true;this.toggleCount=this.toggleCount?this.toggleCount+1:1;const e=document.querySelector("#pane-content");const t=document.querySelector("#pane-gallery");const a=document.querySelector("#background-grid");const i=document.querySelector(".nav");const r=document.querySelector(".logo-main");if(e.classList.contains("active")){e.classList.remove("active");t.classList.add("active");a.classList.add("active");i.classList.add("active");r.classList.add("active");document.documentElement.classList.add("freeze");if(this.toggleCount==1){setTimeout(()=>{this.lock=false;t.querySelectorAll("canvas").forEach(e=>{e.classList.add("active")});this.root.activate()},this.isDev?125:1e3)}else{this.root.activate();this.lock=false}}else{t.classList.remove("active");e.classList.add("active");a.classList.remove("active");i.classList.remove("active");r.classList.remove("active");document.documentElement.classList.remove("freeze");this.root.deactivate();this.lock=false}}}closeGalleryMenu(){document.querySelectorAll("#nav-gallery .item.active, .gallery-menu .active").forEach(e=>{e.classList.remove("active")});document.querySelector("#nav-gallery .close-gallery-menu").classList.add("active");document.querySelector("#gallery-controls").classList.remove("display-none")}onMenuItem(e){if(e.dataset.active){const t=document.querySelector(e.dataset.active);if(t){e.parentNode.querySelectorAll(".active").forEach(e=>{e.classList.remove("active")});e.classList.add("active");if(e.parentNode.getAttribute("id")=="nav-content"){document.querySelectorAll(".pane-content .page.active").forEach(e=>{e.classList.remove("active")})}else{document.querySelectorAll(".gallery-menu .menu.active").forEach(e=>{e.classList.remove("active");e.querySelectorAll(".requires-activate").forEach(e=>{e.classList.remove("active")})});document.querySelector("#gallery-controls").classList.add("display-none")}t.classList.add("active");t.querySelectorAll(".requires-activate").forEach(e=>{e.classList.add("active")})}}}initMenus(){document.querySelectorAll(".pane-content-nav .item").forEach(e=>{e.addEventListener("click",e=>{this.onMenuItem(e.currentTarget)})});document.querySelectorAll(".close-gallery-menu").forEach(e=>{e.addEventListener("click",e=>{this.closeGalleryMenu()})})}}class D{constructor(){this.active=false;this.isMobile=C();this.scene=new w;this.renderer=new f(this.scene);this.surface=new k(this.scene,this.renderer,this.isMobile);this.menu=new O(this);this.maxDelta=1/10;this.loop()}deactivate(){this.active=false}activate(){this.active=true;this.now=performance.now()}loop(){requestAnimationFrame(()=>{this.loop()});if(this.active){const e=performance.now();const t=Math.min(this.maxDelta,(e-this.now)/1e3);this.now=e;this.scene.update(t);this.surface.update(t);this.renderer.draw(t);this.surface.draw()}}}window.onload=(()=>{const e=new D})}]);